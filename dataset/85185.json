{
  "bug_id": "85185",
  "issue_url": "https://github.com/llvm/llvm-project/issues/85185",
  "bug_type": "crash",
  "base_commit": "a9689c6029e3078e09e43a4efb2b2ced98e9020f",
  "knowledge_cutoff": "2024-03-14T06:14:42Z",
  "lit_test_dir": [
    "llvm/test/Transforms/LoopVectorize"
  ],
  "hints": {
    "fix_commit": "17fb3e82f6c950267bb01cc2fd2a84b0d9e9d0d8",
    "components": [
      "LoopVectorize"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp": [
        [
          1031,
          1037
        ],
        [
          1040,
          1047
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp": [
        "VPlanTransforms::truncateToMinimalBitwidths"
      ]
    }
  },
  "patch": "commit 17fb3e82f6c950267bb01cc2fd2a84b0d9e9d0d8\nAuthor: Florian Hahn <flo@fhahn.com>\nDate:   Tue Apr 23 11:50:25 2024 +0100\n\n    [VPlan] Skip extending ICmp results in trunateToMinimalBitwidth.\n    \n    Results of icmp don't need extending after truncating their operands, as\n    the result will always be i1. Skip them during extending.\n    \n    Fixes https://github.com/llvm/llvm-project/issues/79742\n    Fixes https://github.com/llvm/llvm-project/issues/85185\n\ndiff --git a/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp b/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp\nindex 007dc3f89b3f..9580dc4a27f6 100644\n--- a/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp\n+++ b/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp\n@@ -1031,7 +1031,9 @@ void VPlanTransforms::truncateToMinimalBitwidths(\n       if (auto *VPW = dyn_cast<VPRecipeWithIRFlags>(&R))\n         VPW->dropPoisonGeneratingFlags();\n \n-      if (OldResSizeInBits != NewResSizeInBits) {\n+      using namespace llvm::VPlanPatternMatch;\n+      if (OldResSizeInBits != NewResSizeInBits &&\n+          !match(&R, m_Binary<Instruction::ICmp>(m_VPValue(), m_VPValue()))) {\n         // Extend result to original width.\n         auto *Ext =\n             new VPWidenCastRecipe(Instruction::ZExt, ResultVPV, OldResTy);\n@@ -1040,8 +1042,9 @@ void VPlanTransforms::truncateToMinimalBitwidths(\n         Ext->setOperand(0, ResultVPV);\n         assert(OldResSizeInBits > NewResSizeInBits && \"Nothing to shrink?\");\n       } else\n-        assert(cast<VPWidenRecipe>(&R)->getOpcode() == Instruction::ICmp &&\n-               \"Only ICmps should not need extending the result.\");\n+        assert(\n+            match(&R, m_Binary<Instruction::ICmp>(m_VPValue(), m_VPValue())) &&\n+            \"Only ICmps should not need extending the result.\");\n \n       assert(!isa<VPWidenStoreRecipe>(&R) && \"stores cannot be narrowed\");\n       if (isa<VPWidenLoadRecipe>(&R))\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/LoopVectorize/trunc-extended-icmps.ll",
      "commands": [
        "opt -p loop-vectorize -force-vector-width=4 -force-vector-interleave=1 -S %s"
      ],
      "tests": [
        {
          "test_name": "test_icmp_constant_op_zext",
          "test_body": "target datalayout = \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\"\n\ndefine i32 @test_icmp_constant_op_zext(ptr %dst) {\nentry:\n  br label %loop\n\nloop:                                             ; preds = %loop, %entry\n  %iv = phi i16 [ 1, %entry ], [ %iv.next, %loop ]\n  %c = icmp ne i64 7304878031173690989, 0\n  %c.ext = zext i1 %c to i64\n  %or = or i64 7304878031173690989, %c.ext\n  %or.trunc = trunc i64 %or to i8\n  %gep = getelementptr i8, ptr %dst, i16 %iv\n  store i8 %or.trunc, ptr %gep, align 1\n  %iv.next = add i16 %iv, 1\n  %ec = icmp eq i16 %iv.next, 1000\n  br i1 %ec, label %exit, label %loop\n\nexit:                                             ; preds = %loop\n  ret i32 0\n}\n"
        },
        {
          "test_name": "ext_cmp",
          "test_body": "target datalayout = \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\"\n\ndefine void @ext_cmp(ptr %src.1, ptr %src.2, ptr noalias %dst) {\nentry:\n  br label %loop\n\nloop:                                             ; preds = %loop, %entry\n  %iv = phi i64 [ 0, %entry ], [ %iv.next, %loop ]\n  %gep.src.1 = getelementptr inbounds i16, ptr %src.1, i64 %iv\n  %i2 = load i16, ptr %gep.src.1, align 2\n  %i3 = sext i16 %i2 to i32\n  %c.1 = icmp sgt i32 0, %i3\n  %gep.src.2 = getelementptr inbounds i8, ptr %src.2, i64 %iv\n  %i4 = load i8, ptr %gep.src.2, align 2\n  %i5 = zext i8 %i4 to i32\n  %i6 = select i1 %c.1, i32 0, i32 %i5\n  %i7 = and i32 %i6, 0\n  %i8 = trunc nuw nsw i32 %i7 to i16\n  %gep.dst = getelementptr inbounds i16, ptr %dst, i64 %iv\n  store i16 %i8, ptr %gep.dst, align 2\n  %iv.next = add nsw i64 %iv, 1\n  %ec = icmp eq i64 %iv.next, 1000\n  br i1 %ec, label %exit, label %loop\n\nexit:                                             ; preds = %loop\n  ret void\n}\n"
        },
        {
          "test_name": "test_icmp_and_op_zext",
          "test_body": "target datalayout = \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\"\n\ndefine i32 @test_icmp_and_op_zext(ptr %dst, i64 %a) {\nentry:\n  %and = and i64 %a, 7304878031173690989\n  br label %loop\n\nloop:                                             ; preds = %loop, %entry\n  %iv = phi i16 [ 1, %entry ], [ %iv.next, %loop ]\n  %c = icmp ne i64 %and, 0\n  %c.ext = zext i1 %c to i64\n  %or = or i64 %and, %c.ext\n  %or.trunc = trunc i64 %or to i8\n  %gep = getelementptr i8, ptr %dst, i16 %iv\n  store i8 %or.trunc, ptr %gep, align 1\n  %iv.next = add i16 %iv, 1\n  %ec = icmp eq i16 %iv.next, 1000\n  br i1 %ec, label %exit, label %loop\n\nexit:                                             ; preds = %loop\n  ret i32 0\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[LoopVectorize] Assertion `OldResSizeInBits > NewResSizeInBits && \"Nothing to shrink?\"' failed.",
    "body": "Reduced test case: https://godbolt.org/z/azsja4sW6\r\n```\r\ntarget datalayout = \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\"\r\ntarget triple = \"riscv64-unknown-linux-gnu\"\r\n\r\n@g_110 = internal global [3 x i64] [i64 7304878031173690989, i64 7304878031173690989, i64 7304878031173690989]\r\n@g_338 = internal global ptr @g_339\r\n@g_339 = internal global ptr getelementptr (i8, ptr @g_110, i64 8)\r\n@__const.func_48.l_209 = private constant [10 x [2 x [2 x ptr]]] [[2 x [2 x ptr]] [[2 x ptr] zeroinitializer, [2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null]], [2 x [2 x ptr]] [[2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null], [2 x ptr] [ptr null, ptr getelementptr (i8, ptr @g_110, i64 8)]], [2 x [2 x ptr]] [[2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr getelementptr (i8, ptr @g_110, i64 8)], [2 x ptr] zeroinitializer], [2 x [2 x ptr]] [[2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null], [2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null]], [2 x [2 x ptr]] [[2 x ptr] [ptr null, ptr getelementptr (i8, ptr @g_110, i64 8)], [2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr getelementptr (i8, ptr @g_110, i64 8)]], [2 x [2 x ptr]] [[2 x ptr] zeroinitializer, [2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null]], [2 x [2 x ptr]] [[2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null], [2 x ptr] [ptr null, ptr getelementptr (i8, ptr @g_110, i64 8)]], [2 x [2 x ptr]] [[2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr getelementptr (i8, ptr @g_110, i64 8)], [2 x ptr] zeroinitializer], [2 x [2 x ptr]] [[2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null], [2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr null]], [2 x [2 x ptr]] [[2 x ptr] [ptr null, ptr getelementptr (i8, ptr @g_110, i64 8)], [2 x ptr] [ptr getelementptr (i8, ptr @g_110, i64 8), ptr getelementptr (i8, ptr @g_110, i64 8)]]]\r\n\r\ndefine i32 @func_40(ptr %g_202) #0 {\r\nentry:\r\n  br label %for.cond484\r\n\r\ncommon.ret:                                       ; preds = %for.cond484\r\n  ret i32 0\r\n\r\nfor.cond484:                                      ; preds = %for.body488, %entry\r\n  %l_337.0 = phi i16 [ %inc563, %for.body488 ], [ 1, %entry ]\r\n  %cmp486.not = icmp eq i16 %l_337.0, 0\r\n  br i1 %cmp486.not, label %common.ret, label %for.body488\r\n\r\nfor.body488:                                      ; preds = %for.cond484\r\n  %0 = load ptr, ptr @g_338, align 8\r\n  %1 = load ptr, ptr %0, align 8\r\n  %2 = load i64, ptr %1, align 8\r\n  %3 = load ptr, ptr @g_339, align 8\r\n  %4 = load i64, ptr %3, align 8\r\n  %cmp540 = icmp ne i64 %4, 0\r\n  %conv542 = zext i1 %cmp540 to i64\r\n  %or543 = or i64 %2, %conv542\r\n  %conv544 = trunc i64 %or543 to i8\r\n  store i8 %conv544, ptr %g_202, align 1\r\n  %inc563 = add i16 %l_337.0, 1\r\n  br label %for.cond484\r\n}\r\n\r\ndefine i64 @func_48(ptr %p) {\r\nentry:                                ; preds = %for.cond162, %entry\r\n  call void @llvm.memcpy.p0.p0.i64(ptr %p, ptr @__const.func_48.l_209, i64 8, i1 false)\r\n  ret i64 0\r\n}\r\n\r\n; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)\r\ndeclare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1\r\n\r\nattributes #0 = { \"target-features\"=\"+64bit,+a,+c,+d,+f,+m,+relax,+v,+zicsr,+zifencei,+zve32f,+zve32x,+zve64d,+zve64f,+zve64x,+zvl128b,+zvl32b,+zvl64b,-e,-experimental-smmpm,-experimental-smnpm,-experimental-ssnpm,-experimental-sspm,-experimental-ssqosid,-experimental-supm,-experimental-zaamo,-experimental-zabha,-experimental-zalasr,-experimental-zalrsc,-experimental-zcmop,-experimental-zfbfmin,-experimental-zicfilp,-experimental-zicfiss,-experimental-zimop,-experimental-ztso,-experimental-zvfbfmin,-experimental-zvfbfwma,-h,-shcounterenw,-shgatpa,-shtvala,-shvsatpa,-shvstvala,-shvstvecd,-smaia,-smepmp,-ssaia,-ssccptr,-sscofpmf,-sscounterenw,-ssstateen,-ssstrict,-sstc,-sstvala,-sstvecd,-ssu64xl,-svade,-svadu,-svbare,-svinval,-svnapot,-svpbmt,-xcvalu,-xcvbi,-xcvbitmanip,-xcvelw,-xcvmac,-xcvmem,-xcvsimd,-xsfvcp,-xsfvfnrclipxfqf,-xsfvfwmaccqqq,-xsfvqmaccdod,-xsfvqmaccqoq,-xtheadba,-xtheadbb,-xtheadbs,-xtheadcmo,-xtheadcondmov,-xtheadfmemidx,-xtheadmac,-xtheadmemidx,-xtheadmempair,-xtheadsync,-xtheadvdot,-xventanacondops,-za128rs,-za64rs,-zacas,-zawrs,-zba,-zbb,-zbc,-zbkb,-zbkc,-zbkx,-zbs,-zca,-zcb,-zcd,-zce,-zcf,-zcmp,-zcmt,-zdinx,-zfa,-zfh,-zfhmin,-zfinx,-zhinx,-zhinxmin,-zic64b,-zicbom,-zicbop,-zicboz,-ziccamoa,-ziccif,-zicclsm,-ziccrse,-zicntr,-zicond,-zihintntl,-zihintpause,-zihpm,-zk,-zkn,-zknd,-zkne,-zknh,-zkr,-zks,-zksed,-zksh,-zkt,-zmmul,-zvbb,-zvbc,-zvfh,-zvfhmin,-zvkb,-zvkg,-zvkn,-zvknc,-zvkned,-zvkng,-zvknha,-zvknhb,-zvks,-zvksc,-zvksed,-zvksg,-zvksh,-zvkt,-zvl1024b,-zvl16384b,-zvl2048b,-zvl256b,-zvl32768b,-zvl4096b,-zvl512b,-zvl65536b,-zvl8192b\" }\r\nattributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }\r\n```\r\n```\r\n> opt -O3 test.ll -S\r\nopt: /home/dtcxzyw/WorkSpace/Projects/compilers/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp:1009: static void llvm::VPlanTransforms::truncateToMinimalBitwidths(llvm::VPlan&, const llvm::MapVector<llvm::Instruction*, long unsigned int>&, llvm::LLVMContext&): Assertion `OldResSizeInBits > NewResSizeInBits && \"Nothing to shrink?\"' failed.\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.      Program arguments: bin/opt -O3 reduced.ll -S\r\n #0 0x00007fbf395e9380 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/libLLVMSupport.so.19.0git+0x1e9380)\r\n #1 0x00007fbf395e678f llvm::sys::RunSignalHandlers() (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/libLLVMSupport.so.19.0git+0x1e678f)\r\n #2 0x00007fbf395e68e5 SignalHandler(int) Signals.cpp:0:0\r\n #3 0x00007fbf39042520 (/lib/x86_64-linux-gnu/libc.so.6+0x42520)\r\n #4 0x00007fbf390969fc __pthread_kill_implementation ./nptl/pthread_kill.c:44:76\r\n #5 0x00007fbf390969fc __pthread_kill_internal ./nptl/pthread_kill.c:78:10\r\n #6 0x00007fbf390969fc pthread_kill ./nptl/pthread_kill.c:89:10\r\n #7 0x00007fbf39042476 gsignal ./signal/../sysdeps/posix/raise.c:27:6\r\n #8 0x00007fbf390287f3 abort ./stdlib/abort.c:81:7\r\n #9 0x00007fbf3902871b _nl_load_domain ./intl/loadmsgcat.c:1177:9\r\n#10 0x00007fbf39039e96 (/lib/x86_64-linux-gnu/libc.so.6+0x39e96)\r\n#11 0x00007fbf345e44ed llvm::VPlanTransforms::truncateToMinimalBitwidths(llvm::VPlan&, llvm::MapVector<llvm::Instruction*, unsigned long, llvm::DenseMap<llvm::Instruction*, unsigned int, llvm::DenseMapInfo<llvm::Instruction*, void>, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>>, llvm::SmallVector<std::pair<llvm::Instruction*, unsigned long>, 0u>> const&, llvm::LLVMContext&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMVectorize.so.19.0git+0x1e44ed)\r\n#12 0x00007fbf344b460e llvm::LoopVectorizationPlanner::buildVPlansWithVPRecipes(llvm::ElementCount, llvm::ElementCount) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMVectorize.so.19.0git+0xb460e)\r\n#13 0x00007fbf344b4c69 llvm::LoopVectorizationPlanner::plan(llvm::ElementCount, unsigned int) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMVectorize.so.19.0git+0xb4c69)\r\n#14 0x00007fbf344b6f89 llvm::LoopVectorizePass::processLoop(llvm::Loop*) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMVectorize.so.19.0git+0xb6f89)\r\n#15 0x00007fbf344b9e1e llvm::LoopVectorizePass::runImpl(llvm::Function&, llvm::ScalarEvolution&, llvm::LoopInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::BlockFrequencyInfo*, llvm::TargetLibraryInfo*, llvm::DemandedBits&, llvm::AssumptionCache&, llvm::LoopAccessInfoManager&, llvm::OptimizationRemarkEmitter&, llvm::ProfileSummaryInfo*) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMVectorize.so.19.0git+0xb9e1e)\r\n#16 0x00007fbf344baf6d llvm::LoopVectorizePass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMVectorize.so.19.0git+0xbaf6d)\r\n#17 0x00007fbf34e6d9b6 llvm::detail::PassModel<llvm::Function, llvm::LoopVectorizePass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMPasses.so.19.0git+0x6d9b6)\r\n#18 0x00007fbf323190f1 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMCore.so.19.0git+0x3190f1)\r\n#19 0x00007fbf380a5576 llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMX86CodeGen.so.19.0git+0xa5576)\r\n#20 0x00007fbf32317deb llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMCore.so.19.0git+0x317deb)\r\n#21 0x00007fbf380a6966 llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMX86CodeGen.so.19.0git+0xa6966)\r\n#22 0x00007fbf32315c61 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/../lib/libLLVMCore.so.19.0git+0x315c61)\r\n#23 0x00007fbf39997565 llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/libLLVMOptDriver.so.19.0git+0x24565)\r\n#24 0x00007fbf399a2166 optMain (/home/dtcxzyw/WorkSpace/Projects/compilers/LLVM/llvm-build/bin/../lib/libLLVMOptDriver.so.19.0git+0x2f166)\r\n#25 0x00007fbf39029d90 __libc_start_call_main ./csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n#26 0x00007fbf39029e40 call_init ./csu/../csu/libc-start.c:128:20\r\n#27 0x00007fbf39029e40 __libc_start_main ./csu/../csu/libc-start.c:379:5\r\n#28 0x00005624c49fa095 _start (bin/opt+0x1095)\r\nAborted (core dumped)\r\n```\r\n\r\nLLVM version: eb21ee49cff081911d99d29ba887c1715fc2b8fc",
    "author": "dtcxzyw",
    "labels": [
      "vectorizers",
      "crash-on-valid"
    ],
    "comments": [
      {
        "author": "dtcxzyw",
        "body": "cc @fhahn @topperc @wangpc-pp @lukel97 "
      },
      {
        "author": "dtcxzyw",
        "body": "```\r\nclang -O3 -w -I/usr/include/csmith --target=riscv64-linux-gnu -march=rv64gcv test.c\r\n```\r\n\r\nOriginal C code generated by csmith:\r\n```\r\n/*\r\n * This is a RANDOMLY GENERATED PROGRAM.\r\n *\r\n * Generator: csmith 2.4.0\r\n * Git version: 9fd1f83\r\n * Options:   --max-funcs 3 --max-block-depth 3 --quiet --builtins --no-packed-struct --no-unions --no-bitfields --no-volatiles --no-volatile-pointers --output ./csmith2024-03-14@00:19/test55230.c\r\n * Seed:      9690956228142285630\r\n */\r\n\r\n#include \"csmith.h\"\r\n\r\n\r\nstatic long __undefined;\r\n\r\n#define CSMITH_BUILTIN_SAFE(NAME, TYPE) static int builtin_safe_##NAME(TYPE x) { return x != 0 ? __builtin_##NAME(x) : (int)(sizeof(TYPE) * 8); }\r\n#define CSMITH_BUILTIN_SAFE_VARIANTS(NAME) CSMITH_BUILTIN_SAFE(NAME##s, short) CSMITH_BUILTIN_SAFE(NAME, int) CSMITH_BUILTIN_SAFE(NAME##l, long) CSMITH_BUILTIN_SAFE(NAME##ll, long long)\r\nCSMITH_BUILTIN_SAFE_VARIANTS(clz)\r\nCSMITH_BUILTIN_SAFE_VARIANTS(ctz)\r\n#define CSMITH_ABS(NAME, TYPE) static TYPE builtin_##NAME(TYPE x) { return x < 0 ? -x : x; }\r\nCSMITH_ABS(abs, int) CSMITH_ABS(absl, long) CSMITH_ABS(absll, long long)\r\n\t\r\n\r\n\r\n\r\nstatic int32_t g_5[9][4][6] = {{{(-1L),(-1L),0xECF80BF5L,1L,0x185F3C63L,(-3L)},{0xD36A9F43L,(-5L),0L,0x4DAED1CAL,9L,0xC12142F0L},{(-9L),1L,(-3L),1L,1L,0L},{0L,0xD7753980L,(-9L),(-9L),0x93665DF2L,0x990E567FL}},{{0xECF80BF5L,(-5L),0xC7D86202L,1L,0xF703C578L,(-1L)},{0xECF80BF5L,9L,0x4FBA9A6DL,(-9L),0xAE0B0DE9L,(-1L)},{0L,0x93665DF2L,9L,1L,0x1ACA42B0L,0x2F771CA5L},{(-9L),(-1L),1L,0x4DAED1CAL,(-1L),0xC558A6D5L}},{{0xD3F6B9C8L,(-10L),(-4L),0xF4B42950L,(-10L),1L},{0x92A3AAE9L,0x990E567FL,4L,1L,0xF72DF1C6L,(-1L)},{0L,1L,0xBBB155BCL,1L,0L,0xED3A2783L},{0x92A3AAE9L,9L,0x776958BDL,0xF4B42950L,(-9L),0xBBB155BCL}},{{0xD3F6B9C8L,0x16C10904L,0x6C6E95CFL,(-1L),0x2852DAF1L,1L},{4L,1L,0xBBB155BCL,0xBBB155BCL,1L,4L},{0x946E3D93L,0L,(-1L),0xD9E1A75BL,0xC12142F0L,1L},{0x6C6E95CFL,0x16C10904L,0xD3F6B9C8L,0x2C204984L,(-1L),0x4CA0A5EEL}},{{0x6C6E95CFL,0x807DBB90L,0x2C204984L,0xD9E1A75BL,0L,(-1L)},{0x946E3D93L,0xC12142F0L,0x15A41B5FL,0xBBB155BCL,(-1L),0x4102E3BBL},{4L,0x990E567FL,0x92A3AAE9L,(-1L),0x2F771CA5L,0x4CA0A5EEL},{0xD3F6B9C8L,(-9L),1L,0xF4B42950L,(-1L),0x6C6E95CFL}},{{0x92A3AAE9L,0xECF80BF5L,(-1L),1L,(-1L),(-1L)},{0L,0x2852DAF1L,0x946E3D93L,1L,0x990E567FL,1L},{0x92A3AAE9L,0x807DBB90L,1L,0xF4B42950L,0L,0x946E3D93L},{0xD3F6B9C8L,1L,0x776958BDL,(-1L),0xC12142F0L,0xF4B42950L}},{{4L,(-3L),0x946E3D93L,0xBBB155BCL,(-3L),(-1L)},{0x946E3D93L,1L,(-1L),0xD9E1A75BL,1L,0x6C6E95CFL},{0x6C6E95CFL,1L,(-4L),0x2C204984L,(-9L),(-1L)},{0x6C6E95CFL,(-8L),0x92A3AAE9L,0xD9E1A75BL,0x990E567FL,0x5F55C530L}},{{0x946E3D93L,1L,0xCA4A3808L,0xBBB155BCL,0x4DAED1CAL,(-1L)},{4L,0xECF80BF5L,0xDA64A110L,(-1L),(-10L),(-1L)},{0xD3F6B9C8L,0xAA56C61BL,0xD3F6B9C8L,0xF4B42950L,0x2F771CA5L,0x776958BDL},{0x92A3AAE9L,0L,(-1L),1L,0x4DAED1CAL,4L}},{{0L,0xC12142F0L,1L,1L,0xECF80BF5L,0xF4B42950L},{0x92A3AAE9L,(-8L),0x6C6E95CFL,0xF4B42950L,(-1L),1L},{0xD3F6B9C8L,0x60E43B24L,1L,(-1L),1L,0xED3A2783L},{4L,0L,1L,0xBBB155BCL,0L,(-1L)}}};\r\nstatic int64_t g_67 = (-4L);\r\nstatic int32_t *g_73 = (void*)0;\r\nstatic uint32_t g_74 = 4294967295UL;\r\nstatic uint8_t g_77 = 0x6DL;\r\nstatic int32_t *g_80 = &g_5[0][1][1];\r\nstatic int32_t ** const g_79 = &g_80;\r\nstatic int8_t g_90 = (-3L);\r\nstatic const int32_t g_101 = 0x348AE819L;\r\nstatic int32_t g_105 = 0x586A53F6L;\r\nstatic const int32_t *g_104 = &g_105;\r\nstatic int64_t g_110[3] = {0x656023DDCFA9A66DLL,0x656023DDCFA9A66DLL,0x656023DDCFA9A66DLL};\r\nstatic uint16_t g_111 = 7UL;\r\nstatic int16_t g_134[7][3][2] = {{{0x5371L,0x5371L},{0x5371L,1L},{0xE65EL,(-6L)}},{{1L,(-6L)},{0xE65EL,1L},{0x5371L,0x5371L}},{{0x5371L,1L},{0xE65EL,(-6L)},{1L,(-6L)}},{{0xE4A1L,0xE65EL},{1L,1L},{1L,0xE65EL}},{{0xE4A1L,0x5371L},{0xE65EL,0x5371L},{0xE4A1L,0xE65EL}},{{1L,1L},{1L,0xE65EL},{0xE4A1L,0x5371L}},{{0xE65EL,0x5371L},{0xE4A1L,0xE65EL},{1L,1L}}};\r\nstatic uint8_t g_155 = 0x34L;\r\nstatic int32_t * const *g_172[2] = {(void*)0,(void*)0};\r\nstatic int32_t g_176 = 6L;\r\nstatic int8_t g_182 = (-8L);\r\nstatic int8_t g_184 = 0xA2L;\r\nstatic int8_t *g_202 = &g_90;\r\nstatic int8_t **g_201 = &g_202;\r\nstatic int8_t ***g_200[6][6][3] = {{{&g_201,&g_201,&g_201},{&g_201,(void*)0,(void*)0},{&g_201,(void*)0,&g_201},{&g_201,&g_201,&g_201},{&g_201,&g_201,&g_201},{&g_201,&g_201,(void*)0}},{{&g_201,&g_201,(void*)0},{&g_201,&g_201,&g_201},{&g_201,(void*)0,(void*)0},{&g_201,(void*)0,(void*)0},{(void*)0,&g_201,&g_201},{&g_201,&g_201,&g_201}},{{&g_201,&g_201,&g_201},{&g_201,&g_201,(void*)0},{&g_201,&g_201,&g_201},{&g_201,(void*)0,(void*)0},{&g_201,(void*)0,&g_201},{&g_201,&g_201,&g_201}},{{&g_201,&g_201,&g_201},{&g_201,&g_201,(void*)0},{&g_201,&g_201,(void*)0},{&g_201,&g_201,&g_201},{&g_201,(void*)0,(void*)0},{&g_201,(void*)0,(void*)0}},{{(void*)0,&g_201,&g_201},{&g_201,&g_201,&g_201},{&g_201,&g_201,&g_201},{&g_201,&g_201,(void*)0},{&g_201,&g_201,&g_201},{&g_201,(void*)0,(void*)0}},{{&g_201,(void*)0,&g_201},{&g_201,&g_201,&g_201},{&g_201,&g_201,&g_201},{&g_201,&g_201,(void*)0},{&g_201,&g_201,(void*)0},{&g_201,&g_201,&g_201}}};\r\nstatic const int32_t g_225 = (-1L);\r\nstatic uint32_t g_249[5][5][8] = {{{0xC0666732L,1UL,0UL,8UL,0x5BE746B7L,0xD4884AEBL,18446744073709551611UL,0xC131D2BCL},{18446744073709551615UL,1UL,0x3889E2D7L,0xC4ABB5DCL,8UL,0xD4884AEBL,3UL,0x83FC0541L},{0x68782AA2L,1UL,0x1A69B8F8L,0UL,0x25AC3C5AL,0x6B7D0C1DL,0x724DCDECL,0x1A69B8F8L},{0x83FC0541L,0UL,0xC4ABB5DCL,0x04B8F0B0L,4UL,0xF6A4DDB7L,0x0DDB4F84L,18446744073709551615UL},{0x6B7D0C1DL,0x0DDB4F84L,18446744073709551608UL,0x83FC0541L,0x3889E2D7L,0xA8EEAABAL,0x25AC3C5AL,0x68782AA2L}},{{3UL,0xF6A4DDB7L,0UL,18446744073709551615UL,1UL,0x5BE746B7L,0x83FC0541L,0xC4ABB5DCL},{18446744073709551610UL,5UL,18446744073709551611UL,2UL,0x1A69B8F8L,0x219C0631L,18446744073709551612UL,0x83FC0541L},{0x04B8F0B0L,0UL,1UL,0x50294A87L,18446744073709551612UL,0x50294A87L,1UL,0UL},{0UL,4UL,0x56B84274L,0x70311437L,0x5710BDC5L,0UL,0x219C0631L,18446744073709551610UL},{0xC4ABB5DCL,18446744073709551610UL,0UL,0x6B7D0C1DL,0UL,0xC4ABB5DCL,0x219C0631L,18446744073709551615UL}},{{8UL,0x6B7D0C1DL,0x56B84274L,0UL,0xF6A4DDB7L,18446744073709551615UL,1UL,18446744073709551610UL},{0xF6A4DDB7L,18446744073709551615UL,1UL,18446744073709551610UL,0UL,18446744073709551611UL,8UL,0x68782AA2L},{0x8705FFA2L,0UL,0UL,0UL,5UL,2UL,0UL,8UL},{8UL,0xD4884AEBL,0x3DE83FC4L,0x70311437L,1UL,0UL,18446744073709551610UL,4UL},{0x289B81ABL,3UL,18446744073709551615UL,0xA8EEAABAL,1UL,0UL,0xC0666732L,0xC4ABB5DCL}},{{8UL,0UL,0x0DDB4F84L,1UL,0x724DCDECL,0x724DCDECL,1UL,0x0DDB4F84L},{0x1A69B8F8L,0x1A69B8F8L,0xA8EEAABAL,18446744073709551610UL,18446744073709551608UL,18446744073709551611UL,18446744073709551615UL,0xF0E96915L},{2UL,0x5EAAA4D1L,0x68782AA2L,0xC4ABB5DCL,18446744073709551612UL,0x04B8F0B0L,0UL,0xF0E96915L},{0x5EAAA4D1L,5UL,0x3DE83FC4L,18446744073709551610UL,3UL,0UL,1UL,0x0DDB4F84L},{18446744073709551610UL,18446744073709551610UL,2UL,1UL,0xA8EEAABAL,0xC131D2BCL,18446744073709551615UL,0xC4ABB5DCL}},{{18446744073709551615UL,0UL,0x70311437L,0xA8EEAABAL,0xE529A985L,1UL,1UL,4UL},{0x724DCDECL,5UL,0UL,0x70311437L,18446744073709551608UL,1UL,1UL,8UL},{0xC4ABB5DCL,0UL,0x6B7D0C1DL,0UL,18446744073709551610UL,0xC4ABB5DCL,8UL,0x68782AA2L},{0xF0E96915L,5UL,0x56B84274L,18446744073709551610UL,0xAD54A111L,0x5EAAA4D1L,0xAD54A111L,18446744073709551610UL},{0x289B81ABL,0xC0666732L,0x289B81ABL,0UL,0UL,0UL,18446744073709551615UL,18446744073709551615UL}}};\r\nstatic const int16_t g_299 = 8L;\r\nstatic const int16_t g_301 = 0x8E05L;\r\nstatic const int16_t *g_300 = &g_301;\r\nstatic const int32_t *g_316 = &g_225;\r\nstatic uint16_t ** const g_318 = (void*)0;\r\nstatic int64_t *g_339 = &g_110[1];\r\nstatic int64_t **g_338 = &g_339;\r\nstatic int32_t **g_354 = &g_80;\r\nstatic int32_t ***g_353 = &g_354;\r\n\r\n\r\n\r\nstatic uint32_t  func_40(void);\r\nstatic uint64_t  func_48(int32_t * p_49, uint16_t  p_50, int32_t ** const  p_51, int32_t ** p_52, int16_t  p_53);\r\nstatic int32_t * func_54(int8_t  p_55, uint32_t  p_56);\r\n\r\n\r\n\r\n\r\n\r\nstatic uint32_t  func_40(void)\r\n{ \r\n    int32_t *l_42[6] = {&g_5[0][1][1],&g_5[0][1][1],&g_5[0][2][1],&g_5[0][1][1],&g_5[0][1][1],&g_5[0][2][1]};\r\n    int32_t **l_41 = &l_42[1];\r\n    uint64_t l_43 = 0UL;\r\n    int64_t *l_66[4];\r\n    uint16_t l_68 = 3UL;\r\n    int32_t *l_72 = &g_5[0][1][1];\r\n    int32_t **l_71[3];\r\n    uint64_t *l_75 = (void*)0;\r\n    uint64_t *l_76[3];\r\n    int8_t ** const l_259 = &g_202;\r\n    uint32_t l_280 = 1UL;\r\n    uint16_t l_337 = 0UL;\r\n    int8_t l_362[1][9][7] = {{{0L,0L,0L,0L,0L,0L,0L},{0x48L,0x4DL,0x4DL,0x48L,0x48L,0x4DL,0x4DL},{0L,0L,0L,0L,0L,0L,0L},{0x48L,0x48L,0x4DL,0x4DL,0x48L,0x48L,0x4DL},{0L,0L,0L,0L,0L,0L,0L},{0x48L,0x4DL,0x4DL,0x48L,0x48L,0x4DL,0x4DL},{0L,0L,0L,0L,0L,0L,0L},{0x48L,0x48L,0x4DL,0x4DL,0x48L,0x48L,0x4DL},{0L,0L,0L,0L,0L,0L,0L}}};\r\n    int8_t l_368 = 0xE7L;\r\n    int8_t l_391[3][3][2];\r\n    int i, j, k;\r\n    for (i = 0; i < 4; i++)\r\n        l_66[i] = &g_67;\r\n    for (i = 0; i < 3; i++)\r\n        l_71[i] = &l_72;\r\n    for (i = 0; i < 3; i++)\r\n        l_76[i] = (void*)0;\r\n    for (i = 0; i < 3; i++)\r\n    {\r\n        for (j = 0; j < 3; j++)\r\n        {\r\n            for (k = 0; k < 2; k++)\r\n                l_391[i][j][k] = 0x74L;\r\n        }\r\n    }\r\nlbl_355:\r\n    (*l_41) = &g_5[8][2][4];\r\n    ++l_43;\r\n    if ((((((safe_mod_func_int64_t_s_s(((**l_41) != func_48(func_54((g_5[0][1][1] , (((safe_mod_func_int8_t_s_s((g_5[3][1][2] , ((safe_mod_func_uint16_t_u_u(0x4426L, 1L)) | builtin_safe_clzs((safe_rshift_func_int64_t_s_u((safe_unary_minus_func_uint64_t_u((g_77 ^= (safe_add_func_int64_t_s_s((l_68 = g_5[8][2][3]), (g_74 ^= __builtin_bitreverse16((g_67 == (&g_5[8][1][4] != (g_73 = (*l_41))))))))))), g_67))))), g_5[5][1][3])) | g_5[7][1][3]) != g_5[0][1][1])), (*l_72)), (**l_41), g_79, &l_42[1], g_5[0][1][1])), g_225)) , 0xD1E4L) , g_155) , (*l_41)) == (void*)0))\r\n    { \r\n        int32_t **l_252 = &l_42[0];\r\n        uint16_t l_257 = 1UL;\r\n        int8_t ****l_258 = &g_200[5][2][0];\r\n        int32_t l_276 = 0x8E11130FL;\r\n        if (((void*)0 != l_252))\r\n        { \r\n            const uint32_t *l_255 = (void*)0;\r\n            int32_t l_256[8][4][6] = {{{(-1L),0x367CCFB7L,0x367CCFB7L,(-1L),0x95E4A585L,1L},{0x03B656B3L,3L,(-1L),1L,0x1C45CC51L,0x243B861FL},{0x1C45CC51L,0x95E4A585L,0x7BF52351L,0x95E4A585L,0x1C45CC51L,0x3D17C77CL},{0x243B861FL,3L,0xCA4C1BA4L,0x2AEA7C9AL,0x95E4A585L,(-1L)}},{{(-1L),0x367CCFB7L,3L,3L,0x367CCFB7L,(-1L)},{0x2AEA7C9AL,1L,0xCA4C1BA4L,0x1C45CC51L,(-1L),0x3D17C77CL},{0x367CCFB7L,0x243B861FL,0x7BF52351L,(-1L),0x7BF52351L,0x243B861FL},{0x367CCFB7L,0x3D17C77CL,(-1L),0x1C45CC51L,0xCA4C1BA4L,1L}},{{0x2AEA7C9AL,(-1L),0x367CCFB7L,3L,3L,0x367CCFB7L},{(-1L),(-1L),0x95E4A585L,0x2AEA7C9AL,0xCA4C1BA4L,3L},{0x243B861FL,0x3D17C77CL,0x1C45CC51L,0x95E4A585L,0x7BF52351L,0x95E4A585L},{0x1C45CC51L,0x243B861FL,0x1C45CC51L,1L,(-1L),3L}},{{0x03B656B3L,1L,0x95E4A585L,(-1L),0x367CCFB7L,0x367CCFB7L},{(-1L),0x367CCFB7L,0x367CCFB7L,(-1L),0x95E4A585L,1L},{0x03B656B3L,3L,(-1L),1L,0x1C45CC51L,0x243B861FL},{0x1C45CC51L,0x95E4A585L,0x7BF52351L,0x95E4A585L,0x1C45CC51L,0x3D17C77CL}},{{0x243B861FL,3L,0xCA4C1BA4L,0x2AEA7C9AL,0x95E4A585L,(-1L)},{(-1L),0x367CCFB7L,3L,3L,0x367CCFB7L,(-1L)},{0x2AEA7C9AL,1L,0xCA4C1BA4L,0x1C45CC51L,(-1L),0x3D17C77CL},{0x367CCFB7L,0x243B861FL,0x7BF52351L,(-1L),0x7BF52351L,0x243B861FL}},{{0x367CCFB7L,0x3D17C77CL,(-1L),0x1C45CC51L,0xCA4C1BA4L,1L},{0x2AEA7C9AL,(-1L),0x367CCFB7L,3L,3L,0x367CCFB7L},{(-1L),(-1L),0x95E4A585L,0x2AEA7C9AL,0xCA4C1BA4L,3L},{0x243B861FL,0x3D17C77CL,0x1C45CC51L,0x95E4A585L,0x7BF52351L,0x95E4A585L}},{{0x1C45CC51L,0x243B861FL,0x1C45CC51L,1L,(-1L),3L},{0x03B656B3L,1L,0x95E4A585L,(-1L),0x367CCFB7L,0x367CCFB7L},{(-1L),0x367CCFB7L,0x367CCFB7L,(-1L),0x95E4A585L,1L},{0x03B656B3L,3L,(-1L),1L,0x1C45CC51L,0x243B861FL}},{{0x1C45CC51L,0x243B861FL,0x03B656B3L,0x243B861FL,3L,0xCA4C1BA4L},{0x2AEA7C9AL,0x367CCFB7L,0x7BF52351L,1L,0x243B861FL,0x95E4A585L},{0x95E4A585L,(-1L),0x367CCFB7L,0x367CCFB7L,(-1L),0x95E4A585L},{1L,0x3D17C77CL,0x7BF52351L,3L,0x95E4A585L,0xCA4C1BA4L}}};\r\n            int16_t *l_260 = (void*)0;\r\n            int16_t *l_261[2];\r\n            int32_t l_262[5] = {0xD1E03DD3L,0xD1E03DD3L,0xD1E03DD3L,0xD1E03DD3L,0xD1E03DD3L};\r\n            int i, j, k;\r\n            for (i = 0; i < 2; i++)\r\n                l_261[i] = &g_134[5][1][1];\r\n            l_262[4] = (safe_div_func_int8_t_s_s((((g_155 != ((g_74 && 1L) | (l_257 ^= (l_256[0][1][2] = ((*g_73) = (l_255 != l_255)))))) , (l_256[0][1][2] ^= (((**l_252) , (void*)0) == l_259))) >= g_101), l_262[0]));\r\n        }\r\n        else\r\n        { \r\n            uint32_t l_279 = 0xB636E366L;\r\n            l_280 ^= builtin_safe_ctzs(((((**g_201) |= (g_101 < (safe_sub_func_int16_t_s_s((safe_mul_func_uint16_t_u_u(((((*g_73) = (**l_252)) != (g_101 , (((safe_div_func_uint32_t_u_u((((void*)0 != (*g_201)) > (g_105 == ((safe_unary_minus_func_uint8_t_u(__builtin_ffsl((safe_rshift_func_int64_t_s_s((safe_sub_func_int8_t_s_s((g_134[5][1][1] != (l_276 , (safe_mul_func_int64_t_s_s(l_279, g_74)))), g_182)), g_134[0][1][1]))))) != g_110[1]))), l_279)) <= g_134[5][0][0]) , g_249[4][1][5]))) != l_279), 0x20D1L)), g_225)))) ^ 0xDCL) >= g_74));\r\n        }\r\n        for (l_257 = 7; (l_257 == 16); l_257++)\r\n        { \r\n            uint8_t l_285[10][5][5] = {{{0UL,0x52L,0x9DL,0x0DL,2UL},{1UL,0x71L,247UL,0x94L,255UL},{0xD1L,0UL,0x89L,254UL,251UL},{254UL,0x57L,0UL,0x94L,0UL},{0x15L,255UL,251UL,0x0DL,251UL}},{{251UL,251UL,0x17L,1UL,0x57L},{0x68L,254UL,0xC0L,0x7DL,0UL},{0x71L,0x87L,253UL,254UL,0UL},{2UL,254UL,0x02L,0x51L,0x89L},{0xD2L,251UL,254UL,251UL,0xD2L}},{{0xD6L,255UL,255UL,7UL,1UL},{0x16L,0x57L,0x94L,0x71L,254UL},{255UL,0UL,3UL,255UL,1UL},{0UL,0x71L,0x16L,0xD2L,0xD2L},{1UL,0x52L,1UL,0x6CL,0x89L}},{{0x22L,247UL,0xCDL,0x16L,0UL},{0x9DL,7UL,1UL,0x10L,0UL},{7UL,0UL,0xCDL,0UL,0x57L},{0x35L,4UL,1UL,0xBCL,251UL},{0UL,0x17L,0x16L,0x22L,0UL}},{{0x05L,255UL,3UL,0x52L,251UL},{0xCDL,253UL,0x94L,7UL,255UL},{0x05L,255UL,255UL,251UL,2UL},{0UL,254UL,254UL,0UL,0x16L},{0x35L,0x10L,0x02L,0UL,7UL}},{{7UL,0x94L,253UL,0xCDL,0UL},{0x9DL,0x5FL,0xC0L,0UL,0x13L},{0x22L,0x16L,0x17L,0UL,0x17L},{1UL,0xBCL,251UL,251UL,3UL},{0UL,0xCDL,0UL,7UL,0UL}},{{255UL,0x9AL,0x89L,0x52L,0x68L},{0x16L,0xCDL,247UL,0x22L,253UL},{0xD6L,0xBCL,0x9DL,4UL,251UL},{0xCDL,254UL,0xD2L,0x71L,0UL},{0x9DL,251UL,0x68L,0x6CL,0x72L}},{{0xD2L,0UL,1UL,254UL,0UL},{255UL,0x6CL,0x9DL,254UL,251UL},{0UL,0xE8L,0UL,0xCDL,0x17L},{0xC0L,7UL,0x02L,0x52L,255UL},{0xE8L,0x17L,7UL,0xD2L,1UL}},{{7UL,0UL,0x02L,0x10L,0x35L},{251UL,0x87L,0UL,0UL,0x87L},{0x78L,0x9AL,0x9DL,255UL,251UL},{0UL,0x94L,1UL,0xE8L,0x16L},{0x02L,4UL,0x68L,1UL,0UL}},{{0UL,253UL,0xD2L,251UL,254UL},{0x78L,2UL,0x72L,0x07L,0x9DL},{251UL,0xD2L,253UL,0UL,0UL},{7UL,7UL,251UL,255UL,2UL},{0xE8L,1UL,0x94L,0UL,0UL}}};\r\n            int i, j, k;\r\n            for (g_155 = 0; (g_155 != 12); g_155 = safe_add_func_int64_t_s_s(g_155, 4))\r\n            { \r\n                uint16_t *l_286 = &l_68;\r\n                uint32_t *l_291 = &g_74;\r\n                if (l_285[7][2][4])\r\n                    break;\r\n                (**l_252) = (0xE175L < ((**l_41) < ((((g_134[0][2][0] && ((*l_286) = g_155)) < (safe_rshift_func_uint16_t_u_u(g_5[0][1][1], (safe_mul_func_uint32_t_u_u(g_5[2][3][5], 0xDDBD9FEDL))))) & 4L) | ((((*l_291)--) < 4294967295UL) & (*g_202)))));\r\n            }\r\n            for (g_77 = 0; (g_77 <= 2); g_77 += 1)\r\n            { \r\n                int16_t *l_296[7];\r\n                const int16_t *l_298 = &g_299;\r\n                const int16_t **l_297[2];\r\n                int i;\r\n                for (i = 0; i < 7; i++)\r\n                    l_296[i] = &g_134[6][1][0];\r\n                for (i = 0; i < 2; i++)\r\n                    l_297[i] = &l_298;\r\n                if ((*g_73))\r\n                    break;\r\n                (*g_73) = (((((void*)0 == &l_280) , &g_201) == (g_176 , &l_259)) < g_77);\r\n                (*g_73) = ((**l_252) ^ (safe_sub_func_int8_t_s_s((l_296[2] == (g_300 = &g_134[5][1][1])), (&g_200[3][5][0] == (g_249[2][4][1] , &g_200[5][2][0])))));\r\n            }\r\n        }\r\n        return g_105;\r\n    }\r\n    else\r\n    { \r\n        int8_t l_308 = 0x17L;\r\n        uint64_t *l_309[8][5] = {{(void*)0,&l_43,(void*)0,&l_43,(void*)0},{(void*)0,&l_43,&l_43,(void*)0,&l_43},{(void*)0,&l_43,&l_43,(void*)0,(void*)0},{&l_43,(void*)0,(void*)0,&l_43,&l_43},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{&l_43,&l_43,(void*)0,&l_43,(void*)0},{&l_43,&l_43,(void*)0,(void*)0,&l_43},{(void*)0,&l_43,(void*)0,(void*)0,&l_43}};\r\n        int32_t ** const l_310 = &l_72;\r\n        int64_t l_311 = 0xC67241FA93327847LL;\r\n        const int32_t l_312 = 0xA8508A1BL;\r\n        int32_t l_367 = 0L;\r\n        int32_t l_369 = 0x6DBCAECCL;\r\n        int32_t l_370[5][8][6] = {{{0L,0x41AB50CEL,(-3L),0xEC402B7BL,0x33DB8A2AL,(-3L)},{0x0F84EF83L,0x41AB50CEL,1L,0x5F0F64E0L,0x33DB8A2AL,(-1L)},{0x855D9B71L,0x41AB50CEL,0x33DB8A2AL,0x6705C72FL,0x33DB8A2AL,0x41AB50CEL},{0L,0x41AB50CEL,(-3L),0xEC402B7BL,0x33DB8A2AL,(-3L)},{0x0F84EF83L,0x41AB50CEL,1L,0x5F0F64E0L,0x33DB8A2AL,(-1L)},{0x855D9B71L,0x41AB50CEL,0x33DB8A2AL,0x6705C72FL,0x33DB8A2AL,0x41AB50CEL},{0L,0x41AB50CEL,(-3L),0xEC402B7BL,0x33DB8A2AL,(-3L)},{0x0F84EF83L,0x41AB50CEL,1L,0x5F0F64E0L,0x33DB8A2AL,(-1L)}},{{0x855D9B71L,0x41AB50CEL,0x33DB8A2AL,0x6705C72FL,0x33DB8A2AL,0x41AB50CEL},{0L,0x41AB50CEL,(-3L),0xEC402B7BL,0x33DB8A2AL,(-3L)},{0x0F84EF83L,0x41AB50CEL,1L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L}},{{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L}},{{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L}},{{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L},{1L,0xBE007212L,0xF218D3E2L,0x41AB50CEL,0x7F1F7511L,8L},{(-3L),0xBE007212L,0x7F1F7511L,(-1L),0x7F1F7511L,0xBE007212L},{0x33DB8A2AL,0xBE007212L,(-1L),(-3L),0x7F1F7511L,1L}}};\r\n        int32_t l_407 = (-9L);\r\n        int16_t l_410 = 5L;\r\n        int i, j, k;\r\n        if ((safe_add_func_int8_t_s_s(((**g_201) = (safe_lshift_func_int16_t_s_u((builtin_absl((func_48((*g_79), (safe_add_func_int32_t_s_s((&l_43 == (l_308 , l_309[2][0])), (*g_73))), l_310, &g_80, (*g_300)) < l_311)) & 0UL), 4))), 0L)))\r\n        { \r\n            int16_t l_315[9] = {0xF465L,(-10L),0xF465L,(-10L),0xF465L,(-10L),0xF465L,(-10L),0xF465L};\r\n            const int32_t **l_317 = &g_316;\r\n            int i;\r\n            (*l_72) = l_312;\r\n            for (l_43 = 0; (l_43 < 18); l_43 = safe_add_func_int8_t_s_s(l_43, 1))\r\n            { \r\n                l_315[5] |= 0L;\r\n                (*l_72) = (*g_104);\r\n            }\r\n            (*l_317) = g_316;\r\n            for (g_182 = 2; (g_182 >= 0); g_182 -= 1)\r\n            { \r\n                uint16_t *l_321 = (void*)0;\r\n                uint16_t **l_320[6] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};\r\n                uint16_t ***l_319 = &l_320[2];\r\n                int i;\r\n                (*l_319) = g_318;\r\n            }\r\n        }\r\n        else\r\n        { \r\n            int32_t l_332 = (-1L);\r\n            int32_t l_333 = 0xB63E53D3L;\r\n            int64_t ***l_340 = &g_338;\r\n            uint64_t **l_342[3];\r\n            uint64_t ***l_341 = &l_342[0];\r\n            int32_t **l_348 = &l_72;\r\n            int32_t l_357 = 9L;\r\n            int32_t l_359 = (-6L);\r\n            int32_t l_372 = 0x8316FD0FL;\r\n            int32_t l_374 = (-1L);\r\n            int32_t l_376 = 0xCD617C4CL;\r\n            int32_t l_377 = (-1L);\r\n            int16_t l_378[5][8][1] = {{{0x3D59L},{0xC582L},{0x2AC3L},{(-1L)},{0x2AC3L},{0xC582L},{0x3D59L},{8L}},{{0xC137L},{8L},{0x3D59L},{0xC582L},{0x2AC3L},{(-1L)},{0x2AC3L},{0xC582L}},{{0x3D59L},{8L},{0xC137L},{8L},{0x3D59L},{0xC582L},{0x2AC3L},{(-1L)}},{{0x2AC3L},{0xC582L},{0x3D59L},{8L},{0xC137L},{8L},{0x3D59L},{0xC582L}},{{0x2AC3L},{(-1L)},{0x2AC3L},{0xC582L},{0x3D59L},{8L},{0xC137L},{8L}}};\r\n            int32_t l_379[2][10][10] = {{{0xF4C002DCL,0xA91AA256L,1L,7L,1L,0x0D332BFAL,1L,7L,1L,0xA91AA256L},{0L,0x52C48CFEL,4L,0x45E01240L,0x9D0BE2F7L,0x0DFC7753L,9L,1L,0L,0L},{0x52C48CFEL,1L,0x0DFC7753L,0x0D332BFAL,0x0D332BFAL,0x0DFC7753L,1L,0x52C48CFEL,0x45E01240L,9L},{0L,4L,7L,0x52C48CFEL,0x053DE949L,0x0D332BFAL,0x36EB0189L,9L,0x36EB0189L,0x0D332BFAL},{0xF4C002DCL,0x053DE949L,7L,0x053DE949L,0xF4C002DCL,9L,0x45E01240L,0x52C48CFEL,1L,0x0DFC7753L},{0x45E01240L,0x9D0BE2F7L,0x0DFC7753L,9L,1L,0L,0L,1L,9L,0x0DFC7753L},{9L,9L,4L,0x0DFC7753L,0xF4C002DCL,0xA91AA256L,1L,7L,1L,0x0D332BFAL},{7L,0x36EB0189L,1L,1L,0x053DE949L,1L,1L,0x36EB0189L,7L,9L},{0x9D0BE2F7L,9L,1L,0xF4C002DCL,0x0D332BFAL,0L,0L,0x053DE949L,0x053DE949L,0L},{0x36EB0189L,0x9D0BE2F7L,0xF4C002DCL,0xF4C002DCL,0x9D0BE2F7L,0x36EB0189L,0x45E01240L,0L,7L,0xA91AA256L}},{{0xA91AA256L,0x053DE949L,9L,1L,1L,4L,0x36EB0189L,4L,1L,1L},{0xA91AA256L,4L,0xA91AA256L,0x0DFC7753L,0L,0x36EB0189L,1L,0x0D332BFAL,9L,0L},{0x36EB0189L,1L,0x0D332BFAL,9L,0L,0L,9L,0x0D332BFAL,1L,0x36EB0189L},{0x9D0BE2F7L,0x52C48CFEL,0xA91AA256L,0x053DE949L,9L,1L,1L,4L,0x36EB0189L,4L},{7L,0xA91AA256L,9L,0x52C48CFEL,9L,0xA91AA256L,7L,0L,0x45E01240L,0x36EB0189L},{7L,1L,0xA91AA256L,0xF4C002DCL,0x0DFC7753L,4L,9L,9L,4L,0x0DFC7753L},{0L,1L,1L,0L,4L,7L,0x52C48CFEL,0x053DE949L,0x0D332BFAL,0x36EB0189L},{0xA91AA256L,0L,0x0D332BFAL,0x52C48CFEL,1L,0xF4C002DCL,1L,0x52C48CFEL,0x0D332BFAL,0L},{0x0DFC7753L,0x45E01240L,1L,0L,1L,0x9D0BE2F7L,7L,0x0D332BFAL,4L,4L},{0x45E01240L,0x36EB0189L,0x9D0BE2F7L,0xF4C002DCL,0xF4C002DCL,0x9D0BE2F7L,0x36EB0189L,0x45E01240L,0L,7L}}};\r\n            int i, j, k;\r\n            for (i = 0; i < 3; i++)\r\n                l_342[i] = &l_76[1];\r\n            l_337 ^= (safe_rshift_func_int32_t_s_s((**g_79), (((safe_sub_func_int16_t_s_s((safe_add_func_int8_t_s_s((safe_lshift_func_int16_t_s_s((*g_300), 0)), g_155)), (((safe_lshift_func_int32_t_s_u((l_332 ^= (0xD72910C2L > (g_318 != (void*)0))), 22)) | (0x87L > (l_333 >= (safe_rshift_func_uint8_t_u_u(((((~(0x7F2193591E391CD6LL != (-1L))) , (**l_310)) , &g_104) != (void*)0), 3))))) , (*l_72)))) , (*g_300)) > g_67)));\r\n            (*l_340) = g_338;\r\n            (*l_341) = (void*)0;\r\n            if ((*g_73))\r\n            { \r\n                uint8_t l_343[2];\r\n                int16_t *l_349[9][5][4] = {{{&g_134[5][1][1],&g_134[5][1][1],&g_134[0][0][0],&g_134[1][2][0]},{&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1]},{&g_134[5][1][1],(void*)0,&g_134[5][0][1],(void*)0},{&g_134[6][0][1],&g_134[0][2][0],(void*)0,&g_134[1][0][1]},{&g_134[1][2][0],&g_134[5][1][1],&g_134[1][2][0],&g_134[5][1][1]}},{{(void*)0,&g_134[0][0][0],&g_134[5][1][1],&g_134[1][2][0]},{&g_134[3][0][0],&g_134[5][1][1],&g_134[6][0][1],&g_134[0][0][0]},{&g_134[5][1][1],&g_134[1][0][1],&g_134[6][0][1],&g_134[5][1][1]},{&g_134[3][0][0],&g_134[0][2][0],&g_134[5][1][1],&g_134[5][0][1]},{(void*)0,&g_134[5][1][1],&g_134[1][2][0],(void*)0}},{{&g_134[1][2][0],(void*)0,(void*)0,&g_134[1][2][0]},{&g_134[6][0][1],&g_134[5][1][1],&g_134[5][0][1],&g_134[5][1][1]},{&g_134[5][1][1],(void*)0,&g_134[5][1][1],&g_134[6][0][1]},{&g_134[5][1][1],&g_134[0][2][0],&g_134[0][0][0],&g_134[6][0][1]},{&g_134[5][1][1],(void*)0,&g_134[1][2][0],&g_134[5][1][1]}},{{(void*)0,&g_134[5][1][1],&g_134[5][1][1],&g_134[1][2][0]},{&g_134[0][2][0],(void*)0,&g_134[1][0][1],(void*)0},{&g_134[5][1][1],&g_134[5][1][1],(void*)0,&g_134[5][0][1]},{(void*)0,&g_134[0][2][0],&g_134[5][1][1],&g_134[5][1][1]},{&g_134[3][2][1],&g_134[1][0][1],&g_134[1][2][0],&g_134[0][0][0]}},{{&g_134[3][2][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[1][2][0]},{(void*)0,&g_134[0][0][0],(void*)0,&g_134[5][1][1]},{&g_134[5][1][1],&g_134[5][1][1],&g_134[1][0][1],&g_134[1][0][1]},{&g_134[0][2][0],&g_134[0][2][0],&g_134[5][1][1],(void*)0},{(void*)0,(void*)0,&g_134[1][2][0],&g_134[5][1][1]}},{{&g_134[5][1][1],&g_134[5][1][1],&g_134[0][0][0],&g_134[1][2][0]},{&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1]},{&g_134[5][1][1],(void*)0,&g_134[5][0][1],(void*)0},{&g_134[6][0][1],&g_134[0][2][0],(void*)0,&g_134[1][0][1]},{&g_134[1][2][0],&g_134[5][1][1],&g_134[1][2][0],&g_134[5][1][1]}},{{(void*)0,&g_134[0][0][0],&g_134[5][1][1],&g_134[1][2][0]},{&g_134[3][0][0],&g_134[5][1][1],&g_134[6][0][1],&g_134[0][0][0]},{&g_134[5][1][1],&g_134[1][0][1],&g_134[6][0][1],&g_134[5][1][1]},{&g_134[3][0][0],&g_134[0][2][0],&g_134[5][1][1],&g_134[5][0][1]},{(void*)0,&g_134[5][1][1],&g_134[1][2][0],(void*)0}},{{&g_134[6][0][1],&g_134[1][2][0],&g_134[1][2][0],&g_134[6][0][1]},{&g_134[5][1][1],(void*)0,&g_134[1][0][1],&g_134[5][1][1]},{&g_134[3][2][1],&g_134[3][0][0],(void*)0,&g_134[5][1][1]},{&g_134[5][1][1],&g_134[5][1][1],(void*)0,&g_134[5][1][1]},{&g_134[1][0][1],&g_134[3][0][0],&g_134[6][0][1],&g_134[5][1][1]}},{{&g_134[5][1][1],(void*)0,&g_134[3][2][1],&g_134[6][0][1]},{&g_134[5][1][1],&g_134[1][2][0],&g_134[5][1][1],&g_134[1][2][0]},{&g_134[3][2][1],&g_134[6][0][1],(void*)0,&g_134[1][0][1]},{(void*)0,&g_134[5][1][1],(void*)0,(void*)0},{(void*)0,&g_134[5][1][1],&g_134[6][0][1],(void*)0}}};\r\n                uint16_t *l_351 = &l_68;\r\n                int i, j, k;\r\n                for (i = 0; i < 2; i++)\r\n                    l_343[i] = 255UL;\r\n                (*l_310) = &l_333;\r\n                l_343[1]--;\r\n                (**l_41) = (safe_sub_func_uint32_t_u_u((1L | func_48((*g_79), g_74, &g_73, l_348, ((**l_310) &= (*g_300)))), (+((*l_351) ^= g_5[0][1][1]))));\r\n                (*l_41) = (void*)0;\r\n            }\r\n            else\r\n            { \r\n                int32_t ****l_352 = (void*)0;\r\n                int32_t l_356 = 0xFE6B2039L;\r\n                int32_t l_358 = 0x5520C3E2L;\r\n                int32_t l_360 = 1L;\r\n                int32_t l_361 = 5L;\r\n                int32_t l_363 = (-1L);\r\n                uint8_t l_364 = 0x56L;\r\n                int64_t l_371 = 0xEA710FC8D34F615DLL;\r\n                int32_t l_373 = 0L;\r\n                int32_t l_375[4][4] = {{0x60506CD4L,0x110603E7L,0x110603E7L,0x60506CD4L},{0x110603E7L,0x60506CD4L,0x110603E7L,0x110603E7L},{0x60506CD4L,0x60506CD4L,0x11A272CDL,0x60506CD4L},{0x60506CD4L,0x110603E7L,0x110603E7L,0x60506CD4L}};\r\n                uint8_t l_380 = 7UL;\r\n                int i, j;\r\n                (**l_348) &= ((g_353 = (void*)0) != (void*)0);\r\n                if (l_333)\r\n                    goto lbl_355;\r\n                --l_364;\r\n                l_380--;\r\n            }\r\n        }\r\n        for (l_337 = 11; (l_337 != 55); l_337++)\r\n        { \r\n            int32_t *l_387 = &l_369;\r\n            int32_t l_396[1][7][9] = {{{(-3L),0x99A39F0FL,0xC25A649DL,0x1F25A220L,7L,0x1F25A220L,0xC25A649DL,0x99A39F0FL,(-3L)},{0L,0L,(-1L),5L,(-5L),0x18C8E5E5L,(-1L),0x18C8E5E5L,(-5L)},{0x09879A45L,0xDAD13AE0L,0xDAD13AE0L,0x09879A45L,0x1F25A220L,8L,1L,0L,0xE035835DL},{0L,(-5L),(-1L),0x79B543F2L,0x79B543F2L,(-1L),(-5L),0L,0xC54D25D5L},{(-3L),0L,0xE035835DL,0L,0x1F25A220L,0L,0L,0x1F25A220L,0L},{5L,(-1L),5L,0L,(-5L),0x79B543F2L,(-4L),0xC54D25D5L,0xC54D25D5L},{0xDAD13AE0L,(-3L),7L,0L,7L,(-3L),0xDAD13AE0L,1L,0xE035835DL}}};\r\n            int16_t *l_405 = (void*)0;\r\n            int16_t *l_406 = &g_134[5][1][1];\r\n            uint32_t *l_408 = &l_280;\r\n            uint16_t l_409 = 1UL;\r\n            int i, j, k;\r\n            (*g_354) = (*g_79);\r\n            for (g_67 = 0; (g_67 == 15); g_67++)\r\n            { \r\n                l_387 = (*g_354);\r\n                (*l_310) = ((*g_354) = (void*)0);\r\n            }\r\n            (*g_73) = (safe_rshift_func_int8_t_s_u(((((safe_unary_minus_func_uint32_t_u(l_391[1][2][1])) | (safe_rshift_func_int8_t_s_s((l_409 ^= ((0xABL >= ((*g_202) = ((**g_338) | (((safe_mul_func_uint32_t_u_u(l_396[0][3][3], (((*g_300) != __builtin_popcountl(((*l_408) = (safe_sub_func_int32_t_s_s((*g_104), ((safe_add_func_int8_t_s_s((safe_lshift_func_int16_t_s_u((((safe_div_func_uint8_t_u_u(((((*g_300) , (((*l_406) = (*g_300)) | l_407)) >= g_90) , g_225), 0x56L)) && (*g_339)) > 0x724D2F83281A6109LL), 6)), 0UL)) > g_111)))))) > (*g_300)))) , (*g_339)) != (-1L))))) <= g_67)), 1))) || 0x5590F30F91AB941DLL) , l_410), 7));\r\n        }\r\n    }\r\n    return g_299;\r\n}\r\n\r\n\r\n\r\n\r\nstatic uint64_t  func_48(int32_t * p_49, uint16_t  p_50, int32_t ** const  p_51, int32_t ** p_52, int16_t  p_53)\r\n{ \r\n    uint8_t l_81[6];\r\n    int32_t **l_87[2][1];\r\n    uint64_t l_159 = 0x41914FAB1C43D16ALL;\r\n    int i, j;\r\n    for (i = 0; i < 6; i++)\r\n        l_81[i] = 0x22L;\r\n    for (i = 0; i < 2; i++)\r\n    {\r\n        for (j = 0; j < 1; j++)\r\n            l_87[i][j] = (void*)0;\r\n    }\r\nlbl_139:\r\n    for (g_77 = 0; (g_77 <= 5); g_77 += 1)\r\n    { \r\n        int16_t l_106 = 0xF462L;\r\n        int32_t l_109 = 9L;\r\n        int32_t l_135[8];\r\n        int i;\r\n        for (i = 0; i < 8; i++)\r\n            l_135[i] = 0x72C94400L;\r\n        for (g_74 = 0; (g_74 <= 5); g_74 += 1)\r\n        { \r\n            int32_t **l_86 = (void*)0;\r\n            int32_t l_108 = 0xAEC393EFL;\r\n            int64_t *l_118 = &g_110[1];\r\n            int64_t *l_120 = &g_67;\r\n            int i;\r\n            if (((safe_mod_func_uint16_t_u_u(((l_81[g_77] , ((l_86 = &p_49) == l_87[1][0])) && (!0L)), g_77)) ^ __builtin_bitreverse8(g_67)))\r\n            { \r\n                int8_t *l_89 = &g_90;\r\n                int32_t l_91[5][4][7] = {{{1L,0x020167D4L,1L,0x966AC17BL,0xA973EA53L,(-10L),0x37A6A02DL},{(-1L),0x0E3ADE07L,(-1L),0x0E3ADE07L,(-1L),(-1L),0xA784AB27L},{0xDF5A3EA2L,(-10L),0xA6E81757L,0x7F053A17L,0xA6E81757L,(-10L),0xDF5A3EA2L},{0x8BC4D1B8L,0xA784AB27L,0x9BD4ED2FL,(-1L),0xA784AB27L,(-1L),0x9BD4ED2FL}},{{0xDF5A3EA2L,0x7F053A17L,(-8L),0x020167D4L,0L,0x56E852B3L,0L},{(-1L),0x9BD4ED2FL,0x9BD4ED2FL,(-1L),(-1L),0x8BC4D1B8L,(-1L)},{1L,0x3BA053C9L,0xA6E81757L,0x966AC17BL,0L,0x51AD1D35L,0x37A6A02DL},{0x0E3ADE07L,(-1L),(-1L),0xA784AB27L,0xA784AB27L,(-1L),(-1L)}},{{0L,(-10L),1L,0x3BA053C9L,0xA6E81757L,0x966AC17BL,0L},{0x8BC4D1B8L,(-1L),0x8BC4D1B8L,(-1L),(-1L),0x9BD4ED2FL,0x9BD4ED2FL},{0xA973EA53L,0x3BA053C9L,0xDF5A3EA2L,0x966AC17BL,0x37A6A02DL,0x7F053A17L,1L},{0x8BC4D1B8L,(-1L),3L,0x8BC4D1B8L,3L,(-1L),0x8BC4D1B8L}},{{0xAE897915L,0x51AD1D35L,(-8L),0xB01FDC4DL,1L,0xB01FDC4DL,(-8L)},{0x8BC4D1B8L,0x8BC4D1B8L,0xA784AB27L,0x9BD4ED2FL,(-1L),0xA784AB27L,(-1L)},{0x37A6A02DL,0x56E852B3L,(-8L),(-10L),0x6DB30096L,0x6DCB1CB9L,0x37A6A02DL},{(-1L),(-1L),3L,3L,(-1L),(-1L),(-1L)}},{{0xA6E81757L,(-10L),0xDF5A3EA2L,0x51AD1D35L,1L,0x7F053A17L,0x37A6A02DL},{(-1L),(-1L),(-1L),(-1L),3L,3L,(-1L)},{0xAE897915L,(-10L),0xAE897915L,0xB01FDC4DL,0x37A6A02DL,0x56E852B3L,(-8L)},{0x9BD4ED2FL,(-1L),0xA784AB27L,(-1L),0x9BD4ED2FL,0xA784AB27L,0x8BC4D1B8L}}};\r\n                const int32_t *l_100 = &g_101;\r\n                const int32_t **l_99 = &l_100;\r\n                const int32_t *l_103 = &g_5[0][1][1];\r\n                const int32_t **l_102[7] = {&l_103,&l_103,&l_103,&l_103,&l_103,&l_103,&l_103};\r\n                int i, j, k;\r\n                g_104 = ((*l_99) = func_54(((((((*l_89) = 0xA0L) < 0UL) == l_91[0][0][4]) , ((((g_74 < ((safe_add_func_int8_t_s_s(l_91[2][1][3], ((safe_mul_func_uint64_t_u_u(p_53, p_50)) || ((safe_add_func_uint16_t_u_u(p_53, (+(**l_86)))) < p_50)))) , (*g_80))) || 0xC1ABDF3D50AE7E29LL) , p_50) >= l_91[3][3][5])) ^ 0x0CBB83B9CC4C9798LL), p_50));\r\n            }\r\n            else\r\n            { \r\n                int64_t l_107 = 0xC21763526E243DB1LL;\r\n                int64_t **l_119 = (void*)0;\r\n                int16_t *l_133[9] = {&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1],&g_134[5][1][1]};\r\n                int32_t l_136 = 0x1A207E5DL;\r\n                int i;\r\n                l_106 ^= (**p_52);\r\n                --g_111;\r\n                l_136 |= ((p_53 > (safe_mul_func_uint32_t_u_u((((((safe_div_func_int8_t_s_s((&g_67 != (l_120 = l_118)), (safe_mod_func_uint64_t_u_u(((safe_add_func_uint8_t_u_u((**l_86), g_111)) >= ((safe_add_func_uint8_t_u_u(p_53, l_106)) >= ((safe_add_func_uint16_t_u_u((safe_mod_func_uint16_t_u_u((safe_mul_func_int16_t_s_s((l_135[4] |= l_109), 65535UL)), g_67)), 5L)) && g_74))), l_107)))) < 9L) != 0x9C12L) > p_50) && (**l_86)), g_90))) > g_67);\r\n                (*g_79) = (*g_79);\r\n            }\r\n            if ((**g_79))\r\n                break;\r\n        }\r\n    }\r\n    for (g_105 = 0; (g_105 >= 2); g_105 = safe_add_func_uint16_t_u_u(g_105, 2))\r\n    { \r\n        int32_t l_185 = (-9L);\r\n        int32_t l_196[8][5][6] = {{{1L,(-8L),0x9D4C55FEL,0x9D4C55FEL,(-8L),1L},{0xA9A624D6L,0x943FDF45L,1L,0xC982E48AL,0L,(-1L)},{1L,1L,0x0164FC3CL,0L,0x0271A9D6L,0L},{1L,0x20EF1F20L,0L,0xC982E48AL,0x5D223059L,(-1L)},{0xA9A624D6L,0L,0x76905738L,0x9D4C55FEL,1L,0x2FACAF78L}},{{1L,1L,(-1L),0L,(-1L),3L},{0x5E842F9DL,0x4038CBAFL,0x20EF1F20L,(-3L),(-2L),1L},{0x20335818L,0L,0xA9A624D6L,0x76905738L,(-10L),0L},{0xDA63785BL,0xC982E48AL,0xFE577C6FL,1L,0L,0x4089F89DL},{9L,0x1C5CEBEFL,0L,1L,0L,(-2L)}},{{(-1L),(-1L),(-3L),0x4089F89DL,0x943FDF45L,0x9D4C55FEL},{(-1L),0x0164FC3CL,0x5E842F9DL,0x20EF1F20L,0x5E842F9DL,0x0164FC3CL},{(-1L),(-2L),0x91FBB6F2L,(-2L),(-1L),(-8L)},{(-8L),0x0271A9D6L,0x0665424DL,0L,0xF3C58D0DL,0x20335818L},{0x1D632548L,0x0271A9D6L,(-1L),0x4EB00865L,(-1L),(-8L)}},{{1L,(-2L),0L,3L,0x5E842F9DL,1L},{0L,0x0164FC3CL,0x0DFF901EL,1L,0x943FDF45L,0xDA63785BL},{(-1L),(-1L),0x20335818L,0L,0L,9L},{(-8L),9L,0L,0x89892F3EL,1L,0x0665424DL},{0x2FACAF78L,0xE5116365L,0x4089F89DL,(-1L),0x1CC4F055L,0L}},{{0x1D632548L,(-2L),0L,(-3L),0x943FDF45L,(-1L)},{0x4EB00865L,0L,0L,0L,(-2L),0xA9A624D6L},{(-1L),8L,(-2L),0x76905738L,0x76905738L,(-2L)},{0x7DB7C053L,0x7DB7C053L,1L,(-1L),0x0164FC3CL,0xEF9C2F65L},{0x20335818L,0x1D632548L,1L,(-8L),1L,1L}},{{(-2L),0x20335818L,1L,(-10L),0x7DB7C053L,0xEF9C2F65L},{(-8L),(-10L),1L,0L,0L,(-2L)},{0L,0L,(-2L),1L,0xDA63785BL,0xA9A624D6L},{(-1L),0x2FACAF78L,0L,(-2L),3L,(-1L)},{3L,0xEF9C2F65L,0L,(-8L),(-1L),0L}},{{0xA4568502L,(-1L),0x4089F89DL,0x2FACAF78L,(-1L),0x0665424DL},{0xFE577C6FL,1L,0L,0x4089F89DL,0L,9L},{(-1L),0x0665424DL,1L,0x2197AC8AL,0xEF9C2F65L,(-2L)},{1L,1L,(-1L),(-1L),0L,(-1L)},{(-1L),(-3L),(-1L),0L,(-1L),(-1L)}},{{0L,0x1C5CEBEFL,0x4EB00865L,0x0164FC3CL,0L,1L},{0L,3L,(-1L),0x0164FC3CL,0x9D4C55FEL,0L},{0L,0x20EF1F20L,0x2197AC8AL,0L,0xF3C58D0DL,0x9D4C55FEL},{(-1L),1L,0x89892F3EL,(-1L),(-2L),0x54F00AFEL},{1L,0xA9A624D6L,1L,0x2197AC8AL,0x5D223059L,0x943FDF45L}}};\r\n        const int64_t *l_209[10][2][2] = {{{(void*)0,&g_67},{&g_110[1],&g_67}},{{&g_110[1],&g_67},{(void*)0,&g_110[1]}},{{&g_110[1],&g_110[1]},{(void*)0,&g_67}},{{&g_110[1],&g_67},{&g_110[1],&g_67}},{{(void*)0,&g_110[1]},{&g_110[1],&g_110[1]}},{{(void*)0,&g_67},{&g_110[1],&g_67}},{{&g_110[1],&g_67},{(void*)0,&g_110[1]}},{{&g_110[1],&g_110[1]},{(void*)0,&g_67}},{{&g_110[1],&g_67},{&g_110[1],&g_67}},{{(void*)0,&g_110[1]},{&g_110[1],&g_110[1]}}};\r\n        const int32_t *l_224 = &g_225;\r\n        int i, j, k;\r\n        if (p_50)\r\n            goto lbl_139;\r\n        if ((*g_80))\r\n        { \r\n            int32_t l_158[10][5][5] = {{{(-3L),(-1L),1L,(-8L),0x095D0D4AL},{0x0A797810L,0x095D0D4AL,(-10L),5L,1L},{0x533E9976L,8L,0x16522E3AL,(-6L),(-5L)},{3L,1L,0L,(-10L),0x993F83C6L},{(-2L),7L,1L,(-1L),(-6L)}},{{0x533E9976L,6L,0x993F83C6L,0x16522E3AL,(-8L)},{(-1L),(-6L),6L,1L,1L},{1L,(-4L),0x91E8CE6DL,(-2L),1L},{(-9L),(-1L),0x16522E3AL,0x91E8CE6DL,(-8L)},{1L,0x91E8CE6DL,0x0A797810L,0x993F83C6L,(-6L)}},{{(-2L),2L,0x3F513C30L,0x65046CD2L,0x993F83C6L},{0x16522E3AL,0x0921D61BL,0xC1AAE929L,0xC1AAE929L,0x0921D61BL},{0x3F513C30L,(-8L),(-8L),8L,(-2L)},{0x1E8F0FD8L,0x0A797810L,0x33AA7100L,0x65798802L,(-10L)},{(-1L),1L,1L,1L,(-1L)}},{{0x1E8F0FD8L,0x405C8A69L,(-10L),0xA6248937L,3L},{0x3F513C30L,(-4L),0x0CB98B9EL,0x0A797810L,0x16522E3AL},{0x16522E3AL,0x9C168D6FL,(-2L),(-1L),0xAFFA6ABDL},{(-2L),5L,(-1L),0x1F58B045L,0xA2D7D92BL},{1L,0xCB82CE84L,6L,(-5L),0xA6248937L}},{{(-9L),0xAD016A87L,0x095D0D4AL,1L,(-6L)},{1L,0xAD016A87L,0x65798802L,0L,0x9C168D6FL},{(-1L),0xCB82CE84L,0xA6248937L,(-3L),1L},{0x533E9976L,5L,(-3L),0x13F8A0C3L,0x55A235D0L},{(-2L),0x9C168D6FL,(-6L),(-2L),(-2L)}},{{7L,(-4L),7L,0x0921D61BL,(-10L)},{(-5L),0x405C8A69L,0xA2D7D92BL,0x55A235D0L,(-4L)},{0xCD6D2ECBL,1L,0xAD016A87L,1L,0x3F513C30L},{0x9C168D6FL,0x0A797810L,0xA2D7D92BL,(-4L),1L},{(-2L),(-8L),7L,0xA8E28207L,0L}},{{(-8L),0x0921D61BL,(-6L),0x405C8A69L,(-2L)},{0xA8E28207L,2L,(-3L),(-8L),0xAD016A87L},{5L,0x91E8CE6DL,0xA6248937L,(-4L),(-2L)},{2L,(-1L),0x65798802L,0x1E8F0FD8L,1L},{0x993F83C6L,(-4L),0x095D0D4AL,0x1E8F0FD8L,(-1L)}},{{0x0A797810L,(-6L),6L,(-4L),8L},{(-1L),6L,(-1L),(-8L),0xCB82CE84L},{(-10L),7L,(-2L),0x405C8A69L,0x33AA7100L},{0x1F58B045L,0xA8E28207L,0x0CB98B9EL,0xA8E28207L,0x1F58B045L},{6L,0x55A235D0L,(-10L),(-4L),0x0CB98B9EL}},{{0x0921D61BL,(-10L),1L,1L,(-9L)},{(-6L),0x1E8F0FD8L,0x33AA7100L,1L,(-2L)},{1L,0x0A797810L,(-4L),(-2L),(-9L)},{(-2L),(-2L),(-6L),1L,0xA7973E55L},{1L,0x9C168D6FL,(-1L),0x1F58B045L,0x91E8CE6DL}},{{0x65798802L,1L,0xCD6D2ECBL,0x9C168D6FL,0x55A235D0L},{(-1L),2L,(-1L),0x65798802L,0x1E8F0FD8L},{0x405C8A69L,1L,0x13F8A0C3L,0x33AA7100L,0x533E9976L},{0x405C8A69L,0x993F83C6L,1L,0x0921D61BL,0xAFFA6ABDL},{(-1L),7L,8L,(-9L),1L}}};\r\n            int i, j, k;\r\n            for (g_74 = 0; (g_74 > 14); g_74++)\r\n            { \r\n                int32_t l_145 = 0x7FD28F48L;\r\n                int32_t l_154 = (-9L);\r\n                if (p_50)\r\n                    goto lbl_139;\r\n                l_154 &= ((safe_add_func_int8_t_s_s((+(l_145 | (safe_mul_func_uint64_t_u_u((g_134[5][1][1] , (safe_add_func_int64_t_s_s((safe_rshift_func_int16_t_s_u((l_145 , (((*g_80) , (*p_52)) == (p_50 , (void*)0))), 15)), 0x97D12DAEB6DC7387LL))), (safe_sub_func_uint64_t_u_u(g_110[1], g_67)))))), 0x17L)) & (**p_51));\r\n                g_155--;\r\n            }\r\n            for (g_155 = 0; (g_155 <= 1); g_155 += 1)\r\n            { \r\n                int i;\r\n                return g_110[(g_155 + 1)];\r\n            }\r\n            for (g_77 = 0; (g_77 <= 1); g_77 += 1)\r\n            { \r\n                uint64_t l_165 = 0x6B06DFF5F2C0A7ABLL;\r\n                int32_t * const l_175[7][2] = {{&g_176,&g_176},{&g_176,&g_176},{&g_176,&g_176},{&g_176,&g_176},{&g_176,&g_176},{&g_176,&g_176},{&g_176,&g_176}};\r\n                int32_t * const *l_174 = &l_175[6][0];\r\n                int32_t * const **l_173 = &l_174;\r\n                int8_t *l_177 = &g_90;\r\n                int8_t *l_180 = (void*)0;\r\n                int8_t *l_181 = &g_182;\r\n                int8_t *l_183 = &g_184;\r\n                int i, j;\r\n                l_158[9][1][1] ^= (**p_51);\r\n                l_185 = ((((*g_79) = func_54(l_159, (l_158[9][1][1] = (~(safe_sub_func_int8_t_s_s((safe_lshift_func_uint64_t_u_u(l_165, 52)), ((*l_183) ^= (safe_rshift_func_uint32_t_u_u(((l_158[9][1][1] ^ g_101) != ((*l_181) = (safe_mul_func_uint32_t_u_u(((((*l_177) = ((g_172[0] = l_87[1][0]) == ((*l_173) = &p_49))) < ((**p_51) <= p_50)) != (safe_lshift_func_uint8_t_u_u(g_5[8][1][1], 6))), (-9L))))), g_134[5][1][1]))))))))) != (void*)0) < 0xEF7BL);\r\n            }\r\n        }\r\n        else\r\n        { \r\n            int8_t *l_190 = (void*)0;\r\n            int32_t l_191 = (-1L);\r\n            int8_t **l_198 = &l_190;\r\n            int8_t ***l_197[7][3][4] = {{{&l_198,(void*)0,&l_198,&l_198},{&l_198,&l_198,&l_198,(void*)0},{&l_198,&l_198,&l_198,&l_198}},{{&l_198,(void*)0,&l_198,&l_198},{&l_198,&l_198,&l_198,&l_198},{&l_198,&l_198,&l_198,&l_198}},{{(void*)0,&l_198,&l_198,&l_198},{&l_198,&l_198,&l_198,&l_198},{&l_198,&l_198,&l_198,&l_198}},{{(void*)0,&l_198,&l_198,&l_198},{&l_198,&l_198,&l_198,&l_198},{&l_198,(void*)0,&l_198,&l_198}},{{(void*)0,&l_198,&l_198,(void*)0},{(void*)0,&l_198,&l_198,&l_198},{&l_198,(void*)0,&l_198,&l_198}},{{&l_198,&l_198,&l_198,(void*)0},{(void*)0,&l_198,&l_198,&l_198},{&l_198,(void*)0,&l_198,&l_198}},{{&l_198,(void*)0,&l_198,&l_198},{(void*)0,&l_198,&l_198,(void*)0},{&l_198,&l_198,&l_198,&l_198}}};\r\n            int i, j, k;\r\n            for (g_184 = 0; (g_184 >= (-9)); g_184 = safe_sub_func_int32_t_s_s(g_184, 8))\r\n            { \r\n                int8_t *l_189 = (void*)0;\r\n                int8_t **l_188[3];\r\n                int8_t ****l_199[4] = {&l_197[6][0][1],&l_197[6][0][1],&l_197[6][0][1],&l_197[6][0][1]};\r\n                int i;\r\n                for (i = 0; i < 3; i++)\r\n                    l_188[i] = &l_189;\r\n                l_191 = ((l_190 = &g_182) == (void*)0);\r\n                l_196[7][1][1] |= ((safe_lshift_func_uint16_t_u_s(p_50, l_185)) >= (safe_add_func_int32_t_s_s(0L, 1UL)));\r\n                g_200[5][2][0] = l_197[6][0][1];\r\n            }\r\n        }\r\n        for (l_159 = 0; (l_159 <= 20); l_159 = safe_add_func_uint64_t_u_u(l_159, 9))\r\n        { \r\n            int32_t l_212 = 6L;\r\n            int32_t l_213 = 0L;\r\n            int32_t l_214 = 0x905F20B4L;\r\n            uint64_t l_215[7][4] = {{0x62D046E25E441B3CLL,0xD3BE329E90720AAELL,0xD3BE329E90720AAELL,0x62D046E25E441B3CLL},{0xD3BE329E90720AAELL,0x62D046E25E441B3CLL,0xD3BE329E90720AAELL,0xD3BE329E90720AAELL},{0x62D046E25E441B3CLL,0x62D046E25E441B3CLL,0x714DA2999ED087D7LL,0x62D046E25E441B3CLL},{0x62D046E25E441B3CLL,0xD3BE329E90720AAELL,0xD3BE329E90720AAELL,0x62D046E25E441B3CLL},{0xD3BE329E90720AAELL,0x62D046E25E441B3CLL,0xD3BE329E90720AAELL,0xD3BE329E90720AAELL},{0x62D046E25E441B3CLL,0x62D046E25E441B3CLL,0x714DA2999ED087D7LL,0x62D046E25E441B3CLL},{0x62D046E25E441B3CLL,0xD3BE329E90720AAELL,0xD3BE329E90720AAELL,0x62D046E25E441B3CLL}};\r\n            uint16_t l_218 = 0x3366L;\r\n            int64_t *l_250 = &g_67;\r\n            int i, j;\r\n            if ((safe_rshift_func_int8_t_s_u(p_50, 7)))\r\n            { \r\n                return g_134[5][0][0];\r\n            }\r\n            else\r\n            { \r\n                int64_t *l_210 = &g_110[1];\r\n                int32_t l_211 = 1L;\r\n                if (g_184)\r\n                    goto lbl_139;\r\n                l_211 |= (safe_lshift_func_int8_t_s_u(((l_209[5][1][1] != l_210) && p_50), 2));\r\n            }\r\n            l_215[1][2]--;\r\n            l_218--;\r\n            for (g_77 = 24; (g_77 > 6); g_77 = safe_sub_func_int8_t_s_s(g_77, 7))\r\n            { \r\n                uint16_t l_223 = 8UL;\r\n                const int32_t **l_226 = &g_104;\r\n                int64_t *l_229 = (void*)0;\r\n                int64_t *l_230 = &g_110[1];\r\n                uint32_t *l_248 = &g_249[4][1][5];\r\n                int32_t l_251 = 0xC0DD6023L;\r\n                l_223 = (0x6CC9L ^ g_134[5][1][1]);\r\n                (*l_226) = (l_224 = func_54(p_50, g_74));\r\n                if (g_101)\r\n                    goto lbl_139;\r\n                l_251 = ((((*l_248) = ((safe_unary_minus_func_int64_t_s(((**l_226) | (p_53 && (p_53 == ((*l_230) = (safe_unary_minus_func_uint32_t_u(0x4BB0FAE2L)))))))) & (safe_mul_func_int32_t_s_s(((safe_div_func_int64_t_s_s((safe_add_func_uint16_t_u_u((~p_50), (p_53 ^ p_53))), (~((safe_unary_minus_func_uint64_t_u((safe_add_func_uint32_t_u_u((safe_sub_func_int32_t_s_s((safe_add_func_int32_t_s_s(2L, (safe_rshift_func_uint64_t_u_u(g_5[0][1][1], 5)))), (*l_224))), g_101)))) , g_134[4][0][1])))) , 0xE52E9386L), p_53)))) , &g_110[1]) != l_250);\r\n            }\r\n        }\r\n    }\r\n    (*p_51) = func_54((*g_202), p_50);\r\n    return g_176;\r\n}\r\n\r\n\r\n\r\n\r\nstatic int32_t * func_54(int8_t  p_55, uint32_t  p_56)\r\n{ \r\n    int32_t *l_78 = &g_5[5][3][0];\r\n    return l_78;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nint main (int argc, char* argv[])\r\n{\r\n    int i, j, k;\r\n    int print_hash_value = 0;\r\n    if (argc == 2 && strcmp(argv[1], \"1\") == 0) print_hash_value = 1;\r\n    platform_main_begin();\r\n    crc32_gentab();\r\n    func_40();\r\n    for (i = 0; i < 9; i++)\r\n    {\r\n        for (j = 0; j < 4; j++)\r\n        {\r\n            for (k = 0; k < 6; k++)\r\n            {\r\n                transparent_crc(g_5[i][j][k], \"g_5[i][j][k]\", print_hash_value);\r\n                if (print_hash_value) printf(\"index = [%d][%d][%d]\\n\", i, j, k);\r\n\r\n            }\r\n        }\r\n    }\r\n    transparent_crc(g_67, \"g_67\", print_hash_value);\r\n    transparent_crc(g_74, \"g_74\", print_hash_value);\r\n    transparent_crc(g_77, \"g_77\", print_hash_value);\r\n    transparent_crc(g_90, \"g_90\", print_hash_value);\r\n    transparent_crc(g_101, \"g_101\", print_hash_value);\r\n    transparent_crc(g_105, \"g_105\", print_hash_value);\r\n    for (i = 0; i < 3; i++)\r\n    {\r\n        transparent_crc(g_110[i], \"g_110[i]\", print_hash_value);\r\n        if (print_hash_value) printf(\"index = [%d]\\n\", i);\r\n\r\n    }\r\n    transparent_crc(g_111, \"g_111\", print_hash_value);\r\n    for (i = 0; i < 7; i++)\r\n    {\r\n        for (j = 0; j < 3; j++)\r\n        {\r\n            for (k = 0; k < 2; k++)\r\n            {\r\n                transparent_crc(g_134[i][j][k], \"g_134[i][j][k]\", print_hash_value);\r\n                if (print_hash_value) printf(\"index = [%d][%d][%d]\\n\", i, j, k);\r\n\r\n            }\r\n        }\r\n    }\r\n    transparent_crc(g_155, \"g_155\", print_hash_value);\r\n    transparent_crc(g_176, \"g_176\", print_hash_value);\r\n    transparent_crc(g_182, \"g_182\", print_hash_value);\r\n    transparent_crc(g_184, \"g_184\", print_hash_value);\r\n    transparent_crc(g_225, \"g_225\", print_hash_value);\r\n    for (i = 0; i < 5; i++)\r\n    {\r\n        for (j = 0; j < 5; j++)\r\n        {\r\n            for (k = 0; k < 8; k++)\r\n            {\r\n                transparent_crc(g_249[i][j][k], \"g_249[i][j][k]\", print_hash_value);\r\n                if (print_hash_value) printf(\"index = [%d][%d][%d]\\n\", i, j, k);\r\n\r\n            }\r\n        }\r\n    }\r\n    transparent_crc(g_299, \"g_299\", print_hash_value);\r\n    transparent_crc(g_301, \"g_301\", print_hash_value);\r\n    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);\r\n    return 0;\r\n}\r\n\r\n/************************ statistics *************************\r\nXXX max struct depth: 0\r\nbreakdown:\r\n   depth: 0, occurrence: 112\r\nXXX total union variables: 0\r\n\r\nXXX max expression depth: 31\r\nbreakdown:\r\n   depth: 1, occurrence: 85\r\n   depth: 2, occurrence: 20\r\n   depth: 3, occurrence: 3\r\n   depth: 4, occurrence: 3\r\n   depth: 6, occurrence: 1\r\n   depth: 7, occurrence: 1\r\n   depth: 8, occurrence: 1\r\n   depth: 10, occurrence: 1\r\n   depth: 13, occurrence: 2\r\n   depth: 14, occurrence: 1\r\n   depth: 15, occurrence: 1\r\n   depth: 19, occurrence: 2\r\n   depth: 20, occurrence: 1\r\n   depth: 21, occurrence: 1\r\n   depth: 23, occurrence: 1\r\n   depth: 25, occurrence: 1\r\n   depth: 30, occurrence: 1\r\n   depth: 31, occurrence: 1\r\n\r\nXXX total number of pointers: 86\r\n\r\nXXX times a variable address is taken: 202\r\nXXX times a pointer is dereferenced on RHS: 52\r\nbreakdown:\r\n   depth: 1, occurrence: 33\r\n   depth: 2, occurrence: 19\r\nXXX times a pointer is dereferenced on LHS: 42\r\nbreakdown:\r\n   depth: 1, occurrence: 36\r\n   depth: 2, occurrence: 6\r\nXXX times a pointer is compared with null: 5\r\nXXX times a pointer is compared with address of another variable: 0\r\nXXX times a pointer is compared with another pointer: 2\r\nXXX times a pointer is qualified to be dereferenced: 1672\r\n\r\nXXX max dereference level: 2\r\nbreakdown:\r\n   level: 0, occurrence: 0\r\n   level: 1, occurrence: 349\r\n   level: 2, occurrence: 196\r\nXXX number of pointers point to pointers: 37\r\nXXX number of pointers point to scalars: 49\r\nXXX number of pointers point to structs: 0\r\nXXX percent of pointers has null in alias set: 32.6\r\nXXX average alias set size: 1.34\r\n\r\nXXX times a non-volatile is read: 323\r\nXXX times a non-volatile is write: 149\r\nXXX times a volatile is read: 0\r\nXXX    times read thru a pointer: 0\r\nXXX times a volatile is write: 0\r\nXXX    times written thru a pointer: 0\r\nXXX times a volatile is available for access: 0\r\nXXX percentage of non-volatile access: 100\r\n\r\nXXX forward jumps: 0\r\nXXX backward jumps: 5\r\n\r\nXXX stmts: 82\r\nXXX max block depth: 3\r\nbreakdown:\r\n   depth: 0, occurrence: 9\r\n   depth: 1, occurrence: 9\r\n   depth: 2, occurrence: 25\r\n   depth: 3, occurrence: 39\r\n\r\nXXX percentage a fresh-made variable is used: 19.1\r\nXXX percentage an existing variable is used: 80.9\r\nXXX total OOB instances added: 0\r\n********************* end of statistics **********************/\r\n```"
      },
      {
        "author": "dtcxzyw",
        "body": "Ping @fhahn @topperc "
      },
      {
        "author": "JonPsson1",
        "body": "Got the same assertion on my test machine:\r\n\r\n```\r\nopt -mtriple=s390x-unknown-linux -mcpu=z16 ./tc_crash5_aftercreduce.ll -o out.ll -S -O3\r\nAssertion `OldResSizeInBits > NewResSizeInBits && \"Nothing to shrink?\"' failed.\r\n#10 0x0000000002ddf806 llvm::LoopVectorizationPlanner::buildVPlansWithVPRecipes\r\n```\r\n[tc_crash5_aftercreduce.ll.tar.gz](https://github.com/llvm/llvm-project/files/15073774/tc_crash5_aftercreduce.ll.tar.gz)\r\n\r\n@fhahn @topperc "
      },
      {
        "author": "fhahn",
        "body": "Same issue as  #79742"
      }
    ]
  }
}