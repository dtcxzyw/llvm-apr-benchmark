{
  "bug_id": "106248",
  "issue_url": "https://github.com/llvm/llvm-project/issues/106248",
  "bug_type": "crash",
  "base_commit": "616f7d3d4f6d9bea6f776e357c938847e522a681",
  "knowledge_cutoff": "2024-08-27T17:02:16Z",
  "lit_test_dir": [
    "llvm/test/Transforms/LoopVectorize"
  ],
  "hints": {
    "fix_commit": "0a272d3a1703415abca42dc2e2cc2b57cb30734e",
    "components": [
      "LoopVectorize"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/LoopVectorize.cpp": [
        [
          6529,
          6534
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/LoopVectorize.cpp": [
        "LoopVectorizationCostModel::getInstructionCost"
      ]
    }
  },
  "patch": "commit 0a272d3a1703415abca42dc2e2cc2b57cb30734e\nAuthor: Florian Hahn <flo@fhahn.com>\nDate:   Thu Aug 29 12:08:27 2024 +0100\n\n    [LV] Use SCEV to analyze second operand for cost query.\n    \n    Improve operand analysis using SCEV for cost purposes. This fixes a\n    divergence between legacy and VPlan-based cost-modeling after\n    533e6bbd0d34.\n    \n    Fixes https://github.com/llvm/llvm-project/issues/106248.\n\ndiff --git a/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp b/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp\nindex 56f51e14a6eb..4cc75e2e7546 100644\n--- a/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp\n+++ b/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp\n@@ -6529,6 +6529,10 @@ LoopVectorizationCostModel::getInstructionCost(Instruction *I,\n     // Certain instructions can be cheaper to vectorize if they have a constant\n     // second vector operand. One example of this are shifts on x86.\n     Value *Op2 = I->getOperand(1);\n+    if (!isa<Constant>(Op2) && PSE.getSE()->isSCEVable(Op2->getType()) &&\n+        isa<SCEVConstant>(PSE.getSCEV(Op2))) {\n+      Op2 = cast<SCEVConstant>(PSE.getSCEV(Op2))->getValue();\n+    }\n     auto Op2Info = TTI.getOperandInfo(Op2);\n     if (Op2Info.Kind == TargetTransformInfo::OK_AnyValue &&\n         Legal->isInvariant(Op2))\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/LoopVectorize/X86/cost-constant-known-via-scev.ll",
      "commands": [
        "opt -p loop-vectorize -S %s"
      ],
      "tests": [
        {
          "test_name": "test_foldable_live_in_via_scev",
          "test_body": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\ndefine i64 @test_foldable_live_in_via_scev() {\nentry:\n  %conv = zext i16 -6 to i64\n  %add = add nsw i64 %conv, -65528\n  br label %loop\n\nloop:                                             ; preds = %loop, %entry\n  %iv = phi i32 [ 1, %entry ], [ %iv.next, %loop ]\n  %red = phi i64 [ 1, %entry ], [ %mul, %loop ]\n  %mul = mul nsw i64 %red, %add\n  %iv.next = add nsw i32 %iv, 1\n  %ec = icmp eq i32 %iv.next, 100\n  br i1 %ec, label %exit, label %loop\n\nexit:                                             ; preds = %loop\n  %ret = phi i64 [ %mul, %loop ]\n  ret i64 %ret\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[clang] Assertion failed in Vectorize",
    "body": "In #105722 , we resolved the assertion failure in vectorization. However, I met this crash again with the following case:\r\n\r\n```c\r\n#include <stdint.h>\r\nint a;\r\nlong b;\r\nstruct e {\r\n  uint16_t f;\r\n  uint64_t g;\r\n  int32_t h\r\n} static i = {65530};\r\nvoid c(int d) {\r\n  for (; a; a++)\r\n    b *= d;\r\n}\r\nuint32_t j(struct e, uint16_t);\r\nuint64_t k() { j(i, 0); }\r\nuint32_t j(struct e, uint16_t) { c(i.f - 65528); }\r\n```\r\nI compiled it with -O2 flag and it crashed. But when I compiled with -O1/-O0, it worked.\r\n\r\nThe crash is: clang++: /root/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:7359: llvm::VectorizationFactor llvm::LoopVectorizationPlanner::computeBestVF(): Assertion `(BestFactor.Width == LegacyVF.Width || planContainsAdditionalSimplifications(getPlanFor(BestFactor.Width), BestFactor.Width, CostCtx, OrigLoop, CM)) && \" VPlan cost model and legacy cost model disagreed\"' failed.\r\n\r\nThe details can be found here: https://godbolt.org/z/8x48xsKs6",
    "author": "cardigan1008",
    "labels": [
      "vectorizers",
      "crash"
    ],
    "comments": [
      {
        "author": "fhahn",
        "body": "Thanks for the report @cardigan1008, should be fixed now"
      }
    ]
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  },
  "bisect": "533e6bbd0d344a710c491a9eb0ce0ba0852b08cb"
}