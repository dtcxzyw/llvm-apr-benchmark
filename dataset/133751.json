{
  "bug_id": "133751",
  "issue_url": "https://github.com/llvm/llvm-project/issues/133751",
  "bug_type": "crash",
  "base_commit": "2d7add6e2e56baf46504a8a22dec42b61f63360f",
  "knowledge_cutoff": "2025-03-31T16:55:56Z",
  "lit_test_dir": [
    "llvm/test/Transforms/SLPVectorizer"
  ],
  "hints": {
    "fix_commit": "bfd8cc0a3e82c5e6345a66dd5db5242accb6874b",
    "components": [
      "SLPVectorizer"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        [
          8854,
          8860
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        "BoUpSLP::buildTree_rec"
      ]
    }
  },
  "patch": "commit bfd8cc0a3e82c5e6345a66dd5db5242accb6874b\nAuthor: Alexey Bataev <a.bataev@outlook.com>\nDate:   Mon Mar 31 10:31:18 2025 -0700\n\n    [SLP]Fix a check for the whole register use\n    \n    Need to check the value type, not the return type, of the instructions,\n    when doing the analysis for the whole register use to prevent a compiler\n    crash.\n    \n    Fixes #133751\n\ndiff --git a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\nindex a4b0378abc07..0679eac17658 100644\n--- a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n+++ b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n@@ -8854,7 +8854,8 @@ void BoUpSLP::buildTree_rec(ArrayRef<Value *> VL, unsigned Depth,\n       // FIXME: Reshuffing scalars is not supported yet for non-power-of-2 ops.\n       if ((UserTreeIdx.UserTE &&\n            UserTreeIdx.UserTE->hasNonWholeRegisterOrNonPowerOf2Vec(*TTI)) ||\n-          !hasFullVectorsOrPowerOf2(*TTI, VL.front()->getType(), VL.size())) {\n+          !hasFullVectorsOrPowerOf2(*TTI, getValueType(VL.front()),\n+                                    VL.size())) {\n         LLVM_DEBUG(dbgs() << \"SLP: Reshuffling scalars not yet supported \"\n                              \"for nodes with padding.\\n\");\n         auto Invalid = ScheduleBundle::invalid();\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/SLPVectorizer/X86/cmp-values-non-full-registers.ll",
      "commands": [
        "opt -S --passes=slp-vectorizer -mtriple=x86_64-grtev4-linux-gnu < %s"
      ],
      "tests": [
        {
          "test_name": "<module>",
          "test_body": "\ndefine void @test() {\n;\nentry:\n  br i1 false, label %bb1, label %bb2\n\nbb2:\n  %cmp14.us = fcmp ogt x86_fp80 0xK00000000000000000000, 0xK00000000000000000000\n  %imax.2.us = select i1 %cmp14.us, i64 0, i64 0\n  %jmax.2.us = select i1 %cmp14.us, i64 0, i64 0\n  %cmp13.us = fcmp olt x86_fp80 0xK00000000000000000000, 0xK00000000000000000000\n  %imin.2.us = select i1 %cmp13.us, i64 0, i64 0\n  %jmin.2.us = select i1 %cmp13.us, i64 0, i64 0\n  br label %bb1\n\nbb1:\n  %storemerge64 = phi i64 [ 0, %entry ], [ %imin.2.us, %bb2 ]\n  %storemerge63 = phi i64 [ 0, %entry ], [ %jmin.2.us, %bb2 ]\n  %storemerge62 = phi i64 [ 0, %entry ], [ %imax.2.us, %bb2 ]\n  %storemerge = phi i64 [ 0, %entry ], [ %jmax.2.us, %bb2 ]\n  ret void\n}"
        }
      ]
    }
  ],
  "issue": {
    "title": "SLPVectorizer: \"Reshuffling scalars not yet supported for nodes with padding\" assert",
    "body": "```\n$ cat /tmp/a.ll\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-grtev4-linux-gnu\"\n\ndefine void @gsl_matrix_long_double_minmax_index() {\nentry:\n  br i1 false, label %cleanup22, label %for.cond6.preheader.us.preheader\n\nfor.cond6.preheader.us.preheader:                 ; preds = %entry\n  %cmp14.us = fcmp ogt x86_fp80 0xK00000000000000000000, 0xK00000000000000000000\n  %imax.2.us = select i1 %cmp14.us, i64 0, i64 0\n  %jmax.2.us = select i1 %cmp14.us, i64 0, i64 0\n  %cmp13.us = fcmp olt x86_fp80 0xK00000000000000000000, 0xK00000000000000000000\n  %imin.2.us = select i1 %cmp13.us, i64 0, i64 0\n  %jmin.2.us = select i1 %cmp13.us, i64 0, i64 0\n  br label %cleanup22\n\ncleanup22:                                        ; preds = %for.cond6.preheader.us.preheader, %entry\n  %storemerge64 = phi i64 [ 0, %entry ], [ %imin.2.us, %for.cond6.preheader.us.preheader ]\n  %storemerge63 = phi i64 [ 0, %entry ], [ %jmin.2.us, %for.cond6.preheader.us.preheader ]\n  %storemerge62 = phi i64 [ 0, %entry ], [ %imax.2.us, %for.cond6.preheader.us.preheader ]\n  %storemerge = phi i64 [ 0, %entry ], [ %jmax.2.us, %for.cond6.preheader.us.preheader ]\n  ret void\n}\n$ opt -p slp-vectorizer /tmp/a.ll -disable-output\nopt: ../../llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3714: TreeEntry *llvm::slpvectorizer::BoUpSLP::newTreeEntry(ArrayRef<Value *>, TreeEntry::EntryState, ScheduleBundle &, const InstructionsState &, const EdgeInfo &, ArrayRef<int>, ArrayRef<unsigned int>): Assertion `(hasFullVectorsOrPowerOf2(*TTI, \ngetValueType(VL.front()), VL.size()) || ReuseShuffleIndices.empty()) && \"Reshuffling scalars not yet supported for nodes with padding\"' failed.                                                                                                                                                                    \n\n```\n\n@alexey-bataev ",
    "author": "aeubanks",
    "labels": [
      "llvm:SLPVectorizer",
      "crash-on-valid"
    ],
    "comments": []
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  }
}