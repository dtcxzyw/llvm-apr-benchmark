{
  "bug_id": "135182",
  "issue_url": "https://github.com/llvm/llvm-project/issues/135182",
  "bug_type": "miscompilation",
  "base_commit": "77db154cf9383fa20685fca56633601ce0ea47fa",
  "knowledge_cutoff": "2025-04-10T13:51:31Z",
  "lit_test_dir": [
    "llvm/test/Transforms/IndVarSimplify"
  ],
  "hints": {
    "fix_commit": "d14acb78065bdd331019924feaaef52e5e744529",
    "components": [
      "SimplifyIndVar"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Utils/SimplifyIndVar.cpp": [
        [
          1743,
          1748
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Utils/SimplifyIndVar.cpp": [
        "WidenIV::widenWithVariantUse"
      ]
    }
  },
  "patch": "commit d14acb78065bdd331019924feaaef52e5e744529\nAuthor: Yingwei Zheng <dtcxzyw2333@gmail.com>\nDate:   Fri Apr 11 09:03:06 2025 +0800\n\n    [IndVarSimplify] Handle the case where both operands are the same when widening IV (#135207)\n    \n    `WidenIV::widenWithVariantUse` assumes that exactly one of the binop\n    operands is the IV to be widened. This miscompilation happens when it\n    tries to sign-extend the \"NonIV\" operand while the IV is zero-extended.\n    Closes https://github.com/llvm/llvm-project/issues/135182.\n\ndiff --git a/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp b/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp\nindex 7b9c5c77cbe9..5a76bec01765 100644\n--- a/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp\n+++ b/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp\n@@ -1743,6 +1743,9 @@ bool WidenIV::widenWithVariantUse(WidenIV::NarrowIVDefUse DU) {\n     // TODO: Support case for NarrowDef = NarrowUse->getOperand(1).\n     if (NarrowUse->getOperand(0) != NarrowDef)\n       return false;\n+    // We cannot use a different extend kind for the same operand.\n+    if (NarrowUse->getOperand(1) == NarrowDef)\n+      return false;\n     if (!SE->isKnownNegative(RHS))\n       return false;\n     bool ProvedSubNUW = SE->isKnownPredicateAt(ICmpInst::ICMP_UGE, LHS,\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/IndVarSimplify/pr135182.ll",
      "commands": [
        "opt -S -passes=indvars < %s"
      ],
      "tests": [
        {
          "test_name": "pr135182",
          "test_body": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\n\ndefine i32 @pr135182() {\nentry:\n  br label %for.body\n\nfor.body:                                         ; preds = %for.body, %entry\n  %indvar = phi i16 [ -12, %entry ], [ %indvar.next, %for.body ]\n  %add = add i16 %indvar, %indvar\n  %ext = zext i16 %add to i32\n  %indvar.next = add i16 %indvar, 1\n  br i1 false, label %for.body, label %for.end\n\nfor.end:                                          ; preds = %for.body\n  ret i32 %ext\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[IndVarSimplify] Miscompilation at -O3",
    "body": "Reproducer: https://alive2.llvm.org/ce/z/fvxiS3\n```\n; bin/opt -passes=indvars test.ll -S\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\ndefine void @src(ptr %p) {\nentry:\n  br label %for.body21\n\nfor.body21:\n  %storemerge629 = phi i8 [ -12, %entry ], [ %dec, %for.body21 ]\n  %conv29 = sext i8 %storemerge629 to i16\n  %conv1.i = sext i8 %storemerge629 to i16\n  %add.i = add i16 %conv29, %conv1.i\n  %conv55 = zext i16 %add.i to i32\n  store i32 %conv55, ptr %p, align 4\n  %dec = add i8 %storemerge629, 1\n  br i1 false, label %for.body21, label %for.end234\n\nfor.end234:\n  ret void\n}\n```\nOutput:\n```\ndefine void @tgt(ptr %p) {\n  br label %for.body21\n\nfor.body21:                                       ; preds = %for.body21, %entry\n  store i32 131048, ptr %p, align 4\n  br i1 false, label %for.body21, label %for.end234\n\nfor.end234:                                       ; preds = %for.body21\n  ret void\n}\n```\n`store i32 131048, ptr @g_150, align 4` should be `store i32 65512, ptr @g_150, align 4`\nllvm version: f819f46284f2a79790038e1f6649172789734ae8\n",
    "author": "dtcxzyw",
    "labels": [
      "miscompilation",
      "llvm:transforms"
    ],
    "comments": []
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  }
}