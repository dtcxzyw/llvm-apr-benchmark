{
  "bug_id": "93017",
  "issue_url": "https://github.com/llvm/llvm-project/issues/93017",
  "bug_type": "crash",
  "base_commit": "9120562dfcc09cb4caf3052c6744049b4d9c8481",
  "knowledge_cutoff": "2024-05-22T10:42:38Z",
  "lit_test_dir": [
    "llvm/test/Transforms/InstCombine"
  ],
  "hints": {
    "fix_commit": "0748a98ab009d4fd97438970e7d92660967a0652",
    "components": [
      "InstCombine"
    ],
    "files": [
      "llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp": [
        [
          214,
          219
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp": [
        "InstCombinerImpl::foldCmpLoadFromIndexedGlobal"
      ]
    }
  },
  "patch": "commit 0748a98ab009d4fd97438970e7d92660967a0652\nAuthor: Nikita Popov <npopov@redhat.com>\nDate:   Wed May 22 14:33:06 2024 +0200\n\n    [InstCombine] Handle ConstantFoldCompareInstOperands() failure\n    \n    This function will return nullptr instead of returning a constant\n    expression now, so be sure to handle that.\n    \n    Fixes https://github.com/llvm/llvm-project/issues/93017.\n\ndiff --git a/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp b/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp\nindex 542a1c82b127..430f3e12fa5b 100644\n--- a/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp\n+++ b/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp\n@@ -214,6 +214,9 @@ Instruction *InstCombinerImpl::foldCmpLoadFromIndexedGlobal(\n     // Find out if the comparison would be true or false for the i'th element.\n     Constant *C = ConstantFoldCompareInstOperands(ICI.getPredicate(), Elt,\n                                                   CompareRHS, DL, &TLI);\n+    if (!C)\n+      return nullptr;\n+\n     // If the result is undef for this element, ignore it.\n     if (isa<UndefValue>(C)) {\n       // Extend range state machines to cover this element in case there is an\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/InstCombine/load-cmp.ll",
      "commands": [
        "opt -passes=instcombine -S -data-layout=\"p:32:32:32-p1:16:16:16-p2:128:128:128:32-n8:16:32:64\" < %s"
      ],
      "tests": [
        {
          "test_name": "test10_struct_arr_noinbounds_i64",
          "test_body": "%Foo = type { i32, i32, i32, i32 }\n\n@GStructArr = external hidden constant [4 x %Foo]\n\ndefine i1 @test10_struct_arr_noinbounds_i64(i64 %x) {\n  %p = getelementptr [4 x %Foo], ptr @GStructArr, i32 0, i64 %x, i32 2\n  %q = load i32, ptr %p, align 4\n  %r = icmp eq i32 %q, 9\n  ret i1 %r\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "clang crashes on valid code at -O1 and above on x86_64-linux-gnu: Assertion `Val && \"isa<> used on a null pointer\"' failed ",
    "body": "```\r\n[514] % clangtk -v\r\nclang version 19.0.0git (https://github.com/llvm/llvm-project.git e5936b245e9af0cea69a7e4eae22a05b7ffcf5a3)\r\nTarget: x86_64-unknown-linux-gnu\r\nThread model: posix\r\nInstalledDir: /local/suz-local/software/local/clang-trunk/bin\r\nBuild config: +assertions\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/10\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/11\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9\r\nSelected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/11\r\nCandidate multilib: .;@m64\r\nSelected multilib: .;@m64\r\n[515] % \r\n[515] % clangtk -O1 -w small.c\r\nclang-19: /local/suz-local/software/clangbuild/llvm-project/llvm/include/llvm/Support/Casting.h:109: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = llvm::UndefValue; From = llvm::Constant]: Assertion `Val && \"isa<> used on a null pointer\"' failed.\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.\r\nStack dump:\r\n0.\tProgram arguments: /local/suz-local/software/local/clang-trunk/bin/clang-19 -cc1 -triple x86_64-unknown-linux-gnu -emit-obj -dumpdir a- -disable-free -clear-ast-before-backend -main-file-name small.c -mrelocation-model pic -pic-level 2 -pic-is-pie -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -debugger-tuning=gdb -fdebug-compilation-dir=/local/suz-local/software/emitesting/bugs/20240522-clangtk-m64-O3-Weverything-pipe-fPIC-build-120609/delta -fcoverage-compilation-dir=/local/suz-local/software/emitesting/bugs/20240522-clangtk-m64-O3-Weverything-pipe-fPIC-build-120609/delta -resource-dir /local/suz-local/software/local/clang-trunk/lib/clang/19 -I /usr/local/include -I /local/suz-local/software/local/include -internal-isystem /local/suz-local/software/local/clang-trunk/lib/clang/19/include -internal-isystem /usr/local/include -internal-isystem /usr/lib/gcc/x86_64-linux-gnu/11/../../../../x86_64-linux-gnu/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -O1 -w -ferror-limit 19 -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fcolor-diagnostics -faddrsig -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o /tmp/small-e990a2.o -x c small.c\r\n1.\t<eof> parser at end of file\r\n2.\tOptimizer\r\n #0 0x000056275ba594cf llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x409a4cf)\r\n #1 0x000056275ba569f4 SignalHandler(int) Signals.cpp:0:0\r\n #2 0x00007f0cce9b6420 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\r\n #3 0x00007f0cce3bd00b raise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\r\n #4 0x00007f0cce39c859 abort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\r\n #5 0x00007f0cce39c729 get_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\r\n #6 0x00007f0cce39c729 _nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\r\n #7 0x00007f0cce3adfd6 (/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\r\n #8 0x000056275b648f39 llvm::InstCombinerImpl::foldCmpLoadFromIndexedGlobal(llvm::LoadInst*, llvm::GetElementPtrInst*, llvm::GlobalVariable*, llvm::CmpInst&, llvm::ConstantInt*) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3c89f39)\r\n #9 0x000056275b649420 llvm::InstCombinerImpl::foldICmpInstWithConstantNotInt(llvm::ICmpInst&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3c8a420)\r\n#10 0x000056275b66ec1f llvm::InstCombinerImpl::visitICmpInst(llvm::ICmpInst&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3cafc1f)\r\n#11 0x000056275b5cfa50 llvm::InstCombinerImpl::run() (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3c10a50)\r\n#12 0x000056275b5d1322 combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::BranchProbabilityInfo*, llvm::ProfileSummaryInfo*, llvm::LoopInfo*, llvm::InstCombineOptions const&) (.isra.0) InstructionCombining.cpp:0:0\r\n#13 0x000056275b5d25ed llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3c135ed)\r\n#14 0x000056275bce1ea6 llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x4322ea6)\r\n#15 0x000056275b4191cd llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3a5a1cd)\r\n#16 0x0000562759036716 llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x1677716)\r\n#17 0x000056275b417add llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3a58add)\r\n#18 0x0000562759038946 llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x1679946)\r\n#19 0x000056275b41596d llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x3a5696d)\r\n#20 0x000056275bcf36c8 (anonymous namespace)::EmitAssemblyHelper::RunOptimizationPipeline(clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>&, std::unique_ptr<llvm::ToolOutputFile, std::default_delete<llvm::ToolOutputFile>>&, clang::BackendConsumer*) BackendUtil.cpp:0:0\r\n#21 0x000056275bcf6a45 (anonymous namespace)::EmitAssemblyHelper::EmitAssembly(clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) BackendUtil.cpp:0:0\r\n#22 0x000056275bcf7116 clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x4338116)\r\n#23 0x000056275c354469 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x4995469)\r\n#24 0x000056275e0e626c clang::ParseAST(clang::Sema&, bool, bool) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x672726c)\r\n#25 0x000056275c3548f8 clang::CodeGenAction::ExecuteAction() (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x49958f8)\r\n#26 0x000056275c5e4bc9 clang::FrontendAction::Execute() (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x4c25bc9)\r\n#27 0x000056275c569d2e clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x4baad2e)\r\n#28 0x000056275c6cf346 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x4d10346)\r\n#29 0x0000562758c2fffc cc1_main(llvm::ArrayRef<char const*>, char const*, void*) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x1270ffc)\r\n#30 0x0000562758c291fa ExecuteCC1Tool(llvm::SmallVectorImpl<char const*>&, llvm::ToolContext const&) driver.cpp:0:0\r\n#31 0x0000562758c2cbce clang_main(int, char**, llvm::ToolContext const&) (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x126dbce)\r\n#32 0x0000562758b2978b main (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x116a78b)\r\n#33 0x00007f0cce39e083 __libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\r\n#34 0x0000562758c28c8e _start (/local/suz-local/software/local/clang-trunk/bin/clang-19+0x1269c8e)\r\nclangtk: error: unable to execute command: Aborted\r\nclangtk: error: clang frontend command failed due to signal (use -v to see invocation)\r\nclang version 19.0.0git (https://github.com/llvm/llvm-project.git e5936b245e9af0cea69a7e4eae22a05b7ffcf5a3)\r\nTarget: x86_64-unknown-linux-gnu\r\nThread model: posix\r\nInstalledDir: /local/suz-local/software/local/clang-trunk/bin\r\nBuild config: +assertions\r\nclangtk: note: diagnostic msg: \r\n********************\r\n\r\nPLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:\r\nPreprocessed source(s) and associated run script(s) are located at:\r\nclangtk: note: diagnostic msg: /tmp/small-9882da.c\r\nclangtk: note: diagnostic msg: /tmp/small-9882da.sh\r\nclangtk: note: diagnostic msg: \r\n\r\n********************\r\n[516] % \r\n[516] % cat small.c\r\nint a, b[2], c;\r\nstatic int *d[2] = {b, &b[1]};\r\nint main() {\r\n  d[a] && (c && 0);\r\n  return 0;\r\n}\r\n```",
    "author": "zhendongsu",
    "labels": [
      "llvm:instcombine",
      "crash-on-valid"
    ],
    "comments": [
      {
        "author": "MitalAshok",
        "body": "Bisect says this starts crashing with 108575f02ea9927009ed81231474d3a6f053602f (#92885) @nikic "
      },
      {
        "author": "nikic",
        "body": "Reduced:\r\n```llvm\r\n@table = internal constant [2 x ptr] [ptr @g, ptr getelementptr (i8, ptr @g, i64 4)], align 16\r\n@g = external global [2 x i32]\r\n\r\ndefine i1 @test(i64 %idx) {\r\n  %gep = getelementptr inbounds [2 x ptr], ptr @table, i64 0, i64 %idx\r\n  %v = load ptr, ptr %gep\r\n  %cmp = icmp ne ptr %v, null\r\n  ret i1 %cmp\r\n}\r\n```"
      }
    ]
  }
}