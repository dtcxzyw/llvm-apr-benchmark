{
  "bug_id": "102934",
  "issue_url": "https://github.com/llvm/llvm-project/issues/102934",
  "bug_type": "crash",
  "base_commit": "2913e71865dfc063a47ddfaf1e2ce07763f69614",
  "knowledge_cutoff": "2024-08-12T16:46:46Z",
  "lit_test_dir": [
    "llvm/test/Transforms/LoopVectorize"
  ],
  "hints": {
    "fix_commit": "2ab910c08c4ed43d6fd9eb2ef9b3ff52e0293cf9",
    "components": [
      "LoopVectorize"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/LoopVectorize.cpp": [
        [
          3705,
          3711
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/LoopVectorize.cpp": [
        "LoopVectorizationCostModel::collectLoopUniforms"
      ]
    }
  },
  "patch": "commit 2ab910c08c4ed43d6fd9eb2ef9b3ff52e0293cf9\nAuthor: Florian Hahn <flo@fhahn.com>\nDate:   Tue Aug 13 09:23:44 2024 +0100\n\n    [LV] Check pointer user are in loop when checking for uniform pointers.\n    \n    Widening decisions are not set for users outside the loop. Avoid\n    crashing by only calling isVectorizedMemAccessUse for users in the loop.\n    \n    Fixes https://github.com/llvm/llvm-project/issues/102934.\n\ndiff --git a/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp b/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp\nindex 5547116133e8..0d1262fa1872 100644\n--- a/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp\n+++ b/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp\n@@ -3705,7 +3705,8 @@ void LoopVectorizationCostModel::collectLoopUniforms(ElementCount VF) {\n     auto *I = cast<Instruction>(V);\n     auto UsersAreMemAccesses =\n       llvm::all_of(I->users(), [&](User *U) -> bool {\n-        return isVectorizedMemAccessUse(cast<Instruction>(U), V);\n+        auto *UI = cast<Instruction>(U);\n+        return TheLoop->contains(UI) && isVectorizedMemAccessUse(UI, V);\n       });\n     if (UsersAreMemAccesses)\n       addToWorklistIfAllowed(I);\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/LoopVectorize/X86/gep-use-outside-loop.ll",
      "commands": [
        "opt -p loop-vectorize -mtriple=x86_64-apple-macosx -mcpu=skylake-avx512 -force-vector-width=4 -force-vector-interleave=1 -S %s"
      ],
      "tests": [
        {
          "test_name": "gep_use_outside_loop",
          "test_body": "define void @gep_use_outside_loop(ptr noalias %dst, ptr %src) {\nentry:\n  br label %loop.header\n\nloop.header:                                      ; preds = %loop.latch, %entry\n  %iv = phi i64 [ 0, %entry ], [ %iv.next, %loop.latch ]\n  %gep.dst = getelementptr i16, ptr %dst, i64 %iv\n  %gep.src = getelementptr i16, ptr %src, i64 %iv\n  %l = load i16, ptr %gep.src, align 2\n  %c = icmp eq i16 %l, 10\n  br i1 %c, label %loop.latch, label %then\n\nthen:                                             ; preds = %loop.header\n  store i16 0, ptr %gep.dst, align 2\n  br label %loop.latch\n\nloop.latch:                                       ; preds = %then, %loop.header\n  %iv.next = add i64 %iv, 1\n  %ec = icmp eq i64 %iv.next, 99\n  br i1 %ec, label %exit, label %loop.header\n\nexit:                                             ; preds = %loop.latch\n  store i16 0, ptr %gep.dst, align 2\n  ret void\n}\n"
        },
        {
          "test_name": "gep_use_in_dead_block",
          "test_body": "define void @gep_use_in_dead_block(ptr noalias %dst, ptr %src) {\nentry:\n  br label %loop.header\n\nloop.header:                                      ; preds = %loop.latch, %entry\n  %iv = phi i64 [ 0, %entry ], [ %iv.next, %loop.latch ]\n  %gep.src = getelementptr i16, ptr %src, i64 %iv\n  %l = load i16, ptr %gep.src, align 2\n  %c = icmp eq i16 %l, 10\n  br i1 %c, label %loop.latch, label %then\n\nthen:                                             ; preds = %loop.header\n  %gep.dst = getelementptr i16, ptr %dst, i64 %iv\n  store i16 0, ptr %gep.dst, align 2\n  br label %loop.latch\n\ndead:                                             ; preds = %dead\n  store i16 0, ptr %gep.dst, align 2\n  br label %dead\n\nloop.latch:                                       ; preds = %then, %loop.header\n  %iv.next = add i64 %iv, 1\n  %ec = icmp eq i64 %iv.next, 99\n  br i1 %ec, label %exit, label %loop.header\n\nexit:                                             ; preds = %loop.latch\n  ret void\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[LoopVectorize] Assertion `WideningDecision != CM_Unknown && \"Widening decision should be ready at this moment\"' failed.",
    "body": "Reduced LLVM IR:\r\n```llvm ir\r\n; ModuleID = 'reduced.bc'\r\ntarget datalayout = \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\"\r\ntarget triple = \"riscv64-unknown-linux-gnu\"\r\n\r\ndefine i32 @main(i64 %indvars.iv.i) #0 {\r\nentry:\r\n  br label %for.body6.i\r\n\r\nfor.body6.i:                                      ; preds = %for.inc34.i, %entry\r\n  %indvars.iv.i1 = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.inc34.i ]\r\n  br i1 false, label %for.body6.i.for.inc34.i_crit_edge, label %for.cond7.preheader.i\r\n\r\nfor.body6.i.for.inc34.i_crit_edge:                ; preds = %for.body6.i\r\n  br label %for.inc34.i\r\n\r\nfor.cond7.preheader.i:                            ; preds = %for.body6.i\r\n  %arrayidx30.i = getelementptr [0 x i16], ptr null, i64 0, i64 %indvars.iv.i\r\n  store i16 0, ptr %arrayidx30.i, align 2\r\n  br label %for.inc34.i\r\n\r\nfor.body19.1.i:                                   ; preds = %for.body19.1.i\r\n  store i16 0, ptr %arrayidx30.i, align 2\r\n  br label %for.body19.1.i\r\n\r\nfor.inc34.i:                                      ; preds = %for.cond7.preheader.i, %for.body6.i.for.inc34.i_crit_edge\r\n  %indvars.iv.next.i = add i64 %indvars.iv.i1, 1\r\n  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, 0\r\n  br i1 %exitcond.not.i, label %q.exit, label %for.body6.i\r\n\r\nq.exit:                                           ; preds = %for.inc34.i\r\n  ret i32 0\r\n}\r\n\r\nattributes #0 = { \"target-features\"=\"+64bit,+a,+c,+d,+f,+m,+relax,+v,+zicsr,+zifencei,+zmmul,+zve32f,+zve32x,+zve64d,+zve64f,+zve64x,+zvl128b,+zvl256b,+zvl32b,+zvl64b,-b,-e,-experimental-smmpm,-experimental-smnpm,-experimental-ssnpm,-experimental-sspm,-experimental-ssqosid,-experimental-supm,-experimental-zacas,-experimental-zalasr,-experimental-zicfilp,-experimental-zicfiss,-h,-shcounterenw,-shgatpa,-shtvala,-shvsatpa,-shvstvala,-shvstvecd,-smaia,-smcdeleg,-smcsrind,-smepmp,-smstateen,-ssaia,-ssccfg,-ssccptr,-sscofpmf,-sscounterenw,-sscsrind,-ssstateen,-ssstrict,-sstc,-sstvala,-sstvecd,-ssu64xl,-svade,-svadu,-svbare,-svinval,-svnapot,-svpbmt,-xcvalu,-xcvbi,-xcvbitmanip,-xcvelw,-xcvmac,-xcvmem,-xcvsimd,-xsfcease,-xsfvcp,-xsfvfnrclipxfqf,-xsfvfwmaccqqq,-xsfvqmaccdod,-xsfvqmaccqoq,-xsifivecdiscarddlone,-xsifivecflushdlone,-xtheadba,-xtheadbb,-xtheadbs,-xtheadcmo,-xtheadcondmov,-xtheadfmemidx,-xtheadmac,-xtheadmemidx,-xtheadmempair,-xtheadsync,-xtheadvdot,-xventanacondops,-xwchc,-za128rs,-za64rs,-zaamo,-zabha,-zalrsc,-zama16b,-zawrs,-zba,-zbb,-zbc,-zbkb,-zbkc,-zbkx,-zbs,-zca,-zcb,-zcd,-zce,-zcf,-zcmop,-zcmp,-zcmt,-zdinx,-zfa,-zfbfmin,-zfh,-zfhmin,-zfinx,-zhinx,-zhinxmin,-zic64b,-zicbom,-zicbop,-zicboz,-ziccamoa,-ziccif,-zicclsm,-ziccrse,-zicntr,-zicond,-zihintntl,-zihintpause,-zihpm,-zimop,-zk,-zkn,-zknd,-zkne,-zknh,-zkr,-zks,-zksed,-zksh,-zkt,-ztso,-zvbb,-zvbc,-zvfbfmin,-zvfbfwma,-zvfh,-zvfhmin,-zvkb,-zvkg,-zvkn,-zvknc,-zvkned,-zvkng,-zvknha,-zvknhb,-zvks,-zvksc,-zvksed,-zvksg,-zvksh,-zvkt,-zvl1024b,-zvl16384b,-zvl2048b,-zvl32768b,-zvl4096b,-zvl512b,-zvl65536b,-zvl8192b\" }\r\n```\r\n\r\nBacktrace:\r\n```\r\n> /scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt -passes=\"loop-vectorize\" -S reduced.ll\r\nopt: /scratch/tc-testing/tc-compiler-fuzz-trunk/llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:3631: llvm::LoopVectorizationCostModel::collectLoopUniforms(llvm::ElementCount)::<lambda(llvm::Instruction*, llvm::ElementCount)>: Assertion `WideningDecision != CM_Unknown && \"Widening decision should be ready at this moment\"' failed.\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.      Program arguments: /scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt -passes=loop-vectorize -S reduced.ll\r\n1.      Running pass \"function(loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>)\" on module \"reduced.ll\"\r\n2.      Running pass \"loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>\" on function \"main\"\r\n #0 0x000059f80448a570 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x2f4f570)\r\n #1 0x000059f80448798f llvm::sys::RunSignalHandlers() (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x2f4c98f)\r\n #2 0x000059f804487ae5 SignalHandler(int) Signals.cpp:0:0\r\n #3 0x0000795355842520 (/lib/x86_64-linux-gnu/libc.so.6+0x42520)\r\n #4 0x00007953558969fc __pthread_kill_implementation ./nptl/pthread_kill.c:44:76\r\n #5 0x00007953558969fc __pthread_kill_internal ./nptl/pthread_kill.c:78:10\r\n #6 0x00007953558969fc pthread_kill ./nptl/pthread_kill.c:89:10\r\n #7 0x0000795355842476 gsignal ./signal/../sysdeps/posix/raise.c:27:6\r\n #8 0x00007953558287f3 abort ./stdlib/abort.c:81:7\r\n #9 0x000079535582871b _nl_load_domain ./intl/loadmsgcat.c:1177:9\r\n#10 0x0000795355839e96 (/lib/x86_64-linux-gnu/libc.so.6+0x39e96)\r\n#11 0x000059f80347d610 llvm::LoopVectorizationCostModel::collectLoopUniforms(llvm::ElementCount) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x1f42610)\r\n#12 0x000059f80348fa77 llvm::LoopVectorizationPlanner::plan(llvm::ElementCount, unsigned int) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x1f54a77)\r\n#13 0x000059f803491b83 llvm::LoopVectorizePass::processLoop(llvm::Loop*) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x1f56b83)\r\n#14 0x000059f803494de1 llvm::LoopVectorizePass::runImpl(llvm::Function&, llvm::ScalarEvolution&, llvm::LoopInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::BlockFrequencyInfo*, llvm::TargetLibraryInfo*, llvm::DemandedBits&, llvm::AssumptionCache&, llvm::LoopAccessInfoManager&, llvm::OptimizationRemarkEmitter&, llvm::ProfileSummaryInfo*) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x1f59de1)\r\n#15 0x000059f803495497 llvm::LoopVectorizePass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x1f5a497)\r\n#16 0x000059f8022ff336 llvm::detail::PassModel<llvm::Function, llvm::LoopVectorizePass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0xdc4336)\r\n#17 0x000059f8042a17ff llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x2d667ff)\r\n#18 0x000059f8023024c6 llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0xdc74c6)\r\n#19 0x000059f8042a057b llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x2d6557b)\r\n#20 0x000059f8022fe7c6 llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0xdc37c6)\r\n#21 0x000059f80429e5dd llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x2d635dd)\r\n#22 0x000059f801b38c36 llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x5fdc36)\r\n#23 0x000059f801b2a881 optMain (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x5ef881)\r\n#24 0x0000795355829d90 __libc_start_call_main ./csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n#25 0x0000795355829e40 call_init ./csu/../csu/libc-start.c:128:20\r\n#26 0x0000795355829e40 __libc_start_main ./csu/../csu/libc-start.c:379:5\r\n#27 0x000059f801b206c5 _start (/scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt+0x5e56c5)\r\nzsh: IOT instruction (core dumped)  /scratch/tc-testing/tc-compiler-fuzz-trunk/build-gcv/build-llvm-linux/bin/opt\r\n```\r\n\r\nFound via fuzzer.",
    "author": "patrick-rivos",
    "labels": [
      "vectorizers",
      "crash-on-valid"
    ],
    "comments": []
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  },
  "bisect": "Cannot find a good commit"
}