{
  "bug_id": "150229",
  "issue_url": "https://github.com/llvm/llvm-project/issues/150229",
  "bug_type": "crash",
  "base_commit": "35bad229c1bc1f27fe58f9d37f8592fc67a7112c",
  "knowledge_cutoff": "2025-07-23T14:54:18Z",
  "lit_test_dir": [
    "llvm/test/Transforms/GVN"
  ],
  "hints": {
    "fix_commit": "a750fcb52bbf0ec0dc2022f73b1d48a4d43d8a07",
    "components": [
      "BreakCriticalEdges"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp": [
        [
          111,
          125
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp": [
        "llvm::SplitKnownCriticalEdge"
      ]
    }
  },
  "patch": "commit a750fcb52bbf0ec0dc2022f73b1d48a4d43d8a07\nAuthor: hanbeom <kese111@gmail.com>\nDate:   Mon Aug 11 16:25:52 2025 +0900\n\n    [GVN] Check IndirectBr in Predecessor Terminators (#151188)\n    \n    Critical edges with an IndirectBr terminator cannot be split.\n    Add a check it to prevent assertion failures.\n    \n    Fixes: #150229\n\ndiff --git a/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp b/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp\nindex ddd203f3acf7..42b1fdf17f38 100644\n--- a/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp\n+++ b/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp\n@@ -111,15 +111,14 @@ BasicBlock *\n llvm::SplitKnownCriticalEdge(Instruction *TI, unsigned SuccNum,\n                              const CriticalEdgeSplittingOptions &Options,\n                              const Twine &BBName) {\n-  assert(!isa<IndirectBrInst>(TI) &&\n-         \"Cannot split critical edge from IndirectBrInst\");\n-\n   BasicBlock *TIBB = TI->getParent();\n   BasicBlock *DestBB = TI->getSuccessor(SuccNum);\n \n-  // Splitting the critical edge to a pad block is non-trivial. Don't do\n-  // it in this generic function.\n-  if (DestBB->isEHPad()) return nullptr;\n+  // Splitting the critical edge to a pad block is non-trivial.\n+  // And we cannot split block with IndirectBr as a terminator.\n+  // Don't do it in this generic function.\n+  if (DestBB->isEHPad() || isa<IndirectBrInst>(TI))\n+    return nullptr;\n \n   if (Options.IgnoreUnreachableDests &&\n       isa<UnreachableInst>(DestBB->getFirstNonPHIOrDbgOrLifetime()))\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/GVN/cond_br.ll",
      "commands": [
        "opt -passes=gvn -S < %s"
      ],
      "tests": [
        {
          "test_name": "indirectbr_could_not_split",
          "test_body": "define void @indirectbr_could_not_split() {\nentry:\n  br i1 false, label %ibr, label %exit\n\nibr:                                              ; preds = %entry\n  indirectbr ptr null, [label %exit, label %exit]\n\nexit:                                             ; preds = %ibr, %ibr, %entry\n  ret void\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[GVN] hits assertion \"Cannot split critical edge from IndirectBrInst\" in llvm::SplitKnownCriticalEdge",
    "body": "The gvn pass cannot handle the indirectbr instruction with more than one destination. It hits an assertion in llvm::SplitKnownCriticalEdge trying to add a \"dead\" block after the indirectbr.\nThe newgvn pass works fine.\n\nReproducer:\n```llvm\ndefine void @foo(i1 %cmp) {\nfirst:\n  br i1 %cmp, label %exit, label %second\n\nsecond:\n  br i1 %cmp, label %ibr, label %exit ; cmp must be false to reach this, branch to ibr never taken\n\nibr: ; this block is dead\n  indirectbr ptr blockaddress(@foo, %exit), [label %exit, label %exit] ; double label required, works with just one\n\nexit:\n  ret void\n}\n```\n\n`opt --passes=gvn -S minimal.ll`\n\nRelated Bug: https://github.com/llvm/llvm-project/issues/49237",
    "author": "tetzank",
    "labels": [
      "crash",
      "llvm:GVN"
    ],
    "comments": [
      {
        "author": "tetzank",
        "body": "Even smaller reproducer:\n```llvm\ndefine void @foo() {\nentry:\n  br i1 false, label %ibr, label %exit\n\nibr: ; this block is dead\n  indirectbr ptr null, [label %exit, label %exit]\n\nexit:\n  ret void\n}\n```"
      },
      {
        "author": "hstk30-hw",
        "body": "Is the same issue with https://github.com/llvm/llvm-project/issues/147869? \n@jacobly0 @nikic "
      },
      {
        "author": "ParkHanbum",
        "body": "@hstk30-hw I think it's a different issue, this issue arises in the process of separating critical edges. but it can be fix as same way. IMO"
      },
      {
        "author": "ParkHanbum",
        "body": "@nikic @dtcxzyw Now that I'm a committer, I can assign this issue to myself, but this is my first time, so I'm asking. Can I assign this issue to myself?"
      },
      {
        "author": "nikic",
        "body": "@ParkHanbum Feel free to assign.\n\nCritical edges on indirectbr cannot be split, so we need to bail out in this case."
      }
    ]
  },
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  },
  "verified": true,
  "bisect": "Cannot find a good commit"
}