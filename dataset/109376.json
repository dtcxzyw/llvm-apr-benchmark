{
  "bug_id": "109376",
  "issue_url": "https://github.com/llvm/llvm-project/issues/109376",
  "bug_type": "crash",
  "base_commit": "1c47fa9b620d0abb280647b4f361ada43784d00e",
  "knowledge_cutoff": "2024-09-20T05:30:57Z",
  "lit_test_dir": [
    "llvm/test/Transforms/SLPVectorizer"
  ],
  "hints": {
    "fix_commit": "3db0f8c895d4e814a18b754f9afbb1e03bd839a5",
    "components": [
      "SLPVectorizer"
    ],
    "files": [
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        [
          18668,
          18673
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        "tryToReduce"
      ]
    }
  },
  "patch": "commit 3db0f8c895d4e814a18b754f9afbb1e03bd839a5\nAuthor: Alexey Bataev <a.bataev@outlook.com>\nDate:   Mon Sep 23 10:49:54 2024 -0700\n\n    [SLP]Update TrackedToOrig mappings after reduction vectorization\n    \n    Need to update mappings in TrackedToOrig to correctly provide mapping\n    between updated reduced value after vectorization and its original\n    value, otherwise the compiler might miss this update and it may cause\n    compiler crash later, when it tries to find the original instruction\n    mapping for the updated value.\n    \n    Fixes https://github.com/llvm/llvm-project/issues/109376\n\ndiff --git a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\nindex a88702b81096..04b8fc09a724 100644\n--- a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n+++ b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n@@ -18668,6 +18668,14 @@ public:\n         // Vectorize a tree.\n         Value *VectorizedRoot =\n             V.vectorizeTree(LocalExternallyUsedValues, InsertPt);\n+        // Update TrackedToOrig mapping, since the tracked values might be\n+        // updated.\n+        for (Value *RdxVal : Candidates) {\n+          Value *OrigVal = TrackedToOrig.at(RdxVal);\n+          Value *TransformedRdxVal = TrackedVals.at(OrigVal);\n+          if (TransformedRdxVal != RdxVal)\n+            TrackedToOrig.try_emplace(TransformedRdxVal, OrigVal);\n+        }\n \n         Builder.SetInsertPoint(InsertPt);\n \n",
  "tests": [
    {
      "file": "llvm/test/Transforms/SLPVectorizer/X86/reduced-value-vectorized-later.ll",
      "commands": [
        "opt -S -passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu < %s"
      ],
      "tests": [
        {
          "test_name": "test",
          "test_body": "define i16 @test() {\nentry:\n  %subi = add i16 0, 0\n  %sub40.i = add i16 %subi, 0\n  %sub41.i = add i16 %subi, 0\n  %sub42.i = add i16 %subi, 0\n  %sub43.i = add i16 %subi, 0\n  %sub44.i = add i16 %subi, 0\n  %sub45.i = add i16 %subi, 0\n  %sub46.i = add i16 0, 0\n  %sub47.i = add i16 0, 0\n  %sub48.i = add i16 0, 0\n  %sub49.i = add i16 0, 0\n  %or40.i = or i16 %sub40.i, %sub41.i\n  %or41.i = or i16 %or40.i, %sub42.i\n  %or42.i = or i16 %or41.i, %sub43.i\n  %or43.i = or i16 %or42.i, %sub44.i\n  %or44.i = or i16 %or43.i, %sub45.i\n  %or45.i = or i16 %or44.i, %sub46.i\n  %or46.i = or i16 %or45.i, %sub47.i\n  %or47.i = or i16 %or46.i, %sub48.i\n  %or48.i = or i16 %or47.i, %sub49.i\n  %or50.i = or i16 %or48.i, %subi\n  %subii = add i16 0, 0\n  %subi16.i = add i16 %subii, 0\n  %subi17.i = add i16 %subii, 0\n  %0 = or i16 %subi16.i, %subi17.i\n  %1 = or i16 %0, %or50.i\n  ret i16 %1\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[SLPVectorizer] Assertion `Iter != this->end() && \"DenseMap::at failed due to a missing key\"' failed.",
    "body": "Reproducer: https://godbolt.org/z/v5bqhPWqb\r\n```\r\n; bin/opt -passes=slp-vectorizer reduced.ll -S\r\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\r\ntarget triple = \"x86_64-unknown-linux-gnu\"\r\n\r\ndefine i16 @test() {\r\nentry:\r\n  %sub.i487.i.reass.i = add i16 0, 0\r\n  %sub.i487.i.reass.40.i = add i16 %sub.i487.i.reass.i, 0\r\n  %sub.i487.i.reass.41.i = add i16 %sub.i487.i.reass.i, 0\r\n  %sub.i487.i.reass.42.i = add i16 %sub.i487.i.reass.i, 0\r\n  %sub.i487.i.reass.43.i = add i16 %sub.i487.i.reass.i, 0\r\n  %sub.i487.i.reass.44.i = add i16 %sub.i487.i.reass.i, 0\r\n  %sub.i487.i.reass.45.i = add i16 %sub.i487.i.reass.i, 0\r\n  %sub.i487.i.reass.46.i = add i16 0, 0\r\n  %sub.i487.i.reass.47.i = add i16 0, 0\r\n  %sub.i487.i.reass.48.i = add i16 0, 0\r\n  %sub.i487.i.reass.49.i = add i16 0, 0\r\n  %or374461.i.40.i = or i16 %sub.i487.i.reass.40.i, %sub.i487.i.reass.41.i\r\n  %or374461.i.41.i = or i16 %or374461.i.40.i, %sub.i487.i.reass.42.i\r\n  %or374461.i.42.i = or i16 %or374461.i.41.i, %sub.i487.i.reass.43.i\r\n  %or374461.i.43.i = or i16 %or374461.i.42.i, %sub.i487.i.reass.44.i\r\n  %or374461.i.44.i = or i16 %or374461.i.43.i, %sub.i487.i.reass.45.i\r\n  %or374461.i.45.i = or i16 %or374461.i.44.i, %sub.i487.i.reass.46.i\r\n  %or374461.i.46.i = or i16 %or374461.i.45.i, %sub.i487.i.reass.47.i\r\n  %or374461.i.47.i = or i16 %or374461.i.46.i, %sub.i487.i.reass.48.i\r\n  %or374461.i.48.i = or i16 %or374461.i.47.i, %sub.i487.i.reass.49.i\r\n  %or374461.i.50.i = or i16 %or374461.i.48.i, %sub.i487.i.reass.i\r\n  %sub.i487.i96.reass.i = add i16 0, 0\r\n  %sub.i487.i96.reass.16.i = add i16 %sub.i487.i96.reass.i, 0\r\n  %sub.i487.i96.reass.17.i = add i16 %sub.i487.i96.reass.i, 0\r\n  %0 = or i16 %sub.i487.i96.reass.16.i, %sub.i487.i96.reass.17.i\r\n  %1 = or i16 %0, %or374461.i.50.i\r\n  ret i16 %1\r\n}\r\n```\r\n```\r\nopt: /root/llvm-project/llvm/include/llvm/ADT/DenseMap.h:204: const ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::at(llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::const_arg_type_t<KeyT>) const [with DerivedT = llvm::DenseMap<llvm::Value*, llvm::Value*>; KeyT = llvm::Value*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Value*, void>; BucketT = llvm::detail::DenseMapPair<llvm::Value*, llvm::Value*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::const_arg_type_t<KeyT> = const llvm::Value*]: Assertion `Iter != this->end() && \"DenseMap::at failed due to a missing key\"' failed.\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.\tProgram arguments: /opt/compiler-explorer/clang-assertions-trunk/bin/opt -o /app/output.s -S -passes=slp-vectorizer <source>\r\n1.\tRunning pass \"function(slp-vectorizer)\" on module \"<source>\"\r\n2.\tRunning pass \"slp-vectorizer\" on function \"test\"\r\n #0 0x0000000005035d68 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x5035d68)\r\n #1 0x00000000050334ac SignalHandler(int) Signals.cpp:0:0\r\n #2 0x0000707bdcc42520 (/lib/x86_64-linux-gnu/libc.so.6+0x42520)\r\n #3 0x0000707bdcc969fc pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fc)\r\n #4 0x0000707bdcc42476 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42476)\r\n #5 0x0000707bdcc287f3 abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f3)\r\n #6 0x0000707bdcc2871b (/lib/x86_64-linux-gnu/libc.so.6+0x2871b)\r\n #7 0x0000707bdcc39e96 (/lib/x86_64-linux-gnu/libc.so.6+0x39e96)\r\n #8 0x000000000409326e llvm::DenseMapBase<llvm::DenseMap<llvm::Value*, llvm::Value*, llvm::DenseMapInfo<llvm::Value*, void>, llvm::detail::DenseMapPair<llvm::Value*, llvm::Value*>>, llvm::Value*, llvm::Value*, llvm::DenseMapInfo<llvm::Value*, void>, llvm::detail::DenseMapPair<llvm::Value*, llvm::Value*>>::at(llvm::Value const*) const (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x409326e)\r\n #9 0x000000000413473f (anonymous namespace)::HorizontalReduction::tryToReduce(llvm::slpvectorizer::BoUpSLP&, llvm::DataLayout const&, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo const&) SLPVectorizer.cpp:0:0\r\n#10 0x00000000041370d1 llvm::SLPVectorizerPass::vectorizeHorReduction(llvm::PHINode*, llvm::Instruction*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, llvm::TargetTransformInfo*, llvm::SmallVectorImpl<llvm::WeakTrackingVH>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x41370d1)\r\n#11 0x000000000413b996 llvm::SLPVectorizerPass::vectorizeRootInstruction(llvm::PHINode*, llvm::Instruction*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, llvm::TargetTransformInfo*) (.constprop.0) SLPVectorizer.cpp:0:0\r\n#12 0x000000000413ff36 llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x413ff36)\r\n#13 0x0000000004146401 llvm::SLPVectorizerPass::runImpl(llvm::Function&, llvm::ScalarEvolution*, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo*, llvm::AAResults*, llvm::LoopInfo*, llvm::DominatorTree*, llvm::AssumptionCache*, llvm::DemandedBits*, llvm::OptimizationRemarkEmitter*) (.part.0) SLPVectorizer.cpp:0:0\r\n#14 0x000000000414708b llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x414708b)\r\n#15 0x0000000002f1a1ae llvm::detail::PassModel<llvm::Function, llvm::SLPVectorizerPass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x2f1a1ae)\r\n#16 0x0000000004e38158 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x4e38158)\r\n#17 0x0000000000e0b02e llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0xe0b02e)\r\n#18 0x0000000004e36b7e llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x4e36b7e)\r\n#19 0x0000000000e0a83e llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0xe0a83e)\r\n#20 0x0000000004e365b0 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x4e365b0)\r\n#21 0x00000000008feef2 llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x8feef2)\r\n#22 0x00000000008f1d7c optMain (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x8f1d7c)\r\n#23 0x0000707bdcc29d90 (/lib/x86_64-linux-gnu/libc.so.6+0x29d90)\r\n#24 0x0000707bdcc29e40 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e40)\r\n#25 0x00000000008e984e _start (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x8e984e)\r\nProgram terminated with signal: SIGSEGV\r\nCompiler returned: 139\r\n```\r\nllvm version: e8a739062490ce1bb30974f216ba187cd7b5a2a4",
    "author": "dtcxzyw",
    "labels": [
      "llvm:SLPVectorizer",
      "crash-on-valid"
    ],
    "comments": []
  }
}