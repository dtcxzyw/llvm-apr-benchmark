{
  "bug_id": "141628",
  "issue_url": "https://github.com/llvm/llvm-project/issues/141628",
  "bug_type": "crash",
  "base_commit": "8a49db35f45e56c92522c6079e51553e80c07aec",
  "knowledge_cutoff": "2025-05-27T16:04:50Z",
  "lit_test_dir": [
    "llvm/test/Transforms/SLPVectorizer"
  ],
  "hints": {
    "fix_commit": "cb648ba97003bc0aa94e86f8e89ea6e3e3d09a11",
    "components": [
      "SLPVectorizer"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        [
          15317,
          15322
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        "BoUpSLP::isGatherShuffledSingleRegisterEntry"
      ]
    }
  },
  "patch": "commit cb648ba97003bc0aa94e86f8e89ea6e3e3d09a11\nAuthor: Alexey Bataev <a.bataev@outlook.com>\nDate:   Thu May 29 08:49:31 2025 -0700\n\n    [SLP]Check if the user node has instructions, used only outside\n    \n    Gather nodes with parents, which scalar instructions are used only\n    outside, are generated before the whole tree vectorization. Need to\n    teach isGatherShuffledSingleRegisterEntry to check that such nodes are\n    emitted first and they cannot depend on other nodes, which are emitted\n    later.\n    \n    Fixes #141628\n\ndiff --git a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\nindex 831703b375d9..3e7f4cb56c0b 100644\n--- a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n+++ b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n@@ -15317,6 +15317,20 @@ BoUpSLP::isGatherShuffledSingleRegisterEntry(\n           UserPHI ? UserPHI->getIncomingBlock(UseEI.EdgeIdx)->getTerminator()\n                   : &getLastInstructionInBundle(UseEI.UserTE);\n       if (TEInsertPt == InsertPt) {\n+        // Check nodes, which might be emitted first.\n+        if (TEUseEI.UserTE->State == TreeEntry::Vectorize &&\n+            (TEUseEI.UserTE->getOpcode() != Instruction::PHI ||\n+             TEUseEI.UserTE->isAltShuffle()) &&\n+            all_of(TEUseEI.UserTE->Scalars,\n+                   [](Value *V) { return isUsedOutsideBlock(V); })) {\n+          if (UseEI.UserTE->State != TreeEntry::Vectorize ||\n+              (UseEI.UserTE->getOpcode() == Instruction::PHI &&\n+               !UseEI.UserTE->isAltShuffle()) ||\n+              any_of(UseEI.UserTE->Scalars,\n+                     [](Value *V) { return !isUsedOutsideBlock(V); }))\n+            continue;\n+        }\n+\n         // If the schedulable insertion point is used in multiple entries - just\n         // exit, no known ordering at this point, available only after real\n         // scheduling.\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/SLPVectorizer/X86/many-uses-parent-node.ll",
      "commands": [
        "opt -S --passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu -slp-threshold=-99999 < %s"
      ],
      "tests": [
        {
          "test_name": "<module>",
          "test_body": "\ndefine i32 @test(ptr addrspace(1) %arg) {\n;\nbb:\n  br label %bb1\n\nbb1:                                              ; preds = %bb\n  %getelementptr = getelementptr i8, ptr addrspace(1) %arg, i64 20\n  %getelementptr2 = getelementptr i8, ptr addrspace(1) %arg, i64 21\n  %getelementptr3 = getelementptr i8, ptr addrspace(1) %arg, i64 22\n  br i1 false, label %bb73, label %bb150\nbb4:                                              ; No predecessors!\n  br i1 false, label %bb68, label %bb70\nbb5:                                              ; No predecessors!\n  br i1 false, label %bb64, label %bb66\nbb6:                                              ; No predecessors!\n  br i1 false, label %bb60, label %bb62\nbb7:                                              ; No predecessors!\n  br i1 false, label %bb8, label %bb58\nbb8:                                              ; preds = %bb7\n  br i1 false, label %bb54, label %bb56\nbb9:                                              ; No predecessors!\n  br i1 false, label %bb50, label %bb52\nbb10:                                             ; No predecessors!\n  br i1 false, label %bb46, label %bb48\nbb11:                                             ; No predecessors!\n  br i1 false, label %bb42, label %bb44\nbb12:                                             ; No predecessors!\n  br i1 false, label %bb38, label %bb40\nbb13:                                             ; No predecessors!\n  br i1 false, label %bb36, label %bb122\nbb14:                                             ; No predecessors!\n  br i1 false, label %bb32, label %bb34\nbb15:                                             ; No predecessors!\n  br i1 false, label %bb28, label %bb30\nbb16:                                             ; No predecessors!\n  br i1 false, label %bb17, label %bb26\nbb17:                                             ; preds = %bb16\n  br i1 false, label %bb22, label %bb24\nbb18:                                             ; No predecessors!\n  br i1 false, label %bb19, label %bb20\nbb19:                                             ; preds = %bb18\n  %load = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb20:                                             ; preds = %bb18\n  %load21 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb22:                                             ; preds = %bb17\n  %load23 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb24:                                             ; preds = %bb17\n  %load25 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb26:                                             ; preds = %bb16\n  %load27 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb28:                                             ; preds = %bb15\n  %load29 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb30:                                             ; preds = %bb15\n  %load31 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb32:                                             ; preds = %bb14\n  %load33 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb34:                                             ; preds = %bb14\n  %load35 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb36:                                             ; preds = %bb13\n  %load37 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb38:                                             ; preds = %bb12\n  %load39 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb40:                                             ; preds = %bb12\n  %load41 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb42:                                             ; preds = %bb11\n  %load43 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb44:                                             ; preds = %bb11\n  %load45 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb46:                                             ; preds = %bb10\n  %load47 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb48:                                             ; preds = %bb10\n  %load49 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb50:                                             ; preds = %bb9\n  %load51 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb52:                                             ; preds = %bb9\n  %load53 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb54:                                             ; preds = %bb8\n  %load55 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb56:                                             ; preds = %bb8\n  %load57 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb58:                                             ; preds = %bb7\n  %load59 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb60:                                             ; preds = %bb6\n  %load61 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb62:                                             ; preds = %bb6\n  %load63 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb64:                                             ; preds = %bb5\n  %load65 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb66:                                             ; preds = %bb5\n  %load67 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb68:                                             ; preds = %bb4\n  %load69 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb70:                                             ; preds = %bb4\n  %load71 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb72:                                             ; No predecessors!\n  br i1 false, label %bb142, label %bb79\nbb73:                                             ; preds = %bb1\n  br i1 false, label %bb146, label %bb74\nbb74:                                             ; preds = %bb73\n  br i1 false, label %bb75, label %bb76\nbb75:                                             ; preds = %bb74\n  br label %bb150\nbb76:                                             ; preds = %bb74\n  br i1 false, label %bb153, label %bb77\nbb77:                                             ; preds = %bb76\n  %load78 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb79:                                             ; preds = %bb72\n  br i1 false, label %bb146, label %bb81\nbb80:                                             ; No predecessors!\n  br label %bb150\nbb81:                                             ; preds = %bb79\n  %load82 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb83:                                             ; No predecessors!\n  br label %bb138\nbb84:                                             ; No predecessors!\n  br i1 false, label %bb142, label %bb85\nbb85:                                             ; preds = %bb84\n  br i1 false, label %bb146, label %bb86\nbb86:                                             ; preds = %bb85\n  %load87 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb88:                                             ; No predecessors!\n  br label %bb134\nbb89:                                             ; No predecessors!\n  br i1 false, label %bb138, label %bb90\nbb90:                                             ; preds = %bb89\n  br i1 false, label %bb142, label %bb91\nbb91:                                             ; preds = %bb90\n  %load92 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb93:                                             ; No predecessors!\n  br label %bb130\nbb94:                                             ; No predecessors!\n  br i1 false, label %bb134, label %bb95\nbb95:                                             ; preds = %bb94\n  br i1 false, label %bb138, label %bb96\nbb96:                                             ; preds = %bb95\n  %load97 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb98:                                             ; No predecessors!\n  br label %bb126\nbb99:                                             ; No predecessors!\n  br i1 false, label %bb130, label %bb100\nbb100:                                            ; preds = %bb99\n  br i1 false, label %bb134, label %bb101\nbb101:                                            ; preds = %bb100\n  %load102 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb103:                                            ; No predecessors!\n  br label %bb124\nbb104:                                            ; No predecessors!\n  br i1 false, label %bb126, label %bb105\nbb105:                                            ; preds = %bb104\n  br i1 false, label %bb130, label %bb106\nbb106:                                            ; preds = %bb105\n  %load107 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb108:                                            ; No predecessors!\n  br label %bb124\nbb109:                                            ; No predecessors!\n  br i1 false, label %bb126, label %bb110\nbb110:                                            ; preds = %bb109\n  %load111 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb112:                                            ; No predecessors!\n  %load113 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  br label %bb124\nbb114:                                            ; No predecessors!\n  %load115 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb116:                                            ; No predecessors!\n  %load117 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb118:                                            ; No predecessors!\n  %load119 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb120:                                            ; No predecessors!\n  %load121 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\nbb122:                                            ; preds = %bb13\n  %load123 = load i8, ptr addrspace(1) %getelementptr3, align 1\n  ret i32 0\n\nbb124:                                            ; preds = %bb112, %bb108, %bb103\n  %phi = phi ptr addrspace(1) [ null, %bb112 ], [ %getelementptr3, %bb108 ], [ null, %bb103 ]\n  %phi125 = phi ptr addrspace(1) [ null, %bb112 ], [ null, %bb108 ], [ %getelementptr3, %bb103 ]\n  br label %bb126\n\nbb126:                                            ; preds = %bb124, %bb109, %bb104, %bb98\n  %phi127 = phi ptr addrspace(1) [ null, %bb124 ], [ null, %bb98 ], [ null, %bb104 ], [ %getelementptr3, %bb109 ]\n  %phi128 = phi ptr addrspace(1) [ null, %bb124 ], [ null, %bb98 ], [ %getelementptr3, %bb104 ], [ null, %bb109 ]\n  %phi129 = phi ptr addrspace(1) [ null, %bb124 ], [ %getelementptr3, %bb98 ], [ null, %bb104 ], [ null, %bb109 ]\n  br label %bb130\n\nbb130:                                            ; preds = %bb126, %bb105, %bb99, %bb93\n  %phi131 = phi ptr addrspace(1) [ null, %bb126 ], [ null, %bb93 ], [ null, %bb99 ], [ %getelementptr3, %bb105 ]\n  %phi132 = phi ptr addrspace(1) [ null, %bb126 ], [ null, %bb93 ], [ %getelementptr3, %bb99 ], [ null, %bb105 ]\n  %phi133 = phi ptr addrspace(1) [ null, %bb126 ], [ %getelementptr3, %bb93 ], [ null, %bb99 ], [ null, %bb105 ]\n  br label %bb134\n\nbb134:                                            ; preds = %bb130, %bb100, %bb94, %bb88\n  %phi135 = phi ptr addrspace(1) [ null, %bb130 ], [ null, %bb88 ], [ null, %bb94 ], [ %getelementptr3, %bb100 ]\n  %phi136 = phi ptr addrspace(1) [ null, %bb130 ], [ null, %bb88 ], [ %getelementptr3, %bb94 ], [ null, %bb100 ]\n  %phi137 = phi ptr addrspace(1) [ null, %bb130 ], [ %getelementptr3, %bb88 ], [ null, %bb94 ], [ null, %bb100 ]\n  br label %bb138\n\nbb138:                                            ; preds = %bb134, %bb95, %bb89, %bb83\n  %phi139 = phi ptr addrspace(1) [ null, %bb134 ], [ null, %bb83 ], [ null, %bb89 ], [ %getelementptr3, %bb95 ]\n  %phi140 = phi ptr addrspace(1) [ null, %bb134 ], [ null, %bb83 ], [ %getelementptr3, %bb89 ], [ null, %bb95 ]\n  %phi141 = phi ptr addrspace(1) [ null, %bb134 ], [ %getelementptr3, %bb83 ], [ null, %bb89 ], [ null, %bb95 ]\n  br label %bb142\n\nbb142:                                            ; preds = %bb138, %bb90, %bb84, %bb72\n  %phi143 = phi ptr addrspace(1) [ null, %bb138 ], [ null, %bb72 ], [ null, %bb84 ], [ %getelementptr3, %bb90 ]\n  %phi144 = phi ptr addrspace(1) [ null, %bb138 ], [ null, %bb72 ], [ %getelementptr3, %bb84 ], [ null, %bb90 ]\n  %phi145 = phi ptr addrspace(1) [ null, %bb138 ], [ %getelementptr3, %bb72 ], [ null, %bb84 ], [ null, %bb90 ]\n  br label %bb146\n\nbb146:                                            ; preds = %bb142, %bb85, %bb79, %bb73\n  %phi147 = phi ptr addrspace(1) [ null, %bb142 ], [ null, %bb73 ], [ null, %bb79 ], [ %getelementptr3, %bb85 ]\n  %phi148 = phi ptr addrspace(1) [ null, %bb142 ], [ null, %bb73 ], [ %getelementptr3, %bb79 ], [ null, %bb85 ]\n  %phi149 = phi ptr addrspace(1) [ null, %bb142 ], [ %getelementptr3, %bb73 ], [ null, %bb79 ], [ null, %bb85 ]\n  br label %bb150\n\nbb150:                                            ; preds = %bb146, %bb80, %bb75, %bb1\n  %phi151 = phi ptr addrspace(1) [ %getelementptr2, %bb75 ], [ %getelementptr3, %bb80 ], [ null, %bb146 ], [ %getelementptr, %bb1 ]\n  %phi152 = phi ptr addrspace(1) [ %getelementptr3, %bb75 ], [ null, %bb80 ], [ null, %bb146 ], [ %getelementptr2, %bb1 ]\n  br label %bb153\n\nbb153:                                            ; preds = %bb150, %bb76\n  %phi154 = phi ptr addrspace(1) [ null, %bb150 ], [ %getelementptr3, %bb76 ]\n  ret i32 0\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[SLPVectorizer] Instruction does not dominate all uses!.. LLVM ERROR: Broken module found, compilation aborted!",
    "body": "To reproduce run opt with the test below using -passes=slp-vectorizer -slp-threshold=-99999:\n\n[reduced-stripped.ll.zip](https://github.com/user-attachments/files/20462672/reduced-stripped.ll.zip)\n\nReproducer: https://godbolt.org/z/sf4Kvsqxa\n\nStack dump:\n```\n0.\tProgram arguments: /opt/compiler-explorer/clang-assertions-trunk/bin/opt -o /app/output.s -S -passes=slp-vectorizer -slp-threshold=-99999 <source>\n1.\tRunning pass \"verify\" on module \"<source>\"\n #0 0x00000000055ff378 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x55ff378)\n #1 0x00000000055fcd04 SignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n #2 0x00007a8d0c442520 (/lib/x86_64-linux-gnu/libc.so.6+0x42520)\n #3 0x00007a8d0c4969fc pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fc)\n #4 0x00007a8d0c442476 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42476)\n #5 0x00007a8d0c4287f3 abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f3)\n #6 0x0000000000810401 llvm::json::operator==(llvm::json::Value const&, llvm::json::Value const&) (.cold) JSON.cpp:0:0\n #7 0x000000000553a631 (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x553a631)\n #8 0x0000000005435df8 (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x5435df8)\n #9 0x000000000094557e llvm::detail::PassModel<llvm::Module, llvm::VerifierPass, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x94557e)\n#10 0x00000000053f3af0 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x53f3af0)\n#11 0x000000000094f9ca llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x94f9ca)\n#12 0x000000000094319c optMain (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x94319c)\n#13 0x00007a8d0c429d90 (/lib/x86_64-linux-gnu/libc.so.6+0x29d90)\n#14 0x00007a8d0c429e40 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e40)\n#15 0x000000000093add5 _start (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x93add5)\nProgram terminated with signal: SIGSEGV\nCompiler returned: 139\n```\n",
    "author": "TatyanaDoubts",
    "labels": [
      "llvm:SLPVectorizer",
      "crash"
    ],
    "comments": []
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  }
}