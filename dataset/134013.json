{
  "bug_id": "134013",
  "issue_url": "https://github.com/llvm/llvm-project/issues/134013",
  "bug_type": "crash",
  "base_commit": "65ed35393cc8a3b896d794ab316e0357d907efff",
  "knowledge_cutoff": "2025-04-02T00:52:53Z",
  "lit_test_dir": [
    "llvm/test/Transforms/SLPVectorizer"
  ],
  "hints": {
    "fix_commit": "48a4b14cb65d56ec3bbb473887c31d251092c83c",
    "components": [
      "SLPVectorizer"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        [
          8873,
          8878
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        "BoUpSLP::buildTree_rec"
      ]
    }
  },
  "patch": "commit 48a4b14cb65d56ec3bbb473887c31d251092c83c\nAuthor: Alexey Bataev <a.bataev@outlook.com>\nDate:   Wed Apr 2 05:57:16 2025 -0700\n\n    [SLP]Fix whole vector registers calculations for compares\n    \n    Need to check that the calculated number of the elements is not larger\n    than the original number of scalars to prevent a compiler crash.\n    \n    Fixes #134013\n\ndiff --git a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\nindex f9284b3a5f21..838e952c024c 100644\n--- a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n+++ b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n@@ -8873,6 +8873,7 @@ void BoUpSLP::buildTree_rec(ArrayRef<Value *> VL, unsigned Depth,\n           // Find the number of elements, which forms full vectors.\n           unsigned PWSz = getFullVectorNumberOfElements(\n               *TTI, UniqueValues.front()->getType(), UniqueValues.size());\n+          PWSz = std::min<unsigned>(PWSz, VL.size());\n           if (PWSz == VL.size()) {\n             ReuseShuffleIndices.clear();\n           } else {\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/SLPVectorizer/X86/whole-registers-compare.ll",
      "commands": [
        "opt -S --passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu -slp-threshold=-99999 < %s"
      ],
      "tests": [
        {
          "test_name": "<module>",
          "test_body": "\ndefine void @test() {\n;\nentry:\n  br label %do.body\n\ndo.body:\n  %val.sroa.66.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.66.1, %do.body ]\n  %val.sroa.60.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.60.2, %do.body ]\n  %val.sroa.54.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.54.2, %do.body ]\n  %val.sroa.48.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.48.2, %do.body ]\n  %val.sroa.42.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.42.2, %do.body ]\n  %val.sroa.36.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.36.2, %do.body ]\n  %val.sroa.30.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.30.2, %do.body ]\n  %val.sroa.24.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.24.2, %do.body ]\n  %val.sroa.18.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.18.2, %do.body ]\n  %val.sroa.12.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.12.2, %do.body ]\n  %val.sroa.6.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.6.2, %do.body ]\n  %val.sroa.0.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.0.1, %do.body ]\n  %cmp119 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.6.1 = select i1 %cmp119, float 0.000000e+00, float 0.000000e+00\n  %val.sroa.0.1 = select i1 %cmp119, float 0.000000e+00, float 0.000000e+00\n  %cmp119.1 = fcmp uge float %val.sroa.6.1, 0.000000e+00\n  %val.sroa.6.2 = select i1 %cmp119.1, float 0.000000e+00, float 0.000000e+00\n  %cmp119.2 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.12.2 = select i1 %cmp119.2, float 0.000000e+00, float 0.000000e+00\n  %cmp119.3 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.18.2 = select i1 %cmp119.3, float 0.000000e+00, float 0.000000e+00\n  %cmp119.4 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.24.2 = select i1 %cmp119.4, float 0.000000e+00, float 0.000000e+00\n  %cmp119.5 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.30.2 = select i1 %cmp119.5, float 0.000000e+00, float 0.000000e+00\n  %cmp119.6 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.36.2 = select i1 %cmp119.6, float 0.000000e+00, float 0.000000e+00\n  %cmp119.7 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.42.2 = select i1 %cmp119.7, float 0.000000e+00, float 0.000000e+00\n  %cmp119.8 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.48.2 = select i1 %cmp119.8, float 0.000000e+00, float 0.000000e+00\n  %cmp119.9 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.54.2 = select i1 %cmp119.9, float 0.000000e+00, float 0.000000e+00\n  %cmp119.10 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.66.1 = select i1 %cmp119.10, float 0.000000e+00, float 0.000000e+00\n  %val.sroa.60.2 = select i1 %cmp119.10, float 0.000000e+00, float 0.000000e+00\n  br label %do.body\n}"
        }
      ]
    }
  ],
  "issue": {
    "title": "crash in slp vectorizer after \"[SLP]Fix a check for the whole register use\"",
    "body": "After applying [bfd8cc0a3e82](https://github.com/llvm/llvm-project/commit/bfd8cc0a3e82), I am seeing a crash in SLPVectorize.cpp.\n\nReproducer:\n```\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\ndefine <2 x float> @foo() {\nentry:\n  br label %do.body\n\ndo.body:                                          ; preds = %do.body, %entry\n  %val.sroa.66.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.66.1, %do.body ]\n  %val.sroa.60.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.60.2, %do.body ]\n  %val.sroa.54.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.54.2, %do.body ]\n  %val.sroa.48.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.48.2, %do.body ]\n  %val.sroa.42.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.42.2, %do.body ]\n  %val.sroa.36.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.36.2, %do.body ]\n  %val.sroa.30.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.30.2, %do.body ]\n  %val.sroa.24.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.24.2, %do.body ]\n  %val.sroa.18.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.18.2, %do.body ]\n  %val.sroa.12.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.12.2, %do.body ]\n  %val.sroa.6.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.6.2, %do.body ]\n  %val.sroa.0.0 = phi float [ 0.000000e+00, %entry ], [ %val.sroa.0.1, %do.body ]\n  %cmp119 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.6.1 = select i1 %cmp119, float 0.000000e+00, float 0.000000e+00\n  %val.sroa.0.1 = select i1 %cmp119, float 0.000000e+00, float 0.000000e+00\n  %cmp119.1 = fcmp uge float %val.sroa.6.1, 0.000000e+00\n  %val.sroa.6.2 = select i1 %cmp119.1, float 0.000000e+00, float 0.000000e+00\n  %cmp119.2 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.12.2 = select i1 %cmp119.2, float 0.000000e+00, float 0.000000e+00\n  %cmp119.3 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.18.2 = select i1 %cmp119.3, float 0.000000e+00, float 0.000000e+00\n  %cmp119.4 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.24.2 = select i1 %cmp119.4, float 0.000000e+00, float 0.000000e+00\n  %cmp119.5 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.30.2 = select i1 %cmp119.5, float 0.000000e+00, float 0.000000e+00\n  %cmp119.6 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.36.2 = select i1 %cmp119.6, float 0.000000e+00, float 0.000000e+00\n  %cmp119.7 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.42.2 = select i1 %cmp119.7, float 0.000000e+00, float 0.000000e+00\n  %cmp119.8 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.48.2 = select i1 %cmp119.8, float 0.000000e+00, float 0.000000e+00\n  %cmp119.9 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.54.2 = select i1 %cmp119.9, float 0.000000e+00, float 0.000000e+00\n  %cmp119.10 = fcmp uge float 0.000000e+00, 0.000000e+00\n  %val.sroa.66.1 = select i1 %cmp119.10, float 0.000000e+00, float 0.000000e+00\n  %val.sroa.60.2 = select i1 %cmp119.10, float 0.000000e+00, float 0.000000e+00\n  br label %do.body\n}\n```\nCrash is occurring on [SLPVectorizer.cpp:16251](https://github.com/llvm/llvm-project/blob/ad1ca5f4a2bc09f99fd82e5444f5da37c2985e97/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp#L16251).\nAt the time `VF:12` and `Scalars.size():16`.\n",
    "author": "macurtis-amd",
    "labels": [
      "llvm:SLPVectorizer",
      "crash-on-valid"
    ],
    "comments": [
      {
        "author": "macurtis-amd",
        "body": "@alexey-bataev Thanks!"
      }
    ]
  },
  "verified": true
}