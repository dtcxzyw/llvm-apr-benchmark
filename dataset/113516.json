{
  "bug_id": "113516",
  "issue_url": "https://github.com/llvm/llvm-project/issues/113516",
  "bug_type": "crash",
  "base_commit": "0aec4d2b78a08f5f3e4b0ad0340a99e486d00110",
  "knowledge_cutoff": "2024-10-24T03:05:37Z",
  "lit_test_dir": [
    "llvm/test/Transforms/SLPVectorizer"
  ],
  "hints": {
    "fix_commit": "d2e7ee77d33e8b3be3b1d4e9bc5bc4c60b62b554",
    "components": [
      "SLPVectorizer"
    ],
    "files": [
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        [
          16118,
          16124
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        "isGather",
        "BoUpSLP::vectorizeTree",
        "empty",
        "getTreeEntry",
        "EdgeInfo"
      ]
    }
  },
  "patch": "commit d2e7ee77d33e8b3be3b1d4e9bc5bc4c60b62b554\nAuthor: Alexey Bataev <a.bataev@outlook.com>\nDate:   Thu Oct 24 08:15:21 2024 -0700\n\n    [SLP]Do not check for clustered loads only\n    \n    Since SLP support \"clusterization\" of the non-load instructions, the\n    restriction for reduced values for loads only should be removed to avoid\n    compiler crash.\n    \n    Fixes #113516\n\ndiff --git a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\nindex f76e913a57d5..012d85353f08 100644\n--- a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n+++ b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n@@ -16118,7 +16118,7 @@ BoUpSLP::vectorizeTree(const ExtraValueToDebugLocsMap &ExternallyUsedValues,\n     for (Instruction *I : RemovedInsts) {\n       const TreeEntry *IE = getTreeEntry(I);\n       if (IE->Idx != 0 &&\n-          !(VectorizableTree.front()->isGather() && isa<LoadInst>(I) &&\n+          !(VectorizableTree.front()->isGather() &&\n             !IE->UserTreeIndices.empty() &&\n             any_of(IE->UserTreeIndices,\n                    [&](const EdgeInfo &EI) {\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/SLPVectorizer/X86/non-load-reduced-as-part-of-bv.ll",
      "commands": [
        "opt -S --passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu < %s"
      ],
      "tests": [
        {
          "test_name": "foo",
          "test_body": "define i1 @foo() {\nentry:\n  %tobool.not.not509.i.1311.i.i = icmp ne i32 0, 0\n  %cmp80.1319.i.i189 = icmp sgt i32 0, 0\n  %tobool.not.not509.i.1.1.i.i = icmp ne i32 0, 0\n  %cmp80.1.1.i.i190 = icmp sgt i32 0, 0\n  %tobool.not.not509.i.2329.i.i = icmp ne i32 0, 0\n  %storemerge.2333.i.i = select i1 %tobool.not.not509.i.2329.i.i, i32 0, i32 0\n  %cmp80.2337.i.i192 = icmp sgt i32 0, 0\n  %tobool.not.not509.i.1.2.i.i = icmp ne i32 %storemerge.2333.i.i, 0\n  %cmp80.1.2.i.i193 = icmp sgt i32 0, 0\n  %cmp80.1.2.i.i = select i1 %tobool.not.not509.i.1.2.i.i, i1 %cmp80.1.2.i.i193, i1 false\n  %0 = select i1 %cmp80.1.2.i.i, i1 %tobool.not.not509.i.2329.i.i, i1 false\n  %1 = select i1 %0, i1 %cmp80.2337.i.i192, i1 false\n  %2 = select i1 %1, i1 false, i1 false\n  %3 = select i1 %2, i1 %tobool.not.not509.i.1.1.i.i, i1 false\n  %4 = select i1 %3, i1 %cmp80.1.1.i.i190, i1 false\n  %5 = select i1 %4, i1 %tobool.not.not509.i.1311.i.i, i1 false\n  %6 = select i1 %5, i1 %cmp80.1319.i.i189, i1 false\n  ret i1 %6\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[SLPVectorizer] Assertion `(I->use_empty() || all_of(I->uses(), [&](Use &U) { return isDeleted( cast<Instruction>(U.getUser())); })) && \"trying to erase instruction with users.\"' failed.",
    "body": "Reduced reproducer: https://godbolt.org/z/azEc6zjod\r\n```\r\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\r\ntarget triple = \"x86_64-unknown-linux-gnu\"\r\n\r\ndefine i1 @foo() {\r\nentry:\r\n  %tobool.not.not509.i.1311.i.i = icmp ne i32 0, 0\r\n  %cmp80.1319.i.i189 = icmp sgt i32 0, 0\r\n  %tobool.not.not509.i.1.1.i.i = icmp ne i32 0, 0\r\n  %cmp80.1.1.i.i190 = icmp sgt i32 0, 0\r\n  %tobool.not.not509.i.2329.i.i = icmp ne i32 0, 0\r\n  %storemerge.2333.i.i = select i1 %tobool.not.not509.i.2329.i.i, i32 0, i32 0\r\n  %cmp80.2337.i.i192 = icmp sgt i32 0, 0\r\n  %tobool.not.not509.i.1.2.i.i = icmp ne i32 %storemerge.2333.i.i, 0\r\n  %cmp80.1.2.i.i193 = icmp sgt i32 0, 0\r\n  %cmp80.1.2.i.i = select i1 %tobool.not.not509.i.1.2.i.i, i1 %cmp80.1.2.i.i193, i1 false\r\n  %0 = select i1 %cmp80.1.2.i.i, i1 %tobool.not.not509.i.2329.i.i, i1 false\r\n  %1 = select i1 %0, i1 %cmp80.2337.i.i192, i1 false\r\n  %2 = select i1 %1, i1 false, i1 false\r\n  %3 = select i1 %2, i1 %tobool.not.not509.i.1.1.i.i, i1 false\r\n  %4 = select i1 %3, i1 %cmp80.1.1.i.i190, i1 false\r\n  %5 = select i1 %4, i1 %tobool.not.not509.i.1311.i.i, i1 false\r\n  %6 = select i1 %5, i1 %cmp80.1319.i.i189, i1 false\r\n  ret i1 %6\r\n}\r\n```\r\n```\r\nopt: /root/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:2748: void llvm::slpvectorizer::BoUpSLP::removeInstructionsAndOperands(llvm::ArrayRef<U*>) [with T = llvm::Instruction]: Assertion `(I->use_empty() || all_of(I->uses(), [&](Use &U) { return isDeleted( cast<Instruction>(U.getUser())); })) && \"trying to erase instruction with users.\"' failed.\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.\tProgram arguments: /opt/compiler-explorer/clang-assertions-trunk/bin/opt -o /app/output.s -S -passes=slp-vectorizer <source>\r\n1.\tRunning pass \"function(slp-vectorizer)\" on module \"<source>\"\r\n2.\tRunning pass \"slp-vectorizer\" on function \"foo\"\r\n #0 0x00000000050d8608 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x50d8608)\r\n #1 0x00000000050d5fbc SignalHandler(int) Signals.cpp:0:0\r\n #2 0x000071afd7642520 (/lib/x86_64-linux-gnu/libc.so.6+0x42520)\r\n #3 0x000071afd76969fc pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fc)\r\n #4 0x000071afd7642476 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42476)\r\n #5 0x000071afd76287f3 abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f3)\r\n #6 0x000071afd762871b (/lib/x86_64-linux-gnu/libc.so.6+0x2871b)\r\n #7 0x000071afd7639e96 (/lib/x86_64-linux-gnu/libc.so.6+0x39e96)\r\n #8 0x000000000414e3af void llvm::slpvectorizer::BoUpSLP::removeInstructionsAndOperands<llvm::Instruction>(llvm::ArrayRef<llvm::Instruction*>) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x414e3af)\r\n #9 0x00000000041aa335 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x41aa335)\r\n#10 0x00000000041bcd90 (anonymous namespace)::HorizontalReduction::tryToReduce(llvm::slpvectorizer::BoUpSLP&, llvm::DataLayout const&, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo const&) SLPVectorizer.cpp:0:0\r\n#11 0x00000000041bfb71 llvm::SLPVectorizerPass::vectorizeHorReduction(llvm::PHINode*, llvm::Instruction*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, llvm::SmallVectorImpl<llvm::WeakTrackingVH>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x41bfb71)\r\n#12 0x00000000041c431b llvm::SLPVectorizerPass::vectorizeRootInstruction(llvm::PHINode*, llvm::Instruction*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) (.constprop.0) SLPVectorizer.cpp:0:0\r\n#13 0x00000000041c8ae8 llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x41c8ae8)\r\n#14 0x00000000041cf231 llvm::SLPVectorizerPass::runImpl(llvm::Function&, llvm::ScalarEvolution*, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo*, llvm::AAResults*, llvm::LoopInfo*, llvm::DominatorTree*, llvm::AssumptionCache*, llvm::DemandedBits*, llvm::OptimizationRemarkEmitter*) (.part.0) SLPVectorizer.cpp:0:0\r\n#15 0x00000000041cfedb llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x41cfedb)\r\n#16 0x0000000002f64f0e llvm::detail::PassModel<llvm::Function, llvm::SLPVectorizerPass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x2f64f0e)\r\n#17 0x0000000004ed9788 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x4ed9788)\r\n#18 0x0000000000e2773e llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0xe2773e)\r\n#19 0x0000000004ed81ae llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x4ed81ae)\r\n#20 0x0000000000e26e8e llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0xe26e8e)\r\n#21 0x0000000004ed7be0 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x4ed7be0)\r\n#22 0x000000000090a07a llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x90a07a)\r\n#23 0x00000000008fce7c optMain (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x8fce7c)\r\n#24 0x000071afd7629d90 (/lib/x86_64-linux-gnu/libc.so.6+0x29d90)\r\n#25 0x000071afd7629e40 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e40)\r\n#26 0x00000000008f493e _start (/opt/compiler-explorer/clang-assertions-trunk/bin/opt+0x8f493e)\r\nProgram terminated with signal: SIGSEGV\r\nCompiler returned: 139\r\n```\r\nllvm version: 33363521ca24f912cc25530f6cecbca53acce8a3",
    "author": "dtcxzyw",
    "labels": [
      "llvm:SLPVectorizer",
      "crash-on-valid"
    ],
    "comments": []
  }
}
