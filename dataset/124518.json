{
  "bug_id": "124518",
  "issue_url": "https://github.com/llvm/llvm-project/issues/124518",
  "bug_type": "crash",
  "base_commit": "2ec88374e07f8ec395b7bf414bf1bdda88cebfc6",
  "knowledge_cutoff": "2025-01-27T07:58:41Z",
  "lit_test_dir": [
    "llvm/test/Transforms/LoopUnrollAndJam"
  ],
  "hints": {
    "fix_commit": "3ef33066bb32a9d9b76d72c6de6a7ae9ff72ddcc",
    "components": [
      "LoopUnrollAndJamPass"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp": [
        [
          425,
          431
        ],
        [
          441,
          448
        ],
        [
          457,
          467
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp": [
        "LoopUnrollAndJamPass::run",
        "tryToUnrollAndJamLoop"
      ]
    }
  },
  "patch": "commit 3ef33066bb32a9d9b76d72c6de6a7ae9ff72ddcc\nAuthor: David Green <david.green@arm.com>\nDate:   Sat Mar 29 19:21:34 2025 +0000\n\n    [UnrollAndJam] Do not preserve loop nests if a loop was fully unrolled. (#133510)\n    \n    If UnJ completely unrolls a loop and removes it entirely, the loop\n    remains in the current loop nest. If the loop nest gets reused the loops\n    will no longer be valid. As there is no way to remove a loop from a\n    LoopNest, this patch removes the preserve of the LoopNestAnalysis so\n    that it will be regenerated.\n    \n    Fixes #124518\n\ndiff --git a/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp b/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp\nindex f1d1f3bc1e30..4fe74c7c3bbc 100644\n--- a/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp\n+++ b/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp\n@@ -425,7 +425,7 @@ static bool tryToUnrollAndJamLoop(LoopNest &LN, DominatorTree &DT, LoopInfo &LI,\n                                   const TargetTransformInfo &TTI,\n                                   AssumptionCache &AC, DependenceInfo &DI,\n                                   OptimizationRemarkEmitter &ORE, int OptLevel,\n-                                  LPMUpdater &U) {\n+                                  LPMUpdater &U, bool &AnyLoopRemoved) {\n   bool DidSomething = false;\n   ArrayRef<Loop *> Loops = LN.getLoops();\n   Loop *OutmostLoop = &LN.getOutermostLoop();\n@@ -441,8 +441,11 @@ static bool tryToUnrollAndJamLoop(LoopNest &LN, DominatorTree &DT, LoopInfo &LI,\n         tryToUnrollAndJamLoop(L, DT, &LI, SE, TTI, AC, DI, ORE, OptLevel);\n     if (Result != LoopUnrollResult::Unmodified)\n       DidSomething = true;\n-    if (L == OutmostLoop && Result == LoopUnrollResult::FullyUnrolled)\n-      U.markLoopAsDeleted(*L, LoopName);\n+    if (Result == LoopUnrollResult::FullyUnrolled) {\n+      if (L == OutmostLoop)\n+        U.markLoopAsDeleted(*L, LoopName);\n+      AnyLoopRemoved = true;\n+    }\n   }\n \n   return DidSomething;\n@@ -457,11 +460,13 @@ PreservedAnalyses LoopUnrollAndJamPass::run(LoopNest &LN,\n   DependenceInfo DI(&F, &AR.AA, &AR.SE, &AR.LI);\n   OptimizationRemarkEmitter ORE(&F);\n \n+  bool AnyLoopRemoved = false;\n   if (!tryToUnrollAndJamLoop(LN, AR.DT, AR.LI, AR.SE, AR.TTI, AR.AC, DI, ORE,\n-                             OptLevel, U))\n+                             OptLevel, U, AnyLoopRemoved))\n     return PreservedAnalyses::all();\n \n   auto PA = getLoopPassPreservedAnalyses();\n-  PA.preserve<LoopNestAnalysis>();\n+  if (!AnyLoopRemoved)\n+    PA.preserve<LoopNestAnalysis>();\n   return PA;\n }\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/LoopUnrollAndJam/delete_middle_loop.ll",
      "commands": [
        "opt -passes=\"loop(invalidate<all>,loop-unroll-and-jam,loop-unroll-and-jam)\" -allow-unroll-and-jam -unroll-and-jam-count=4 < %s -S"
      ],
      "tests": [
        {
          "test_name": "<module>",
          "test_body": "\n; This test completely unrolls the middle loop out of a 3-deep loop nest.\n\ndefine i16 @test_it() {\n;\nentry:\n  br label %for.cond\n\nfor.cond:                                         ; preds = %do.cond, %entry\n  br label %do.body2\n\ndo.body2:                                         ; preds = %do.cond, %for.cond\n  br label %while.cond3\n\nwhile.cond3:                                      ; preds = %while.cond3, %do.body2\n  br i1 true, label %do.cond, label %while.cond3\n\ndo.cond:                                          ; preds = %while.cond3\n  br i1 true, label %for.cond, label %do.body2\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "LoopUnrollAndJamPass crash: GenericLoopInfo.h:146: [...] Assertion `!isInvalid() && \"Loop not in a valid state!\"' failed.",
    "body": "llvm commit: 6805d7e8aa5f\n\nReproduce with:\n```opt -passes=\"loop(invalidate<all>,loop-unroll-and-jam,loop-unroll-and-jam)\" bbi-103085.ll -o /dev/null -S -unroll-and-jam-count=4 -mcpu=cortex-a55 -mtriple=aarch64```\n\nResult:\n```\nopt: ../include/llvm/Support/GenericLoopInfo.h:146: const std::vector<LoopT *> &llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getSubLoops() const [BlockT = llvm::BasicBlock, LoopT = llvm::Loop]: Assertion `!isInvalid() && \"Loop not in a valid state!\"' failed.\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\nStack dump:\n0.\tProgram arguments: build-all/bin/opt -passes=loop(invalidate<all>,loop-unroll-and-jam,loop-unroll-and-jam) bbi-103085.ll -o /dev/null -S -unroll-and-jam-count=4 -mcpu=cortex-a55 -mtriple=aarch64\n1.\tRunning pass \"function(loop(invalidate<all>,loop-unroll-and-jam,loop-unroll-and-jam))\" on module \"bbi-103085.ll\"\n2.\tRunning pass \"loop(invalidate<all>,loop-unroll-and-jam,loop-unroll-and-jam)\" on function \"test_it\"\n #0 0x0000564cc1e14ac6 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (build-all/bin/opt+0x45ceac6)\n #1 0x0000564cc1e1250e llvm::sys::RunSignalHandlers() (build-all/bin/opt+0x45cc50e)\n #2 0x0000564cc1e15379 SignalHandler(int) Signals.cpp:0:0\n #3 0x00007fafbeb0bd10 __restore_rt (/lib64/libpthread.so.0+0x12d10)\n #4 0x00007fafbc4ab52f raise (/lib64/libc.so.6+0x4e52f)\n #5 0x00007fafbc47ee65 abort (/lib64/libc.so.6+0x21e65)\n #6 0x00007fafbc47ed39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39)\n #7 0x00007fafbc4a3e86 (/lib64/libc.so.6+0x46e86)\n #8 0x0000564cc274b6cb void llvm::appendReversedLoopsToWorklist<llvm::iterator_range<std::reverse_iterator<llvm::Loop* const*>>>(llvm::iterator_range<std::reverse_iterator<llvm::Loop* const*>>&&, llvm::SmallPriorityWorklist<llvm::Loop*, 4u>&) (build-all/bin/opt+0x4f056cb)\n #9 0x0000564cc274b42e void llvm::appendLoopsToWorklist<llvm::ArrayRef<llvm::Loop*>&>(llvm::ArrayRef<llvm::Loop*>&, llvm::SmallPriorityWorklist<llvm::Loop*, 4u>&) (build-all/bin/opt+0x4f0542e)\n#10 0x0000564cc381dfce llvm::LoopUnrollAndJamPass::run(llvm::LoopNest&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) (build-all/bin/opt+0x5fd7fce)\n#11 0x0000564cc328d01d llvm::detail::PassModel<llvm::LoopNest, llvm::LoopUnrollAndJamPass, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::run(llvm::LoopNest&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) PassBuilderPipelines.cpp:0:0\n#12 0x0000564cc34ff5ed std::optional<llvm::PreservedAnalyses> llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::runSinglePass<llvm::LoopNest, std::unique_ptr<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>, std::default_delete<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>>>>(llvm::LoopNest&, std::unique_ptr<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>, std::default_delete<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>>>&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&, llvm::PassInstrumentation&) (build-all/bin/opt+0x5cb95ed)\n#13 0x0000564cc34fe8e5 llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::runWithLoopNestPasses(llvm::Loop&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) (build-all/bin/opt+0x5cb88e5)\n#14 0x0000564cc34fe480 llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::run(llvm::Loop&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) (build-all/bin/opt+0x5cb8480)\n#15 0x0000564cc327a8bd llvm::detail::PassModel<llvm::Loop, llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::run(llvm::Loop&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) PassBuilderPipelines.cpp:0:0\n#16 0x0000564cc35001a1 llvm::FunctionToLoopPassAdaptor::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (build-all/bin/opt+0x5cba1a1)\n#17 0x0000564cc327eedd llvm::detail::PassModel<llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) PassBuilderPipelines.cpp:0:0\n#18 0x0000564cc2035a27 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (build-all/bin/opt+0x47efa27)\n#19 0x0000564cc32846cd llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) PassBuilderPipelines.cpp:0:0\n#20 0x0000564cc203a5fe llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (build-all/bin/opt+0x47f45fe)\n#21 0x0000564cc327c19d llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) PassBuilderPipelines.cpp:0:0\n#22 0x0000564cc2034717 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (build-all/bin/opt+0x47ee717)\n#23 0x0000564cc320468c llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (build-all/bin/opt+0x59be68c)\n#24 0x0000564cc1dd7712 optMain (build-all/bin/opt+0x4591712)\n#25 0x00007fafbc4977e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5)\n#26 0x0000564cc1dd532e _start (build-all/bin/opt+0x458f32e)\nAbort\n```\n\n[bbi-103085.ll.gz](https://github.com/user-attachments/files/18556221/bbi-103085.ll.gz)",
    "author": "mikaelholmen",
    "labels": [
      "crash",
      "llvm:transforms",
      "generated by fuzzer"
    ],
    "comments": [
      {
        "author": "mikaelholmen",
        "body": "The opt pipeline used to triggered this is non-standard and generated by a fuzzer, so I'm labelling this with \"generated by fuzzer\". I don't know if that the intended use. If not, please let me know."
      },
      {
        "author": "davemgreen",
        "body": "Do you have the IR reproducer too? Thanks"
      },
      {
        "author": "mikaelholmen",
        "body": "> Do you have the IR reproducer too? Thanks\n\nBah, sorry. Attached it to the original post now.\nThanks!"
      },
      {
        "author": "mikaelholmen",
        "body": "I noticed that if we build opt with ASAN and run the bbi-103085.ll testcase we get\n```\n==3349467==ERROR: AddressSanitizer: use-after-poison on address 0x521000007a40 at pc 0x55713d205877 bp 0x7ffdd1999e50 sp 0x7ffdd1999e48\nREAD of size 1 at 0x521000007a40 thread T0\n    #0 0x55713d205876 in isInvalid /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/GenericLoopInfo.h:219:12\n    #1 0x55713d205876 in getSubLoops /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/GenericLoopInfo.h:146:5\n    #2 0x55713d205876 in begin /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/GenericLoopInfo.h:156:35\n    #3 0x55713d205876 in void llvm::appendReversedLoopsToWorklist<llvm::iterator_range<std::__1::reverse_iterator<llvm::Loop* const*>>>(llvm::iterator_range<std::__1::reverse_iterator<llvm::Loop* const*>>&&, llvm::SmallPriorityWorklist<llvm::Loop*, 4u>&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Utils/LoopUtils.cpp:1808:34\n    #4 0x55713d204ad9 in void llvm::appendLoopsToWorklist<llvm::ArrayRef<llvm::Loop*>&>(llvm::ArrayRef<llvm::Loop*>&, llvm::SmallPriorityWorklist<llvm::Loop*, 4u>&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Utils/LoopUtils.cpp:1820:3\n    #5 0x55714083fe1b in tryToUnrollAndJamLoop /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp:436:3\n    #6 0x55714083fe1b in llvm::LoopUnrollAndJamPass::run(llvm::LoopNest&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp:460:8\n    #7 0x55713f72db11 in llvm::detail::PassModel<llvm::LoopNest, llvm::LoopUnrollAndJamPass, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::run(llvm::LoopNest&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #8 0x55713fec0dd7 in std::__1::optional<llvm::PreservedAnalyses> llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::runSinglePass<llvm::LoopNest, std::__1::unique_ptr<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>, std::__1::default_delete<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>>>>(llvm::LoopNest&, std::__1::unique_ptr<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>, std::__1::default_delete<llvm::detail::PassConcept<llvm::LoopNest, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>>>&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&, llvm::PassInstrumentation&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/Transforms/Scalar/LoopPassManager.h:375:32\n    #9 0x55713febe67c in llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::runWithLoopNestPasses(llvm::Loop&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Scalar/LoopPassManager.cpp:112:16\n    #10 0x55713febdd61 in llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::run(llvm::Loop&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Scalar/LoopPassManager.cpp:30:32\n    #11 0x55713f719901 in llvm::detail::PassModel<llvm::Loop, llvm::PassManager<llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&>::run(llvm::Loop&, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults&>&, llvm::LoopStandardAnalysisResults&, llvm::LPMUpdater&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #12 0x55713fec3348 in llvm::FunctionToLoopPassAdaptor::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Scalar/LoopPassManager.cpp:302:38\n    #13 0x55713f722991 in llvm::detail::PassModel<llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #14 0x55713ba254c9 in llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerImpl.h:81:38\n    #15 0x55713f728871 in llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #16 0x55713ba34d25 in llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) /repo/llvm/build-all-bbisdk-asan/../lib/IR/PassManager.cpp:124:38\n    #17 0x55713f71d491 in llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #18 0x55713ba218f9 in llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerImpl.h:81:38\n    #19 0x55713f5eda5d in llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::__1::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) /repo/llvm/build-all-bbisdk-asan/../tools/opt/NewPMDriver.cpp:552:7\n    #20 0x55713b2721b3 in optMain /repo/llvm/build-all-bbisdk-asan/../tools/opt/optdriver.cpp:725:12\n    #21 0x7f6c3bae47e4 in __libc_start_main (/lib64/libc.so.6+0x3a7e4) (BuildId: 37e4ac6a7fb96950b0e6bf72d73d94f3296c77eb)\n    #22 0x55713b1823ad in _start (/repo/llvm/build-all-bbisdk-asan/bin/opt+0x8cfe3ad)\n\n0x521000007a40 is located 320 bytes inside of 4096-byte region [0x521000007900,0x521000008900)\nallocated by thread T0 here:\n    #0 0x55713b25a992 in operator new(unsigned long, std::align_val_t, std::nothrow_t const&) asan_new_delete.cpp:113:3\n    #1 0x55713b346d4f in llvm::allocate_buffer(unsigned long, unsigned long) /repo/llvm/build-all-bbisdk-asan/../lib/Support/MemAlloc.cpp:16:18\n    #2 0x55713b34a30a in Allocate /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/AllocatorBase.h:92:12\n    #3 0x55713b34a30a in StartNewSlab /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/Allocator.h:346:42\n    #4 0x55713b34a30a in llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>::AllocateSlow(unsigned long, unsigned long, llvm::Align) /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/Allocator.h:202:5\n    #5 0x55713cb12443 in Allocate /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/Allocator.h:178:12\n    #6 0x55713cb12443 in Allocate /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/Allocator.h:216:12\n    #7 0x55713cb12443 in Allocate /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/AllocatorBase.h:53:43\n    #8 0x55713cb12443 in Allocate<llvm::Loop> /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/AllocatorBase.h:76:29\n    #9 0x55713cb12443 in llvm::Loop* llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>::AllocateLoop<llvm::BasicBlock*&>(llvm::BasicBlock*&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/GenericLoopInfo.h:571:36\n    #10 0x55713cb0ff50 in llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>::analyze(llvm::DominatorTreeBase<llvm::BasicBlock, false> const&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/GenericLoopInfoImpl.h:594:18\n    #11 0x55713cb23dbc in llvm::LoopAnalysis::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../lib/Analysis/LoopInfo.cpp:977:6\n    #12 0x55714109e4e7 in llvm::detail::AnalysisPassModel<llvm::Function, llvm::LoopAnalysis, llvm::AnalysisManager<llvm::Function>::Invalidator>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:321:14\n    #13 0x55713ba300ab in llvm::AnalysisManager<llvm::Function>::getResultImpl(llvm::AnalysisKey*, llvm::Function&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerImpl.h:156:35\n    #14 0x55713d1e67b4 in getResult<llvm::LoopAnalysis> /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManager.h:414:9\n    #15 0x55713d1e67b4 in llvm::LoopSimplifyPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Utils/LoopSimplify.cpp:825:22\n    #16 0x55713f719f11 in llvm::detail::PassModel<llvm::Function, llvm::LoopSimplifyPass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #17 0x55713ba254c9 in llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerImpl.h:81:38\n    #18 0x55713fec1dce in llvm::FunctionToLoopPassAdaptor::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../lib/Transforms/Scalar/LoopPassManager.cpp:209:34\n    #19 0x55713f722991 in llvm::detail::PassModel<llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #20 0x55713ba254c9 in llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerImpl.h:81:38\n    #21 0x55713f728871 in llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #22 0x55713ba34d25 in llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) /repo/llvm/build-all-bbisdk-asan/../lib/IR/PassManager.cpp:124:38\n    #23 0x55713f71d491 in llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerInternal.h:91:17\n    #24 0x55713ba218f9 in llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) /repo/llvm/build-all-bbisdk-asan/../include/llvm/IR/PassManagerImpl.h:81:38\n    #25 0x55713f5eda5d in llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::__1::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) /repo/llvm/build-all-bbisdk-asan/../tools/opt/NewPMDriver.cpp:552:7\n    #26 0x55713b2721b3 in optMain /repo/llvm/build-all-bbisdk-asan/../tools/opt/optdriver.cpp:725:12\n    #27 0x7f6c3bae47e4 in __libc_start_main (/lib64/libc.so.6+0x3a7e4) (BuildId: 37e4ac6a7fb96950b0e6bf72d73d94f3296c77eb)\n\nSUMMARY: AddressSanitizer: use-after-poison /repo/llvm/build-all-bbisdk-asan/../include/llvm/Support/GenericLoopInfo.h:219:12 in isInvalid\nShadow bytes around the buggy address:\n  0x521000007780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x521000007800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x521000007880: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x521000007900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x521000007980: 00 00 00 00 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7\n=>0x521000007a00: f7 f7 f7 f7 f7 f7 f7 f7[f7]f7 00 00 00 00 00 00\n  0x521000007a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f7 f7\n  0x521000007b00: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7\n  0x521000007b80: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7\n  0x521000007c00: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7\n  0x521000007c80: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==3349467==ABORTING\n```\n"
      }
    ]
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": false
  },
  "bisect": "Cannot find a good commit"
}