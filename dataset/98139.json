{
  "bug_id": "98139",
  "issue_url": "https://github.com/llvm/llvm-project/issues/98139",
  "bug_type": "miscompilation",
  "base_commit": "6aefa918768c834ec21e0b599fa14d03b9ce3dc0",
  "knowledge_cutoff": "2024-07-09T09:49:19Z",
  "lit_test_dir": [
    "llvm/test/Transforms/InstCombine"
  ],
  "hints": {
    "fix_commit": "722151664ecfd53295392ad875ff9bfdcd1deaaf",
    "components": [
      "InstCombine"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp": [
        [
          411,
          417
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp": [
        "InstCombinerImpl::SimplifyDemandedUseBits"
      ]
    }
  },
  "patch": "commit 722151664ecfd53295392ad875ff9bfdcd1deaaf\nAuthor: Yingwei Zheng <dtcxzyw2333@gmail.com>\nDate:   Tue Jul 9 22:04:55 2024 +0800\n\n    [InstCombine] Fix typo in `adjustKnownBitsForSelectArm` (#98155)\n    \n    Fixes https://github.com/llvm/llvm-project/issues/98139.\n\ndiff --git a/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp b/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp\nindex 98f085a2c756..081e783c964f 100644\n--- a/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp\n+++ b/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp\n@@ -411,7 +411,7 @@ Value *InstCombinerImpl::SimplifyDemandedUseBits(Instruction *I,\n     // Only known if known in both the LHS and RHS.\n     adjustKnownBitsForSelectArm(LHSKnown, I->getOperand(0), I->getOperand(1),\n                                 /*Invert=*/false, Depth, Q);\n-    adjustKnownBitsForSelectArm(LHSKnown, I->getOperand(0), I->getOperand(2),\n+    adjustKnownBitsForSelectArm(RHSKnown, I->getOperand(0), I->getOperand(2),\n                                 /*Invert=*/true, Depth, Q);\n     Known = LHSKnown.intersectWith(RHSKnown);\n     break;\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/InstCombine/pr98139.ll",
      "commands": [
        "opt -S -passes=instcombine < %s"
      ],
      "tests": [
        {
          "test_name": "pr98139",
          "test_body": "define i8 @pr98139(i16 %a, i16 %b, i1 %cond) {\n  %sel = select i1 %cond, i16 1, i16 254\n  %cond1 = icmp ne i16 %b, 0\n  %mask = and i16 %a, 255\n  %cond2 = icmp ne i16 %mask, 255\n  %cond3 = or i1 %cond1, %cond2\n  %sel2 = select i1 %cond3, i16 %sel, i16 255\n  %sub = sub i16 %sel2, %a\n  %trunc = trunc i16 %sub to i8\n  ret i8 %trunc\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "wrong code at -O{s,2,3} on x86_64-linux-gnu",
    "body": "It appears to be a recent regression as it doesn't reproduce with 18.1.0 and earlier.\r\n\r\nCompiler Explorer: https://godbolt.org/z/o595xsMdb\r\n\r\n```\r\n[512] % clangtk -v\r\nclang version 19.0.0git (https://github.com/llvm/llvm-project.git 765e2f9a8de27cc8fd8c75540844e9630d8229ad)\r\nTarget: x86_64-unknown-linux-gnu\r\nThread model: posix\r\nInstalledDir: /local/suz-local/software/local/clang-trunk/bin\r\nBuild config: +assertions\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/10\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/11\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9\r\nSelected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/11\r\nCandidate multilib: .;@m64\r\nSelected multilib: .;@m64\r\n[513] % \r\n[513] % clangtk -O1 small.c; ./a.out\r\n1\r\n[514] % clangtk -O3 small.c; ./a.out\r\n-2\r\n1\r\n[515] % cat small.c\r\nint printf(const char *, ...);\r\nint a, b, c, e;\r\nchar d;\r\nint main() {\r\n  int f = 1;\r\n  unsigned g = 1;\r\n  for (; c < 2; c++) {\r\n    if (g)\r\n      b = 1;\r\n    char h = f;\r\n    f = ~h;\r\n    d = ~b - ~g * (a || f);\r\n    g = ~g;\r\n    if (g < 1)\r\n      break;\r\n    if (d)\r\n      printf(\"%d\\n\", g);\r\n    f = e;\r\n  }\r\n  return 0;\r\n}\r\n```",
    "author": "zhendongsu",
    "labels": [
      "miscompilation",
      "confirmed",
      "llvm:instcombine"
    ],
    "comments": [
      {
        "author": "dtcxzyw",
        "body": "There is a bug in `SimplifyDemandedInstructionBits` :)\r\nI am working to provide a minimal reproducer.\r\n"
      },
      {
        "author": "dtcxzyw",
        "body": "@nikic https://github.com/llvm/llvm-project/blob/a9183b8899f2c02ba3710b27c0cbdde6831a627b/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp#L411-L416\r\n\r\nI will post a fix later.\r\n"
      },
      {
        "author": "dtcxzyw",
        "body": "Reproducer: https://alive2.llvm.org/ce/z/GAUsBC\r\n```\r\ndefine i8 @src(i16 %a, i16 %b, i1 %cond) {\r\n  %sel = select i1 %cond, i16 1, i16 254\r\n  %cond1 = icmp ne i16 %b, 0\r\n  %mask = and i16 %a, 255\r\n  %cond2 = icmp ne i16 %mask, 255\r\n  %cond3 = or i1 %cond1, %cond2\r\n  %sel2 = select i1 %cond3, i16 %sel, i16 255\r\n  %sub = sub i16 %sel2, %a\r\n  %trunc = trunc i16 %sub to i8\r\n  ret i8 %trunc\r\n}\r\n\r\ndefine i8 @tgt(i16 %a1, i16 %a2, i1 %cond) {\r\n  %1 = trunc i16 %a1 to i8\r\n  %conv6 = xor i8 %1, -1\r\n  ret i8 %conv6\r\n}\r\n```"
      }
    ]
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  }
}