{
  "bug_id": "84709",
  "issue_url": "https://github.com/llvm/llvm-project/issues/84709",
  "bug_type": "crash",
  "base_commit": "4d0f79e346ceb0ddb25a94053c612a5b34a72100",
  "knowledge_cutoff": "2024-03-11T03:25:11Z",
  "lit_test_dir": [
    "llvm/test/Transforms/LoopStrengthReduce"
  ],
  "hints": {
    "fix_commit": "beba307c5bc206168bdea3b893e02ea31579fe62",
    "components": [
      "LoopStrengthReduce"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp": [
        [
          6971,
          6976
        ],
        [
          6989,
          6994
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp": [
        "ReduceLoopStrength"
      ]
    }
  },
  "patch": "commit beba307c5bc206168bdea3b893e02ea31579fe62\nAuthor: Nikita Popov <npopov@redhat.com>\nDate:   Tue Mar 12 16:23:25 2024 +0100\n\n    [LSR] Clear SCEVExpander before deleting phi nodes\n    \n    Fixes https://github.com/llvm/llvm-project/issues/84709.\n\ndiff --git a/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp b/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp\nindex 8b078ddc4e74..c4e1a0db8b32 100644\n--- a/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp\n+++ b/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp\n@@ -6971,6 +6971,7 @@ static bool ReduceLoopStrength(Loop *L, IVUsers &IU, ScalarEvolution &SE,\n     Rewriter.setDebugType(DEBUG_TYPE);\n #endif\n     unsigned numFolded = Rewriter.replaceCongruentIVs(L, &DT, DeadInsts, &TTI);\n+    Rewriter.clear();\n     if (numFolded) {\n       Changed = true;\n       RecursivelyDeleteTriviallyDeadInstructionsPermissive(DeadInsts, &TLI,\n@@ -6989,6 +6990,7 @@ static bool ReduceLoopStrength(Loop *L, IVUsers &IU, ScalarEvolution &SE,\n     SCEVExpander Rewriter(SE, DL, \"lsr\", true);\n     int Rewrites = rewriteLoopExitValues(L, &LI, &TLI, &SE, &TTI, Rewriter, &DT,\n                                          UnusedIndVarInLoop, DeadInsts);\n+    Rewriter.clear();\n     if (Rewrites) {\n       Changed = true;\n       RecursivelyDeleteTriviallyDeadInstructionsPermissive(DeadInsts, &TLI,\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/LoopStrengthReduce/pr84709.ll",
      "commands": [
        "opt -S -passes=loop-reduce < %s"
      ],
      "tests": [
        {
          "test_name": "test",
          "test_body": "define i64 @test() {\nbb:\n  br label %bb1\n\nbb1:                                              ; preds = %bb5, %bb\n  %phi = phi i8 [ %zext6, %bb5 ], [ 0, %bb ]\n  br label %bb2\n\nbb2:                                              ; preds = %bb2, %bb1\n  %phi3 = phi i8 [ %add, %bb2 ], [ %phi, %bb1 ]\n  %phi4 = phi i32 [ 0, %bb2 ], [ 1, %bb1 ]\n  %add = add i8 %phi3, 1\n  br i1 true, label %bb5, label %bb2\n\nbb5:                                              ; preds = %bb2\n  %zext = zext i8 %add to i32\n  %icmp = icmp sge i32 %phi4, 0\n  %zext6 = zext i1 %icmp to i8\n  br label %bb1\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[LSR] crashed on \"asserting value handle still pointed to this value!\"",
    "body": "https://godbolt.org/z/MWWcGdxT5\r\nLSR crashed when deleting dead PHIs ",
    "author": "coderchenlin",
    "labels": [
      "llvm:crash",
      "llvm:transforms"
    ],
    "comments": [
      {
        "author": "coderchenlin",
        "body": "I will give a resolution to fix it later."
      },
      {
        "author": "coderchenlin",
        "body": " #84777 For this case, I think we should not set the value with nullptr when the value's uses are not empty.   "
      },
      {
        "author": "nikic",
        "body": "Reduced:\r\n```llvm\r\ndefine i64 @test() {\r\nbb:\r\n  br label %bb1\r\n\r\nbb1:\r\n  %phi = phi i8 [ %zext6, %bb5 ], [ 0, %bb ]\r\n  br label %bb2\r\n\r\nbb2:\r\n  %phi3 = phi i8 [ %add, %bb2 ], [ %phi, %bb1 ]\r\n  %phi4 = phi i32 [ 0, %bb2 ], [ 1, %bb1 ]\r\n  %add = add i8 %phi3, 1\r\n  br i1 true, label %bb5, label %bb2\r\n\r\nbb5:\r\n  %zext = zext i8 %add to i32\r\n  %icmp = icmp sge i32 %phi4, 0\r\n  %zext6 = zext i1 %icmp to i8\r\n  br label %bb1\r\n}\r\n```"
      }
    ]
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  },
  "bisect": "dbf6ab5ef9ae0e1f4706917c2b3f98a67c35826e"
}