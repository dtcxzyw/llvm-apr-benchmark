{
  "bug_id": "112666",
  "issue_url": "https://github.com/llvm/llvm-project/issues/112666",
  "bug_type": "miscompilation",
  "base_commit": "d6d73ec89e493c69cf24dc3a710d861e2ce08acb",
  "knowledge_cutoff": "2024-10-17T06:28:53Z",
  "lit_test_dir": [
    "llvm/test/Transforms/InstCombine"
  ],
  "hints": {
    "fix_commit": "ff07df6620c32571c7e13ff96ec7976c63ed0ab8",
    "components": [
      "InstCombine"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp": [
        [
          333,
          338
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp": [
        "Negator::visitImpl"
      ]
    }
  },
  "patch": "commit ff07df6620c32571c7e13ff96ec7976c63ed0ab8\nAuthor: Yingwei Zheng <dtcxzyw2333@gmail.com>\nDate:   Fri Nov 8 16:20:04 2024 +0800\n\n    [InstCombine] Drop nsw in negation of select (#112893)\n    \n    Closes https://github.com/llvm/llvm-project/issues/112666 and\n    https://github.com/llvm/llvm-project/issues/114181.\n\ndiff --git a/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp b/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp\nindex 9bd848552615..2210336d92bf 100644\n--- a/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp\n+++ b/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp\n@@ -333,6 +333,17 @@ std::array<Value *, 2> Negator::getSortedOperandsOfBinOp(Instruction *I) {\n       NewSelect->swapValues();\n       // Don't swap prof metadata, we didn't change the branch behavior.\n       NewSelect->setName(I->getName() + \".neg\");\n+      // Poison-generating flags should be dropped\n+      Value *TV = NewSelect->getTrueValue();\n+      Value *FV = NewSelect->getFalseValue();\n+      if (match(TV, m_Neg(m_Specific(FV))))\n+        cast<Instruction>(TV)->dropPoisonGeneratingFlags();\n+      else if (match(FV, m_Neg(m_Specific(TV))))\n+        cast<Instruction>(FV)->dropPoisonGeneratingFlags();\n+      else {\n+        cast<Instruction>(TV)->dropPoisonGeneratingFlags();\n+        cast<Instruction>(FV)->dropPoisonGeneratingFlags();\n+      }\n       Builder.Insert(NewSelect);\n       return NewSelect;\n     }\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/InstCombine/sub-of-negatible.ll",
      "commands": [
        "opt < %s -passes=instcombine -S"
      ],
      "tests": [
        {
          "test_name": "negate_select_of_op_vs_negated_op",
          "test_body": "declare void @use8(i8)\n\ndefine i8 @negate_select_of_op_vs_negated_op(i8 %x, i8 %y, i1 %c) {\n  %t0 = sub i8 0, %x\n  call void @use8(i8 %t0)\n  %t1 = select i1 %c, i8 %t0, i8 %x, !prof !0\n  %t2 = sub i8 %y, %t1\n  ret i8 %t2\n}\n\n!0 = !{!\"branch_weights\", i32 40, i32 1}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[InstCombine] `nsw` flag should be dropped in Negator",
    "body": "Reproducer: https://alive2.llvm.org/ce/z/ZFF_QK\r\n```\r\ndefine i8 @src(i8 %x, i8 %y, i1 %c) {\r\n  %t0 = sub nsw i8 0, %x\r\n  %t1 = select i1 %c, i8 %t0, i8 %x\r\n  %t2 = sub i8 %y, %t1\r\n  ret i8 %t2\r\n}\r\n\r\ndefine i8 @tgt(i8 %x, i8 %y, i1 %c) {\r\n  %t0 = sub nsw i8 0, %x\r\n  %1 = select i1 %c, i8 %x, i8 %t0\r\n  %t2 = add i8 %1, %y\r\n  ret i8 %t2\r\n}\r\n```\r\n```\r\nTransformation doesn't verify!\r\n\r\nERROR: Target is more poisonous than source\r\n\r\nExample:\r\ni8 %x = #x80 (128, -128)\r\ni8 %y = #x00 (0)\r\ni1 %c = #x0 (0)\r\n\r\nSource:\r\ni8 %t0 = poison\r\ni8 %t1 = #x80 (128, -128)\r\ni8 %t2 = #x80 (128, -128)\r\n\r\nTarget:\r\ni8 %t0 = poison\r\ni8 %#1 = poison\r\ni8 %t2 = poison\r\nSource value: #x80 (128, -128)\r\nTarget value: poison\r\n```",
    "author": "dtcxzyw",
    "labels": [
      "miscompilation",
      "llvm:instcombine"
    ],
    "comments": [
      {
        "author": "AZero13",
        "body": "Is this an issue in 19.x or just main?"
      },
      {
        "author": "AZero13",
        "body": "Confirmed this issue exists in 19.x"
      }
    ]
  }
}