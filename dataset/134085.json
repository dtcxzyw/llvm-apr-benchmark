{
  "bug_id": "134085",
  "issue_url": "https://github.com/llvm/llvm-project/issues/134085",
  "bug_type": "crash",
  "base_commit": "f475ccd3794ebce22950b707ad390fae7e235b46",
  "knowledge_cutoff": "2025-04-02T13:46:38Z",
  "lit_test_dir": [
    "llvm/test/Transforms/SLPVectorizer"
  ],
  "hints": {
    "fix_commit": "843ef77dc22afd1923b891acd4c46c8f8c8c93ae",
    "components": [
      "SLPVectorizer"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        [
          14335,
          14341
        ],
        [
          14552,
          14557
        ],
        [
          14596,
          14601
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp": [
        "BoUpSLP::isGatherShuffledSingleRegisterEntry"
      ]
    }
  },
  "patch": "commit 843ef77dc22afd1923b891acd4c46c8f8c8c93ae\nAuthor: Alexey Bataev <a.bataev@outlook.com>\nDate:   Wed Apr 2 11:44:36 2025 -0700\n\n    [SLP]Update mapping between values and their matching entries upon selection\n    \n    Need to update the mapping between gathered values and their matching\n    entries, if the list of the entries is updated and only some of them are\n    selected for final shuffling.\n    \n    Fixes #134085\n\ndiff --git a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\nindex 838e952c024c..b82a66ca3b88 100644\n--- a/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n+++ b/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp\n@@ -14335,7 +14335,7 @@ BoUpSLP::isGatherShuffledSingleRegisterEntry(\n   // single vector. If we have 2 different sets, we're in situation where we\n   // have a permutation of 2 input vectors.\n   SmallVector<SmallPtrSet<const TreeEntry *, 4>> UsedTEs;\n-  DenseMap<Value *, int> UsedValuesEntry;\n+  SmallDenseMap<Value *, int> UsedValuesEntry;\n   SmallPtrSet<const Value *, 16> VisitedValue;\n   auto CheckAndUseSameNode = [&](const TreeEntry *TEPtr) {\n     // The node is reused - exit.\n@@ -14552,6 +14552,8 @@ BoUpSLP::isGatherShuffledSingleRegisterEntry(\n     // No perfect match, just shuffle, so choose the first tree node from the\n     // tree.\n     Entries.push_back(FirstEntries.front());\n+    // Update mapping between values and corresponding tree entries.\n+    for_each(UsedValuesEntry, [&](auto &P) { P.second = 0; });\n     VF = FirstEntries.front()->getVectorFactor();\n   } else {\n     // Try to find nodes with the same vector factor.\n@@ -14596,6 +14598,18 @@ BoUpSLP::isGatherShuffledSingleRegisterEntry(\n     } else {\n       VF = Entries.front()->getVectorFactor();\n     }\n+    SmallVector<SmallPtrSet<Value *, 8>> ValuesToEntries;\n+    for (const TreeEntry *E : Entries)\n+      ValuesToEntries.emplace_back().insert(E->Scalars.begin(),\n+                                            E->Scalars.end());\n+    // Update mapping between values and corresponding tree entries.\n+    for_each(UsedValuesEntry, [&](auto &P) {\n+      for (unsigned Idx : seq<unsigned>(ValuesToEntries.size()))\n+        if (ValuesToEntries[Idx].contains(P.first)) {\n+          P.second = Idx;\n+          break;\n+        }\n+    });\n   }\n \n   bool IsSplatOrUndefs = isSplat(VL) || all_of(VL, IsaPred<UndefValue>);\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/SLPVectorizer/X86/matched-nodes-updated.ll",
      "commands": [
        "opt -S --passes=slp-vectorizer -mtriple=x86_64-unknown-linux-gnu < %s"
      ],
      "tests": [
        {
          "test_name": "<module>",
          "test_body": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\ndefine i32 @main(i32 %s.0) {\nentry:\n  br label %k\n\nk:                                                ; preds = %t, %entry\n  %.pre = phi i32 [ 0, %entry ], [ %.pre4053, %t ]\n  br label %o\n\nif.end3:                                          ; No predecessors!\n  br label %if.end6\n\nif.end6:                                          ; preds = %o, %if.end3\n  %.pre43 = phi i32 [ 0, %if.end3 ], [ 0, %o ]\n  %0 = phi i32 [ 0, %if.end3 ], [ 0, %o ]\n  %1 = phi i32 [ 0, %if.end3 ], [ 0, %o ]\n  %h.4 = phi i32 [ 0, %if.end3 ], [ %h.6, %o ]\n  %i.4 = phi i32 [ 0, %if.end3 ], [ %i.7, %o ]\n  %j.4 = phi i32 [ 0, %if.end3 ], [ %j.5, %o ]\n  %l.4 = phi i32 [ 0, %if.end3 ], [ 0, %o ]\n  %not8 = xor i32 %i.4, 0\n  %not9 = xor i32 %h.4, 0\n  br i1 false, label %if.end24, label %if.then11\n\nif.then11:                                        ; preds = %if.end6\n  br label %if.end24\n\nif.then18:                                        ; No predecessors!\n  br label %t\n\nt:                                                ; preds = %o, %if.then18\n  %.pre40 = phi i32 [ %.pre4053, %o ], [ 0, %if.then18 ]\n  %i.5 = phi i32 [ 0, %o ], [ 0, %if.then18 ]\n  %l.5 = phi i32 [ %l.7, %o ], [ 0, %if.then18 ]\n  %r.2 = phi i32 [ %r.4, %o ], [ 0, %if.then18 ]\n  %s.2 = phi i32 [ %s.4, %o ], [ 0, %if.then18 ]\n  br i1 false, label %if.end24, label %k\n\nif.end24:                                         ; preds = %t, %if.then11, %if.end6\n  %.pre4050 = phi i32 [ 0, %if.then11 ], [ 0, %if.end6 ], [ %.pre40, %t ]\n  %.pre42 = phi i32 [ 0, %if.then11 ], [ %.pre43, %if.end6 ], [ %.pre40, %t ]\n  %2 = phi i32 [ 0, %if.then11 ], [ %0, %if.end6 ], [ %.pre40, %t ]\n  %3 = phi i32 [ 0, %if.then11 ], [ %1, %if.end6 ], [ %.pre40, %t ]\n  %i.6 = phi i32 [ %i.4, %if.then11 ], [ %i.7, %if.end6 ], [ %i.5, %t ]\n  %l.6 = phi i32 [ 0, %if.then11 ], [ %l.4, %if.end6 ], [ %l.5, %t ]\n  %r.3 = phi i32 [ %j.4, %if.then11 ], [ %not8, %if.end6 ], [ %r.2, %t ]\n  %s.3 = phi i32 [ 0, %if.then11 ], [ %not9, %if.end6 ], [ %s.2, %t ]\n  br label %o\n\no:                                                ; preds = %if.end24, %k\n  %.pre4053 = phi i32 [ 0, %k ], [ %.pre4050, %if.end24 ]\n  %.pre46 = phi i32 [ 0, %k ], [ %.pre42, %if.end24 ]\n  %4 = phi i32 [ 0, %k ], [ %2, %if.end24 ]\n  %5 = phi i32 [ 0, %k ], [ %3, %if.end24 ]\n  %h.6 = phi i32 [ 0, %k ], [ %r.3, %if.end24 ]\n  %i.7 = phi i32 [ 0, %k ], [ %i.6, %if.end24 ]\n  %j.5 = phi i32 [ 0, %k ], [ %s.3, %if.end24 ]\n  %l.7 = phi i32 [ %.pre, %k ], [ %l.6, %if.end24 ]\n  %r.4 = phi i32 [ 0, %k ], [ %r.3, %if.end24 ]\n  %s.4 = phi i32 [ %s.0, %k ], [ %s.3, %if.end24 ]\n  br i1 false, label %t, label %if.end6\n\n; uselistorder directives\n  uselistorder i32 %.pre4053, { 1, 0 }\n  uselistorder i32 %i.7, { 1, 0 }\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "clang crashes at -O{s,2,3} on x86_64-linux-gnu: Assertion `idx < size()' failed",
    "body": "It appears to be a recent regression as it doesn't reproduce with 20.1.0.\n\nCompiler Explorer: https://godbolt.org/z/nKW8o5f8a\n\n```\n[516] % clangtk -v\nclang version 21.0.0git (https://github.com/llvm/llvm-project.git 842785adf7349f07a91320d49ff8a10971e04409)\nTarget: x86_64-unknown-linux-gnu\nThread model: posix\nInstalledDir: /local/suz-local/software/local/clang-trunk/bin\nBuild config: +assertions\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/10\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/11\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9\nSelected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/11\nCandidate multilib: .;@m64\nSelected multilib: .;@m64\n[517] % \n[517] % clangtk -O3 small.c\nclang-21: /local/suz-local/software/clangbuild/llvm-project/llvm/include/llvm/ADT/SmallVector.h:291: T& llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::operator[](llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::size_type) [with T = const llvm::slpvectorizer::BoUpSLP::TreeEntry*; <template-parameter-1-2> = void; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::reference = const llvm::slpvectorizer::BoUpSLP::TreeEntry*&; llvm::SmallVectorTemplateCommon<T, <template-parameter-1-2> >::size_type = long unsigned int]: Assertion `idx < size()' failed.\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.\nStack dump:\n0.\tProgram arguments: /local/suz-local/software/local/clang-trunk/bin/clang-21 -cc1 -triple x86_64-unknown-linux-gnu -emit-obj -dumpdir a- -disable-free -clear-ast-before-backend -main-file-name small.c -mrelocation-model pic -pic-level 2 -pic-is-pie -mframe-pointer=none -fmath-errno -ffp-contract=on -fno-rounding-math -mconstructor-aliases -funwind-tables=2 -target-cpu x86-64 -tune-cpu generic -debugger-tuning=gdb -fdebug-compilation-dir=/local/suz-local/software/emitesting/bugs/20250402-clangtk-m64-O3-build-141643/delta -fcoverage-compilation-dir=/local/suz-local/software/emitesting/bugs/20250402-clangtk-m64-O3-build-141643/delta -resource-dir /local/suz-local/software/local/clang-trunk/lib/clang/21 -I /usr/local/include -I /local/suz-local/software/local/include -internal-isystem /local/suz-local/software/local/clang-trunk/lib/clang/21/include -internal-isystem /usr/local/include -internal-isystem /usr/lib/gcc/x86_64-linux-gnu/11/../../../../x86_64-linux-gnu/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -O3 -ferror-limit 19 -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fcolor-diagnostics -vectorize-loops -vectorize-slp -faddrsig -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o /tmp/small-1ffa5d.o -x c small.c\n1.\t<eof> parser at end of file\n2.\tOptimizer\n3.\tRunning pass \"function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)\" on module \"small.c\"\n4.\tRunning pass \"slp-vectorizer\" on function \"main\"\n #0 0x000055aa281b4bff llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x459bbff)\n #1 0x000055aa281b23b4 SignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n #2 0x00007f3259793420 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\n #3 0x00007f32591ca00b raise /build/glibc-LcI20x/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\n #4 0x00007f32591a9859 abort /build/glibc-LcI20x/glibc-2.31/stdlib/abort.c:81:7\n #5 0x00007f32591a9729 get_sysdep_segment_value /build/glibc-LcI20x/glibc-2.31/intl/loadmsgcat.c:509:8\n #6 0x00007f32591a9729 _nl_load_domain /build/glibc-LcI20x/glibc-2.31/intl/loadmsgcat.c:970:34\n #7 0x00007f32591bafd6 (/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n #8 0x000055aa29cd9e82 llvm::slpvectorizer::BoUpSLP::isGatherShuffledSingleRegisterEntry(llvm::slpvectorizer::BoUpSLP::TreeEntry const*, llvm::ArrayRef<llvm::Value*>, llvm::MutableArrayRef<int>, llvm::SmallVectorImpl<llvm::slpvectorizer::BoUpSLP::TreeEntry const*>&, unsigned int, bool) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x60c0e82)\n #9 0x000055aa29cda9f8 llvm::slpvectorizer::BoUpSLP::isGatherShuffledEntry(llvm::slpvectorizer::BoUpSLP::TreeEntry const*, llvm::ArrayRef<llvm::Value*>, llvm::SmallVectorImpl<int>&, llvm::SmallVectorImpl<llvm::SmallVector<llvm::slpvectorizer::BoUpSLP::TreeEntry const*, 6u>>&, unsigned int, bool) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x60c19f8)\n#10 0x000055aa29cdb803 llvm::slpvectorizer::BoUpSLP::findReusedOrderedScalars(llvm::slpvectorizer::BoUpSLP::TreeEntry const&, bool, bool) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x60c2803)\n#11 0x000055aa29d11537 llvm::slpvectorizer::BoUpSLP::getReorderingData(llvm::slpvectorizer::BoUpSLP::TreeEntry const&, bool, bool) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x60f8537)\n#12 0x000055aa29d15fc6 llvm::slpvectorizer::BoUpSLP::reorderBottomToTop(bool) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x60fcfc6)\n#13 0x000055aa29d236d8 llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x610a6d8)\n#14 0x000055aa29d28bdd bool tryToVectorizeSequence<llvm::Value>(llvm::SmallVectorImpl<llvm::Value*>&, llvm::function_ref<bool (llvm::Value*, llvm::Value*)>, llvm::function_ref<bool (llvm::Value*, llvm::Value*)>, llvm::function_ref<bool (llvm::ArrayRef<llvm::Value*>, bool)>, bool, llvm::slpvectorizer::BoUpSLP&) (.constprop.0) SLPVectorizer.cpp:0:0\n#15 0x000055aa29d2a5d1 llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x61115d1)\n#16 0x000055aa29d3268e llvm::SLPVectorizerPass::runImpl(llvm::Function&, llvm::ScalarEvolution*, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo*, llvm::AAResults*, llvm::LoopInfo*, llvm::DominatorTree*, llvm::AssumptionCache*, llvm::DemandedBits*, llvm::OptimizationRemarkEmitter*) (.part.0) SLPVectorizer.cpp:0:0\n#17 0x000055aa29d33253 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x611a253)\n#18 0x000055aa2979da56 llvm::detail::PassModel<llvm::Function, llvm::SLPVectorizerPass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x5b84a56)\n#19 0x000055aa27b29009 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x3f10009)\n#20 0x000055aa253f1e66 llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x17d8e66)\n#21 0x000055aa27b27882 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x3f0e882)\n#22 0x000055aa253ef826 llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x17d6826)\n#23 0x000055aa27b272a1 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x3f0e2a1)\n#24 0x000055aa28473351 (anonymous namespace)::EmitAssemblyHelper::RunOptimizationPipeline(clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>&, std::unique_ptr<llvm::ToolOutputFile, std::default_delete<llvm::ToolOutputFile>>&, clang::BackendConsumer*) BackendUtil.cpp:0:0\n#25 0x000055aa28476c41 clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x485dc41)\n#26 0x000055aa28b92391 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x4f79391)\n#27 0x000055aa2a56658c clang::ParseAST(clang::Sema&, bool, bool) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x694d58c)\n#28 0x000055aa28b927c8 clang::CodeGenAction::ExecuteAction() (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x4f797c8)\n#29 0x000055aa28e8fcb9 clang::FrontendAction::Execute() (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x5276cb9)\n#30 0x000055aa28e0f98e clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x51f698e)\n#31 0x000055aa28f86ae6 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x536dae6)\n#32 0x000055aa24f83afd cc1_main(llvm::ArrayRef<char const*>, char const*, void*) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x136aafd)\n#33 0x000055aa24f7b08a ExecuteCC1Tool(llvm::SmallVectorImpl<char const*>&, llvm::ToolContext const&) driver.cpp:0:0\n#34 0x000055aa24f7f312 clang_main(int, char**, llvm::ToolContext const&) (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x1366312)\n#35 0x000055aa24e62f8b main (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x1249f8b)\n#36 0x00007f32591ab083 __libc_start_main /build/glibc-LcI20x/glibc-2.31/csu/../csu/libc-start.c:342:3\n#37 0x000055aa24f7ab1e _start (/local/suz-local/software/local/clang-trunk/bin/clang-21+0x1361b1e)\nclangtk: error: unable to execute command: Aborted\nclangtk: error: clang frontend command failed due to signal (use -v to see invocation)\nclang version 21.0.0git (https://github.com/llvm/llvm-project.git 842785adf7349f07a91320d49ff8a10971e04409)\nTarget: x86_64-unknown-linux-gnu\nThread model: posix\nInstalledDir: /local/suz-local/software/local/clang-trunk/bin\nBuild config: +assertions\nclangtk: note: diagnostic msg: \n********************\n\nPLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:\nPreprocessed source(s) and associated run script(s) are located at:\nclangtk: note: diagnostic msg: /tmp/small-a83f08.c\nclangtk: note: diagnostic msg: /tmp/small-a83f08.sh\nclangtk: note: diagnostic msg: \n\n********************\n[518] % \n[518] % cat small.c\nint printf(const char *, ...);\nint a, b, c, d;\nint main() {\n  int g = 1, h = 0, i, j;\nk:\n  if (g) {\n    int l = a, n;\n  m:\n    n = d;\n    if (n)\n      goto o;\n    j = l;\n  }\n  int p = a / ~b;\n  if (g)\n  q:\n    b = a;\n  c = p;\n  int r = g ? 0 : ~i, s = ~h;\n  if (g) {\n    r = j;\n    if (b && 0 <= i) {\n      if (h) {\n        g = 0;\n        goto m;\n      }\n      i = a = -a;\n      if (a)\n        printf(\"0\");\n    t:\n      j = 0;\n      if (d)\n        goto k;\n    }\n  }\n  h = r;\n  j = s;\n  if (a) {\n  o:\n    if (a && i)\n      goto t;\n    goto q;\n  }\n  return 0;\n}\n```",
    "author": "zhendongsu",
    "labels": [
      "llvm:SLPVectorizer",
      "crash"
    ],
    "comments": [
      {
        "author": "dtcxzyw",
        "body": "Reduced reproducer: https://godbolt.org/z/E7zsza3bT"
      }
    ]
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  },
  "bisect": "f475ccd3794ebce22950b707ad390fae7e235b46"
}