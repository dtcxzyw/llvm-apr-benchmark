{
  "bug_id": "124267",
  "issue_url": "https://github.com/llvm/llvm-project/issues/124267",
  "bug_type": "miscompilation",
  "base_commit": "9cf52fe1f94fdcd8e27c76f7d33a80eeb2075833",
  "knowledge_cutoff": "2025-01-24T13:05:38Z",
  "lit_test_dir": [
    "llvm/test/Analysis/ValueTracking"
  ],
  "hints": {
    "fix_commit": "c546b5317c518987a5f45dd4c4d25321a955c758",
    "components": [
      "ValueTracking"
    ],
    "bug_location_lineno": {
      "llvm/lib/Analysis/ValueTracking.cpp": [
        [
          9494,
          9500
        ],
        [
          9504,
          9510
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Analysis/ValueTracking.cpp": [
        "isImpliedCondICmps"
      ]
    }
  },
  "patch": "commit c546b5317c518987a5f45dd4c4d25321a955c758\nAuthor: DianQK <dianqk@dianqk.net>\nDate:   Fri Jan 24 23:02:50 2025 +0800\n\n    [ValueTracking] Pass changed predicate `SignedLPred` to `isImpliedByMatchingCmp` (#124271)\n    \n    Fixes #124267.\n    \n    Since we are using the new predicate, we should also update the\n    parameters of `isImpliedByMatchingCmp`.\n\ndiff --git a/llvm/lib/Analysis/ValueTracking.cpp b/llvm/lib/Analysis/ValueTracking.cpp\nindex 264fedd6b66b..eba728c7c8c3 100644\n--- a/llvm/lib/Analysis/ValueTracking.cpp\n+++ b/llvm/lib/Analysis/ValueTracking.cpp\n@@ -9494,7 +9494,7 @@ isImpliedCondICmps(const ICmpInst *LHS, CmpPredicate RPred, const Value *R0,\n        SignedLPred == ICmpInst::ICMP_SGE) &&\n       match(R0, m_NSWSub(m_Specific(L0), m_Specific(L1)))) {\n     if (match(R1, m_NonPositive()) &&\n-        ICmpInst::isImpliedByMatchingCmp(LPred, RPred) == false)\n+        ICmpInst::isImpliedByMatchingCmp(SignedLPred, RPred) == false)\n       return false;\n   }\n \n@@ -9504,7 +9504,7 @@ isImpliedCondICmps(const ICmpInst *LHS, CmpPredicate RPred, const Value *R0,\n        SignedLPred == ICmpInst::ICMP_SLE) &&\n       match(R0, m_NSWSub(m_Specific(L0), m_Specific(L1)))) {\n     if (match(R1, m_NonNegative()) &&\n-        ICmpInst::isImpliedByMatchingCmp(LPred, RPred) == true)\n+        ICmpInst::isImpliedByMatchingCmp(SignedLPred, RPred) == true)\n       return true;\n   }\n \n",
  "tests": [
    {
      "file": "llvm/test/Analysis/ValueTracking/implied-condition-samesign.ll",
      "commands": [
        "opt -passes=instsimplify -S %s"
      ],
      "tests": [
        {
          "test_name": "gt_sub_nsw_ult",
          "test_body": "define i1 @gt_sub_nsw_ult(i8 %L0, i8 %L1, i1 %V) {\n  %LHS = icmp samesign ugt i8 %L0, %L1\n  br i1 %LHS, label %LHS_true, label %LHS_false\n\nLHS_true:                                         ; preds = %0\n  %R0 = sub nsw i8 %L0, %L1\n  %RHS = icmp ult i8 %R0, -1\n  ret i1 %RHS\n\nLHS_false:                                        ; preds = %0\n  ret i1 %V\n}\n"
        },
        {
          "test_name": "lt_sub_nsw_ult",
          "test_body": "define i1 @lt_sub_nsw_ult(i8 %L0, i8 %L1, i1 %V) {\n  %LHS = icmp samesign ult i8 %L0, %L1\n  br i1 %LHS, label %LHS_true, label %LHS_false\n\nLHS_true:                                         ; preds = %0\n  %R0 = sub nsw i8 %L0, %L1\n  %RHS = icmp ult i8 %R0, 1\n  ret i1 %RHS\n\nLHS_false:                                        ; preds = %0\n  ret i1 %V\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[ValueTracking] miscompile in samesign compare",
    "body": "#122590 and #122700 miscompile the following code:\n\n```llvm\ndefine i1 @src(i8 %L0, i8 %L1, i1 %V) {\n  %LHS = icmp samesign ugt i8 %L0, %L1\n  %R0 = sub nsw i8 %L0, %L1\n  %RHS = icmp ult i8 %R0, -1\n  br i1 %LHS, label %LHS_true, label %LHS_false\n\nLHS_true:\n  br label %EXIT\n\nLHS_false:\n  br label %EXIT\n\nEXIT:\n  %RET = phi i1 [ %RHS, %LHS_true ], [ %V, %LHS_false ]\n  ret i1 %RET\n}\n```\n\n`%RHS` should be 1: https://alive2.llvm.org/ce/z/RscAzy.",
    "author": "DianQK",
    "labels": [
      "miscompilation",
      "llvm:analysis"
    ],
    "comments": []
  }
}