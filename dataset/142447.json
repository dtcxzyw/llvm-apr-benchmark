{
  "bug_id": "142447",
  "issue_url": "https://github.com/llvm/llvm-project/issues/142447",
  "bug_type": "crash",
  "base_commit": "4b2cb118bc5825c309724d536053c6f9817e2eb9",
  "knowledge_cutoff": "2025-06-02T17:50:28Z",
  "lit_test_dir": [
    "llvm/test/Transforms/InstSimplify"
  ],
  "hints": {
    "fix_commit": "d9a5f7b118bfc9ab4b7325fae25073729d8e08be",
    "components": [
      "IR"
    ],
    "bug_location_lineno": {
      "llvm/lib/IR/ConstantFold.cpp": [
        [
          1149,
          1158
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/IR/ConstantFold.cpp": [
        "llvm::ConstantFoldCompareInstruction"
      ]
    }
  },
  "patch": "commit d9a5f7b118bfc9ab4b7325fae25073729d8e08be\nAuthor: Yingwei Zheng <dtcxzyw2333@gmail.com>\nDate:   Tue Jun 3 19:51:21 2025 +0800\n\n    [ConstantFold] Constant fold icmp of boolean scalable vectors (#142528)\n    \n    Closes https://github.com/llvm/llvm-project/issues/142447.\n\ndiff --git a/llvm/lib/IR/ConstantFold.cpp b/llvm/lib/IR/ConstantFold.cpp\nindex 7e5fda229b85..b9db402fe956 100644\n--- a/llvm/lib/IR/ConstantFold.cpp\n+++ b/llvm/lib/IR/ConstantFold.cpp\n@@ -1149,10 +1149,10 @@ Constant *llvm::ConstantFoldCompareInstruction(CmpInst::Predicate Predicate,\n   }\n \n   // If the comparison is a comparison between two i1's, simplify it.\n-  if (C1->getType()->isIntegerTy(1)) {\n+  if (C1->getType()->isIntOrIntVectorTy(1)) {\n     switch (Predicate) {\n     case ICmpInst::ICMP_EQ:\n-      if (isa<ConstantInt>(C2))\n+      if (isa<ConstantExpr>(C1))\n         return ConstantExpr::getXor(C1, ConstantExpr::getNot(C2));\n       return ConstantExpr::getXor(ConstantExpr::getNot(C1), C2);\n     case ICmpInst::ICMP_NE:\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/InstSimplify/compare.ll",
      "commands": [
        "opt < %s -passes=instcombine<no-verify-fixpoint> -S"
      ],
      "tests": [
        {
          "test_name": "icmp_ne_i1_vec_constant_expr",
          "test_body": "target datalayout = \"p:32:32-p1:64:64\"\n\ndefine <vscale x 8 x i1> @icmp_ne_i1_vec_constant_expr() {\nentry:\n  %cmp = icmp ne <vscale x 8 x i1> insertelement (<vscale x 8 x i1> poison, i1 true, i64 0), zeroinitializer\n  ret <vscale x 8 x i1> %cmp\n}\n"
        },
        {
          "test_name": "icmp_eq_i1_vec_constant_expr_commuted",
          "test_body": "target datalayout = \"p:32:32-p1:64:64\"\n\ndefine <vscale x 8 x i1> @icmp_eq_i1_vec_constant_expr_commuted() {\nentry:\n  %cmp = icmp eq <vscale x 8 x i1> zeroinitializer, insertelement (<vscale x 8 x i1> poison, i1 true, i64 0)\n  ret <vscale x 8 x i1> %cmp\n}\n"
        },
        {
          "test_name": "icmp_eq_false_by_trunc",
          "test_body": "target datalayout = \"p:32:32-p1:64:64\"\n\n; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write)\ndeclare void @llvm.assume(i1 noundef) #0\n\ndefine i1 @icmp_eq_false_by_trunc(i8 %x) {\n  %trunc = trunc i8 %x to i1\n  %not = xor i1 %trunc, true\n  call void @llvm.assume(i1 %not)\n  %cmp = icmp eq i8 %x, 1\n  ret i1 %cmp\n}\n\nattributes #0 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write) }\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[InstCombine] ICmp i1 X, C not simplified as expected. with opt \"-passes=lto<O3>\"",
    "body": "Full error message:\n```\nICmp i1 X, C not simplified as expected.\nUNREACHABLE executed at /scratch/ewlu/daily-upstream-build/llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:7182!\n```\n\nTestcase:\n```llvm ir\ntarget datalayout = \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\"\ntarget triple = \"riscv64-unknown-linux-gnu\"\n\n@a = external global i8\n\ndefine void @c() #0 {\nentry:\n  %0 = zext <vscale x 8 x i1> insertelement (<vscale x 8 x i1> poison, i1 true, i64 0) to <vscale x 8 x i32>\n  %1 = icmp ne <vscale x 8 x i32> %0, zeroinitializer\n  %2 = zext <vscale x 8 x i1> %1 to <vscale x 8 x i8>\n  %3 = call i8 @llvm.vector.reduce.xor.nxv8i8(<vscale x 8 x i8> %2)\n  store i8 %3, ptr @a, align 1\n  ret void\n}\n\n; Function Attrs: nocallback nofree nosync nounwind willreturn memory(read)\ndeclare <vscale x 8 x i16> @llvm.masked.gather.nxv8i16.nxv8p0(<vscale x 8 x ptr>, i32 immarg, <vscale x 8 x i1>, <vscale x 8 x i16>) #1\n\n; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare <vscale x 8 x i32> @llvm.smin.nxv8i32(<vscale x 8 x i32>, <vscale x 8 x i32>) #2\n\n; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare i8 @llvm.vector.reduce.xor.nxv8i8(<vscale x 8 x i8>) #2\n\ndefine i32 @main() {\nentry:\n  ret i32 0\n}\n\nattributes #0 = { \"target-features\"=\"+v\" }\nattributes #1 = { nocallback nofree nosync nounwind willreturn memory(read) }\nattributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }\n```\nThis might not be the fully reduced version. `llvm-reduce` aborted mid reduce for me\n\nCommands/backtrace:\n```\n$ /scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt \"-passes=lto<O3>\" reduced.ll\nWARNING: You're attempting to print out a bitcode file.\nThis is inadvisable as it may cause display problems. If\nyou REALLY want to taste LLVM bitcode first-hand, you\ncan force output with the `-f' option.\n\nICmp i1 X, C not simplified as expected.\nUNREACHABLE executed at /scratch/ewlu/daily-upstream-build/llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:7182!\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\nStack dump:\n0.      Program arguments: /scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt -passes=lto<O3> reduced.ll\n1.      Running pass \"function<eager-inv>(instcombine<max-iterations=1;no-verify-fixpoint>,aggressive-instcombine)\" on module \"reduced.ll\"\n2.      Running pass \"instcombine<max-iterations=1;no-verify-fixpoint>\" on function \"c\"\n #0 0x000058be7f45a172 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x35a5172)\n #1 0x000058be7f4571df llvm::sys::RunSignalHandlers() (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x35a21df)\n #2 0x000058be7f457324 SignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n #3 0x000077fe5fe45330 (/lib/x86_64-linux-gnu/libc.so.6+0x45330)\n #4 0x000077fe5fe9eb2c __pthread_kill_implementation ./nptl/pthread_kill.c:44:76\n #5 0x000077fe5fe9eb2c __pthread_kill_internal ./nptl/pthread_kill.c:78:10\n #6 0x000077fe5fe9eb2c pthread_kill ./nptl/pthread_kill.c:89:10\n #7 0x000077fe5fe4527e raise ./signal/../sysdeps/posix/raise.c:27:6\n #8 0x000077fe5fe288ff abort ./stdlib/abort.c:81:7\n #9 0x000058be7f38585e (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x34d085e)\n#10 0x000058be7e3f2501 llvm::InstCombinerImpl::visitICmpInst(llvm::ICmpInst&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x253d501)\n#11 0x000058be7e3464fa llvm::InstCombinerImpl::run() (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x24914fa)\n#12 0x000058be7e347d90 combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::BranchProbabilityInfo*, llvm::ProfileSummaryInfo*, llvm::InstCombineOptions const&) InstructionCombining.cpp:0:0\n#13 0x000058be7e3491e2 llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x24941e2)\n#14 0x000058be7c9bb605 llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0xb06605)\n#15 0x000058be7f2430fa llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x338e0fa)\n#16 0x000058be7c9bdc55 llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0xb08c55)\n#17 0x000058be7f2435e4 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x338e5e4)\n#18 0x000058be7c9b9895 llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0xb04895)\n#19 0x000058be7f241f6d llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x338cf6d)\n#20 0x000058be7c66b241 llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::ArrayRef<std::function<void (llvm::PassBuilder&)>>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x7b6241)\n#21 0x000058be7c65cd7c optMain (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x7a7d7c)\n#22 0x000077fe5fe2a1ca __libc_start_call_main ./csu/../sysdeps/nptl/libc_start_call_main.h:74:3\n#23 0x000077fe5fe2a28b call_init ./csu/../csu/libc-start.c:128:20\n#24 0x000077fe5fe2a28b __libc_start_main ./csu/../csu/libc-start.c:347:5\n#25 0x000058be7c6533d5 _start (/scratch/ewlu/daily-upstream-build/build-gcv/build-llvm-linux/bin/opt+0x79e3d5)\nAborted (core dumped)\n```\n\nGodbolt: https://godbolt.org/z/5cxdvhhGK\n\nFound via fuzzer (C program before reduction)",
    "author": "ewlu",
    "labels": [
      "crash-on-valid",
      "llvm:ir"
    ],
    "comments": []
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  },
  "bisect": "Cannot find a good commit"
}