{
  "bug_id": "115575",
  "issue_url": "https://github.com/llvm/llvm-project/issues/115575",
  "bug_type": "miscompilation",
  "base_commit": "6fb2a6044f11e251c3847d227049d9dae8b87796",
  "knowledge_cutoff": "2024-11-09T02:09:23Z",
  "lit_test_dir": [
    "llvm/test/Transforms/VectorCombine"
  ],
  "hints": {
    "fix_commit": "958e37cd1feabf29fb1cc3fb5ac82051ad8d43eb",
    "components": [
      "VectorCombine"
    ],
    "bug_location_lineno": {
      "llvm/lib/Transforms/Vectorize/VectorCombine.cpp": [
        [
          952,
          957
        ]
      ]
    },
    "bug_location_funcname": {
      "llvm/lib/Transforms/Vectorize/VectorCombine.cpp": [
        "VectorCombine::scalarizeBinopOrCmp"
      ]
    }
  },
  "patch": "commit 958e37cd1feabf29fb1cc3fb5ac82051ad8d43eb\nAuthor: Simon Pilgrim <llvm-dev@redking.me.uk>\nDate:   Sat Nov 9 15:59:52 2024 +0000\n\n    [VectorCombine] scalarizeBinopOrCmp - check for out of bounds element indices\n    \n    Fixes #115575\n\ndiff --git a/llvm/lib/Transforms/Vectorize/VectorCombine.cpp b/llvm/lib/Transforms/Vectorize/VectorCombine.cpp\nindex 04ea12ef0f12..b8754b03c2eb 100644\n--- a/llvm/lib/Transforms/Vectorize/VectorCombine.cpp\n+++ b/llvm/lib/Transforms/Vectorize/VectorCombine.cpp\n@@ -952,6 +952,12 @@ bool VectorCombine::scalarizeBinopOrCmp(Instruction &I) {\n   if (!IsConst0 && !IsConst1 && Index0 != Index1)\n     return false;\n \n+  auto *VecTy0 = cast<VectorType>(Ins0->getType());\n+  auto *VecTy1 = cast<VectorType>(Ins1->getType());\n+  if (VecTy0->getElementCount().getKnownMinValue() <= Index0 ||\n+      VecTy1->getElementCount().getKnownMinValue() <= Index1)\n+    return false;\n+\n   // Bail for single insertion if it is a load.\n   // TODO: Handle this once getVectorInstrCost can cost for load/stores.\n   auto *I0 = dyn_cast_or_null<Instruction>(V0);\n",
  "tests": [
    {
      "file": "llvm/test/Transforms/VectorCombine/X86/pr115575.ll",
      "commands": [
        "opt < %s -passes=vector-combine -S -mtriple=x86_64--"
      ],
      "tests": [
        {
          "test_name": "PR115575",
          "test_body": "define <2 x i8> @PR115575(i8 %x) {\n  %ins = insertelement <2 x i8> poison, i8 %x, i32 3\n  %bo = sdiv <2 x i8> %ins, <i8 5, i8 2>\n  ret <2 x i8> %bo\n}\n"
        }
      ]
    }
  ],
  "issue": {
    "title": "[VectorCombine] UB triggered after optimization",
    "body": "https://github.com/llvm/llvm-project/blob/c93e001ca695e905cb965b36d63f7a348d1dd809/llvm/lib/Transforms/Vectorize/VectorCombine.cpp#L1013-L1031\r\n\r\nAlive2 report: https://alive2.llvm.org/ce/z/78CM4x\r\n\r\n```llvm\r\n----------------------------------------\r\ndefine <2 x i8> @sdiv_constant_op1_not_undef_lane.2(i8 %x) {\r\n#0:\r\n  %ins = insertelement <2 x i8> poison, i8 %x, i32 3\r\n  %bo = sdiv <2 x i8> %ins, { 5, 2 }\r\n  ret <2 x i8> %bo\r\n}\r\n=>\r\ndefine <2 x i8> @sdiv_constant_op1_not_undef_lane.2(i8 %x) {\r\n#0:\r\n  %bo.scalar = sdiv i8 %x, poison\r\n  %bo = insertelement <2 x i8> poison, i8 %bo.scalar, i64 3\r\n  ret <2 x i8> %bo\r\n}\r\nTransformation doesn't verify!\r\n\r\nERROR: Source is more defined than target\r\n\r\nExample:\r\ni8 %x = poison\r\n\r\nSource:\r\n<2 x i8> %ins = < poison, poison >\r\n<2 x i8> %bo = < poison, poison >\r\n\r\nTarget:\r\ni8 %bo.scalar = UB triggered!\r\n\r\n\r\n\r\n----------------------------------------\r\ndefine <2 x i64> @urem_constant_op1_not_undef_lane.2(i64 %x) {\r\n#0:\r\n  %ins = insertelement <2 x i64> poison, i64 %x, i32 4294967295\r\n  %bo = urem <2 x i64> %ins, { 5, 2 }\r\n  ret <2 x i64> %bo\r\n}\r\n=>\r\ndefine <2 x i64> @urem_constant_op1_not_undef_lane.2(i64 %x) {\r\n#0:\r\n  %bo.scalar = urem i64 %x, poison\r\n  %bo = insertelement <2 x i64> poison, i64 %bo.scalar, i64 4294967295\r\n  ret <2 x i64> %bo\r\n}\r\nTransformation doesn't verify!\r\n\r\nERROR: Source is more defined than target\r\n\r\nExample:\r\ni64 %x = poison\r\n\r\nSource:\r\n<2 x i64> %ins = < poison, poison >\r\n<2 x i64> %bo = < poison, poison >\r\n\r\nTarget:\r\ni64 %bo.scalar = UB triggered!\r\n\r\n\r\nSummary:\r\n  0 correct transformations\r\n  2 incorrect transformations\r\n  0 failed-to-prove transformations\r\n  0 Alive2 errors\r\n```",
    "author": "bongjunj",
    "labels": [
      "miscompilation",
      "vectorizers"
    ],
    "comments": []
  },
  "verified": true,
  "properties": {
    "is_single_file_fix": true,
    "is_single_func_fix": true
  }
}